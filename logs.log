2024-07-17 11:18:32,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 11:18:32,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 11:18:32,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 11:18:32,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 11:20:25,340:INFO:PyCaret ClassificationExperiment
2024-07-17 11:20:25,340:INFO:Logging name: clf-default-name
2024-07-17 11:20:25,340:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-17 11:20:25,340:INFO:version 3.3.2
2024-07-17 11:20:25,340:INFO:Initializing setup()
2024-07-17 11:20:25,340:INFO:self.USI: 19f7
2024-07-17 11:20:25,340:INFO:self._variable_keys: {'is_multiclass', 'gpu_param', 'X_test', 'log_plots_param', 'fold_shuffle_param', '_available_plots', 'gpu_n_jobs_param', 'memory', 'X', 'target_param', 'seed', 'y', 'y_test', 'n_jobs_param', 'y_train', 'html_param', 'X_train', 'fold_generator', 'logging_param', 'exp_id', 'exp_name_log', '_ml_usecase', 'idx', 'USI', 'fix_imbalance', 'fold_groups_param', 'data', 'pipeline'}
2024-07-17 11:20:25,340:INFO:Checking environment
2024-07-17 11:20:25,340:INFO:python_version: 3.10.11
2024-07-17 11:20:25,341:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-17 11:20:25,341:INFO:machine: AMD64
2024-07-17 11:20:25,341:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-17 11:20:25,348:INFO:Memory: svmem(total=16516247552, available=1985032192, percent=88.0, used=14531215360, free=1985032192)
2024-07-17 11:20:25,348:INFO:Physical Core: 8
2024-07-17 11:20:25,348:INFO:Logical Core: 16
2024-07-17 11:20:25,348:INFO:Checking libraries
2024-07-17 11:20:25,348:INFO:System:
2024-07-17 11:20:25,348:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-17 11:20:25,349:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-17 11:20:25,349:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-17 11:20:25,349:INFO:PyCaret required dependencies:
2024-07-17 11:20:26,700:INFO:                 pip: 24.1.2
2024-07-17 11:20:26,700:INFO:          setuptools: 65.5.0
2024-07-17 11:20:26,700:INFO:             pycaret: 3.3.2
2024-07-17 11:20:26,700:INFO:             IPython: 8.21.0
2024-07-17 11:20:26,700:INFO:          ipywidgets: 8.1.3
2024-07-17 11:20:26,700:INFO:                tqdm: 4.66.4
2024-07-17 11:20:26,700:INFO:               numpy: 1.26.4
2024-07-17 11:20:26,700:INFO:              pandas: 2.1.4
2024-07-17 11:20:26,700:INFO:              jinja2: 3.1.2
2024-07-17 11:20:26,700:INFO:               scipy: 1.11.4
2024-07-17 11:20:26,700:INFO:              joblib: 1.3.2
2024-07-17 11:20:26,700:INFO:             sklearn: 1.4.2
2024-07-17 11:20:26,700:INFO:                pyod: 2.0.1
2024-07-17 11:20:26,700:INFO:            imblearn: 0.12.2
2024-07-17 11:20:26,700:INFO:   category_encoders: 2.6.3
2024-07-17 11:20:26,700:INFO:            lightgbm: 4.3.0
2024-07-17 11:20:26,700:INFO:               numba: 0.60.0
2024-07-17 11:20:26,700:INFO:            requests: 2.32.3
2024-07-17 11:20:26,700:INFO:          matplotlib: 3.8.3
2024-07-17 11:20:26,700:INFO:          scikitplot: 0.3.7
2024-07-17 11:20:26,700:INFO:         yellowbrick: 1.5
2024-07-17 11:20:26,700:INFO:              plotly: 5.20.0
2024-07-17 11:20:26,700:INFO:    plotly-resampler: Not installed
2024-07-17 11:20:26,700:INFO:             kaleido: 0.2.1
2024-07-17 11:20:26,700:INFO:           schemdraw: 0.15
2024-07-17 11:20:26,700:INFO:         statsmodels: 0.14.2
2024-07-17 11:20:26,700:INFO:              sktime: 0.26.0
2024-07-17 11:20:26,700:INFO:               tbats: 1.1.3
2024-07-17 11:20:26,700:INFO:            pmdarima: 2.0.4
2024-07-17 11:20:26,701:INFO:              psutil: 5.9.8
2024-07-17 11:20:26,701:INFO:          markupsafe: 2.1.3
2024-07-17 11:20:26,701:INFO:             pickle5: Not installed
2024-07-17 11:20:26,701:INFO:         cloudpickle: 3.0.0
2024-07-17 11:20:26,701:INFO:         deprecation: 2.1.0
2024-07-17 11:20:26,701:INFO:              xxhash: 3.4.1
2024-07-17 11:20:26,701:INFO:           wurlitzer: Not installed
2024-07-17 11:20:26,701:INFO:PyCaret optional dependencies:
2024-07-17 11:20:26,858:INFO:                shap: 0.44.1
2024-07-17 11:20:26,858:INFO:           interpret: 0.6.2
2024-07-17 11:20:26,858:INFO:                umap: 0.5.6
2024-07-17 11:20:26,858:INFO:     ydata_profiling: 4.9.0
2024-07-17 11:20:26,858:INFO:  explainerdashboard: Not installed
2024-07-17 11:20:26,858:INFO:             autoviz: Not installed
2024-07-17 11:20:26,858:INFO:           fairlearn: 0.7.0
2024-07-17 11:20:26,858:INFO:          deepchecks: Not installed
2024-07-17 11:20:26,858:INFO:             xgboost: 2.0.3
2024-07-17 11:20:26,858:INFO:            catboost: 1.2.5
2024-07-17 11:20:26,858:INFO:              kmodes: 0.12.2
2024-07-17 11:20:26,858:INFO:             mlxtend: 0.23.1
2024-07-17 11:20:26,858:INFO:       statsforecast: Not installed
2024-07-17 11:20:26,858:INFO:        tune_sklearn: Not installed
2024-07-17 11:20:26,858:INFO:                 ray: Not installed
2024-07-17 11:20:26,858:INFO:            hyperopt: 0.2.7
2024-07-17 11:20:26,858:INFO:              optuna: 3.6.1
2024-07-17 11:20:26,858:INFO:               skopt: 0.10.2
2024-07-17 11:20:26,858:INFO:              mlflow: Not installed
2024-07-17 11:20:26,858:INFO:              gradio: Not installed
2024-07-17 11:20:26,858:INFO:             fastapi: Not installed
2024-07-17 11:20:26,858:INFO:             uvicorn: 0.30.1
2024-07-17 11:20:26,858:INFO:              m2cgen: 0.10.0
2024-07-17 11:20:26,858:INFO:           evidently: Not installed
2024-07-17 11:20:26,858:INFO:               fugue: Not installed
2024-07-17 11:20:26,858:INFO:           streamlit: Not installed
2024-07-17 11:20:26,858:INFO:             prophet: Not installed
2024-07-17 11:20:26,858:INFO:None
2024-07-17 11:20:26,858:INFO:Set up data.
2024-07-17 11:20:26,881:INFO:Set up folding strategy.
2024-07-17 11:20:26,881:INFO:Set up train/test split.
2024-07-17 11:20:26,900:INFO:Set up index.
2024-07-17 11:20:26,900:INFO:Assigning column types.
2024-07-17 11:20:26,911:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-17 11:20:26,943:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 11:20:26,947:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 11:20:26,974:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-17 11:20:26,976:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 11:20:27,307:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 11:20:27,308:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 11:20:27,328:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-17 11:20:27,329:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 11:20:27,330:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-17 11:20:27,363:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 11:20:27,384:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-17 11:20:27,386:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 11:20:27,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 11:20:27,440:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-17 11:20:27,442:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 11:20:27,442:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-17 11:20:27,496:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-17 11:20:27,499:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 11:20:27,553:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-17 11:20:27,555:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 11:20:27,563:INFO:Preparing preprocessing pipeline...
2024-07-17 11:20:27,565:INFO:Set up simple imputation.
2024-07-17 11:20:27,571:INFO:Set up encoding of categorical features.
2024-07-17 11:20:27,572:INFO:Set up column name cleaning.
2024-07-17 11:20:27,712:INFO:Finished creating preprocessing pipeline.
2024-07-17 11:20:27,718:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'Index',
                                             'Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Sent tnx', 'Received Tnx',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To A...
                                                                    'most sent '
                                                                    'token '
                                                                    'type',
                                                                    ' '
                                                                    'ERC20_most_rec_token_type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-17 11:20:27,718:INFO:Creating final display dataframe.
2024-07-17 11:20:28,084:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9841, 51)
4        Transformed data shape        (9841, 51)
5   Transformed train set shape        (6888, 51)
6    Transformed test set shape        (2953, 51)
7              Numeric features                47
8          Categorical features                 3
9      Rows with missing values             27.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              19f7
2024-07-17 11:20:28,144:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-17 11:20:28,147:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 11:20:28,201:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-17 11:20:28,203:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-17 11:20:28,204:INFO:setup() successfully completed in 2.87s...............
2024-07-17 11:20:40,635:INFO:Initializing compare_models()
2024-07-17 11:20:40,635:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-17 11:20:40,635:INFO:Checking exceptions
2024-07-17 11:20:40,647:INFO:Preparing display monitor
2024-07-17 11:20:40,668:INFO:Initializing Logistic Regression
2024-07-17 11:20:40,668:INFO:Total runtime is 0.0 minutes
2024-07-17 11:20:40,671:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:40,671:INFO:Initializing create_model()
2024-07-17 11:20:40,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:40,671:INFO:Checking exceptions
2024-07-17 11:20:40,671:INFO:Importing libraries
2024-07-17 11:20:40,671:INFO:Copying training dataset
2024-07-17 11:20:40,688:INFO:Defining folds
2024-07-17 11:20:40,688:INFO:Declaring metric variables
2024-07-17 11:20:40,691:INFO:Importing untrained model
2024-07-17 11:20:40,694:INFO:Logistic Regression Imported successfully
2024-07-17 11:20:40,700:INFO:Starting cross validation
2024-07-17 11:20:40,701:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:48,552:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,665:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,761:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,783:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,817:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,891:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,892:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,897:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,929:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,937:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 11:20:48,991:INFO:Calculating mean and std
2024-07-17 11:20:48,993:INFO:Creating metrics dataframe
2024-07-17 11:20:49,002:INFO:Uploading results into container
2024-07-17 11:20:49,003:INFO:Uploading model into container now
2024-07-17 11:20:49,003:INFO:_master_model_container: 1
2024-07-17 11:20:49,003:INFO:_display_container: 2
2024-07-17 11:20:49,004:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-17 11:20:49,004:INFO:create_model() successfully completed......................................
2024-07-17 11:20:49,146:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:49,146:INFO:Creating metrics dataframe
2024-07-17 11:20:49,153:INFO:Initializing K Neighbors Classifier
2024-07-17 11:20:49,153:INFO:Total runtime is 0.14140857855478922 minutes
2024-07-17 11:20:49,155:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:49,155:INFO:Initializing create_model()
2024-07-17 11:20:49,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:49,155:INFO:Checking exceptions
2024-07-17 11:20:49,155:INFO:Importing libraries
2024-07-17 11:20:49,155:INFO:Copying training dataset
2024-07-17 11:20:49,170:INFO:Defining folds
2024-07-17 11:20:49,170:INFO:Declaring metric variables
2024-07-17 11:20:49,173:INFO:Importing untrained model
2024-07-17 11:20:49,175:INFO:K Neighbors Classifier Imported successfully
2024-07-17 11:20:49,179:INFO:Starting cross validation
2024-07-17 11:20:49,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:54,650:INFO:Calculating mean and std
2024-07-17 11:20:54,652:INFO:Creating metrics dataframe
2024-07-17 11:20:54,655:INFO:Uploading results into container
2024-07-17 11:20:54,656:INFO:Uploading model into container now
2024-07-17 11:20:54,657:INFO:_master_model_container: 2
2024-07-17 11:20:54,657:INFO:_display_container: 2
2024-07-17 11:20:54,657:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-17 11:20:54,658:INFO:create_model() successfully completed......................................
2024-07-17 11:20:54,809:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:54,809:INFO:Creating metrics dataframe
2024-07-17 11:20:54,819:INFO:Initializing Naive Bayes
2024-07-17 11:20:54,819:INFO:Total runtime is 0.23585217793782554 minutes
2024-07-17 11:20:54,822:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:54,822:INFO:Initializing create_model()
2024-07-17 11:20:54,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:54,822:INFO:Checking exceptions
2024-07-17 11:20:54,822:INFO:Importing libraries
2024-07-17 11:20:54,822:INFO:Copying training dataset
2024-07-17 11:20:54,836:INFO:Defining folds
2024-07-17 11:20:54,837:INFO:Declaring metric variables
2024-07-17 11:20:54,839:INFO:Importing untrained model
2024-07-17 11:20:54,842:INFO:Naive Bayes Imported successfully
2024-07-17 11:20:54,847:INFO:Starting cross validation
2024-07-17 11:20:54,848:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:55,219:INFO:Calculating mean and std
2024-07-17 11:20:55,220:INFO:Creating metrics dataframe
2024-07-17 11:20:55,221:INFO:Uploading results into container
2024-07-17 11:20:55,223:INFO:Uploading model into container now
2024-07-17 11:20:55,223:INFO:_master_model_container: 3
2024-07-17 11:20:55,223:INFO:_display_container: 2
2024-07-17 11:20:55,223:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-17 11:20:55,223:INFO:create_model() successfully completed......................................
2024-07-17 11:20:55,324:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:55,325:INFO:Creating metrics dataframe
2024-07-17 11:20:55,329:INFO:Initializing Decision Tree Classifier
2024-07-17 11:20:55,329:INFO:Total runtime is 0.24435647726058962 minutes
2024-07-17 11:20:55,332:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:55,332:INFO:Initializing create_model()
2024-07-17 11:20:55,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:55,332:INFO:Checking exceptions
2024-07-17 11:20:55,332:INFO:Importing libraries
2024-07-17 11:20:55,332:INFO:Copying training dataset
2024-07-17 11:20:55,347:INFO:Defining folds
2024-07-17 11:20:55,347:INFO:Declaring metric variables
2024-07-17 11:20:55,350:INFO:Importing untrained model
2024-07-17 11:20:55,353:INFO:Decision Tree Classifier Imported successfully
2024-07-17 11:20:55,358:INFO:Starting cross validation
2024-07-17 11:20:55,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:55,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,658:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,658:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,660:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,675:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,678:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,696:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,704:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,722:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:55,727:INFO:Calculating mean and std
2024-07-17 11:20:55,728:INFO:Creating metrics dataframe
2024-07-17 11:20:55,729:INFO:Uploading results into container
2024-07-17 11:20:55,730:INFO:Uploading model into container now
2024-07-17 11:20:55,730:INFO:_master_model_container: 4
2024-07-17 11:20:55,730:INFO:_display_container: 2
2024-07-17 11:20:55,730:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-17 11:20:55,730:INFO:create_model() successfully completed......................................
2024-07-17 11:20:55,831:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:55,831:INFO:Creating metrics dataframe
2024-07-17 11:20:55,836:INFO:Initializing SVM - Linear Kernel
2024-07-17 11:20:55,836:INFO:Total runtime is 0.25279336373011274 minutes
2024-07-17 11:20:55,839:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:55,839:INFO:Initializing create_model()
2024-07-17 11:20:55,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:55,839:INFO:Checking exceptions
2024-07-17 11:20:55,839:INFO:Importing libraries
2024-07-17 11:20:55,839:INFO:Copying training dataset
2024-07-17 11:20:55,853:INFO:Defining folds
2024-07-17 11:20:55,853:INFO:Declaring metric variables
2024-07-17 11:20:55,856:INFO:Importing untrained model
2024-07-17 11:20:55,859:INFO:SVM - Linear Kernel Imported successfully
2024-07-17 11:20:55,863:INFO:Starting cross validation
2024-07-17 11:20:55,864:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:56,249:INFO:Calculating mean and std
2024-07-17 11:20:56,249:INFO:Creating metrics dataframe
2024-07-17 11:20:56,249:INFO:Uploading results into container
2024-07-17 11:20:56,249:INFO:Uploading model into container now
2024-07-17 11:20:56,249:INFO:_master_model_container: 5
2024-07-17 11:20:56,249:INFO:_display_container: 2
2024-07-17 11:20:56,249:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-17 11:20:56,249:INFO:create_model() successfully completed......................................
2024-07-17 11:20:56,343:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:56,343:INFO:Creating metrics dataframe
2024-07-17 11:20:56,359:INFO:Initializing Ridge Classifier
2024-07-17 11:20:56,359:INFO:Total runtime is 0.2615117073059082 minutes
2024-07-17 11:20:56,359:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:56,359:INFO:Initializing create_model()
2024-07-17 11:20:56,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:56,359:INFO:Checking exceptions
2024-07-17 11:20:56,359:INFO:Importing libraries
2024-07-17 11:20:56,359:INFO:Copying training dataset
2024-07-17 11:20:56,374:INFO:Defining folds
2024-07-17 11:20:56,374:INFO:Declaring metric variables
2024-07-17 11:20:56,374:INFO:Importing untrained model
2024-07-17 11:20:56,374:INFO:Ridge Classifier Imported successfully
2024-07-17 11:20:56,374:INFO:Starting cross validation
2024-07-17 11:20:56,390:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:56,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95608e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.47275e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95656e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,658:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95647e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,666:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.59335e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,670:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.51911e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,696:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,697:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,698:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,699:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,718:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95627e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,721:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.77144e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,722:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,729:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95661e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,746:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.79374e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-17 11:20:56,751:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,757:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,761:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,775:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:56,792:INFO:Calculating mean and std
2024-07-17 11:20:56,793:INFO:Creating metrics dataframe
2024-07-17 11:20:56,795:INFO:Uploading results into container
2024-07-17 11:20:56,796:INFO:Uploading model into container now
2024-07-17 11:20:56,796:INFO:_master_model_container: 6
2024-07-17 11:20:56,796:INFO:_display_container: 2
2024-07-17 11:20:56,796:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-17 11:20:56,797:INFO:create_model() successfully completed......................................
2024-07-17 11:20:56,908:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:56,909:INFO:Creating metrics dataframe
2024-07-17 11:20:56,914:INFO:Initializing Random Forest Classifier
2024-07-17 11:20:56,914:INFO:Total runtime is 0.27076551516850794 minutes
2024-07-17 11:20:56,917:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:56,917:INFO:Initializing create_model()
2024-07-17 11:20:56,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:56,917:INFO:Checking exceptions
2024-07-17 11:20:56,917:INFO:Importing libraries
2024-07-17 11:20:56,917:INFO:Copying training dataset
2024-07-17 11:20:56,932:INFO:Defining folds
2024-07-17 11:20:56,932:INFO:Declaring metric variables
2024-07-17 11:20:56,935:INFO:Importing untrained model
2024-07-17 11:20:56,938:INFO:Random Forest Classifier Imported successfully
2024-07-17 11:20:56,942:INFO:Starting cross validation
2024-07-17 11:20:56,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:57,996:INFO:Calculating mean and std
2024-07-17 11:20:57,998:INFO:Creating metrics dataframe
2024-07-17 11:20:57,999:INFO:Uploading results into container
2024-07-17 11:20:58,000:INFO:Uploading model into container now
2024-07-17 11:20:58,000:INFO:_master_model_container: 7
2024-07-17 11:20:58,000:INFO:_display_container: 2
2024-07-17 11:20:58,001:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-17 11:20:58,001:INFO:create_model() successfully completed......................................
2024-07-17 11:20:58,104:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:58,104:INFO:Creating metrics dataframe
2024-07-17 11:20:58,110:INFO:Initializing Quadratic Discriminant Analysis
2024-07-17 11:20:58,110:INFO:Total runtime is 0.29070357084274295 minutes
2024-07-17 11:20:58,112:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:58,112:INFO:Initializing create_model()
2024-07-17 11:20:58,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:58,113:INFO:Checking exceptions
2024-07-17 11:20:58,113:INFO:Importing libraries
2024-07-17 11:20:58,113:INFO:Copying training dataset
2024-07-17 11:20:58,127:INFO:Defining folds
2024-07-17 11:20:58,127:INFO:Declaring metric variables
2024-07-17 11:20:58,130:INFO:Importing untrained model
2024-07-17 11:20:58,133:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-17 11:20:58,139:INFO:Starting cross validation
2024-07-17 11:20:58,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:58,414:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,414:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,430:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,446:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,453:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,470:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,487:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,488:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,490:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,492:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,501:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,502:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,515:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,519:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,525:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,531:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 11:20:58,535:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,547:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,550:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,560:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:58,575:INFO:Calculating mean and std
2024-07-17 11:20:58,576:INFO:Creating metrics dataframe
2024-07-17 11:20:58,578:INFO:Uploading results into container
2024-07-17 11:20:58,579:INFO:Uploading model into container now
2024-07-17 11:20:58,579:INFO:_master_model_container: 8
2024-07-17 11:20:58,579:INFO:_display_container: 2
2024-07-17 11:20:58,579:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-17 11:20:58,579:INFO:create_model() successfully completed......................................
2024-07-17 11:20:58,681:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:58,681:INFO:Creating metrics dataframe
2024-07-17 11:20:58,687:INFO:Initializing Ada Boost Classifier
2024-07-17 11:20:58,687:INFO:Total runtime is 0.30031661589940395 minutes
2024-07-17 11:20:58,690:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:58,690:INFO:Initializing create_model()
2024-07-17 11:20:58,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:58,690:INFO:Checking exceptions
2024-07-17 11:20:58,690:INFO:Importing libraries
2024-07-17 11:20:58,690:INFO:Copying training dataset
2024-07-17 11:20:58,704:INFO:Defining folds
2024-07-17 11:20:58,705:INFO:Declaring metric variables
2024-07-17 11:20:58,711:INFO:Importing untrained model
2024-07-17 11:20:58,717:INFO:Ada Boost Classifier Imported successfully
2024-07-17 11:20:58,738:INFO:Starting cross validation
2024-07-17 11:20:58,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:20:59,008:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,012:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,041:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,050:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,058:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,060:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,128:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,132:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,140:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,161:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-17 11:20:59,205:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:59,211:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:20:59,234:INFO:Calculating mean and std
2024-07-17 11:20:59,236:INFO:Creating metrics dataframe
2024-07-17 11:20:59,238:INFO:Uploading results into container
2024-07-17 11:20:59,238:INFO:Uploading model into container now
2024-07-17 11:20:59,238:INFO:_master_model_container: 9
2024-07-17 11:20:59,238:INFO:_display_container: 2
2024-07-17 11:20:59,239:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-17 11:20:59,239:INFO:create_model() successfully completed......................................
2024-07-17 11:20:59,352:INFO:SubProcess create_model() end ==================================
2024-07-17 11:20:59,352:INFO:Creating metrics dataframe
2024-07-17 11:20:59,358:INFO:Initializing Gradient Boosting Classifier
2024-07-17 11:20:59,358:INFO:Total runtime is 0.3115076025327047 minutes
2024-07-17 11:20:59,362:INFO:SubProcess create_model() called ==================================
2024-07-17 11:20:59,362:INFO:Initializing create_model()
2024-07-17 11:20:59,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:20:59,362:INFO:Checking exceptions
2024-07-17 11:20:59,362:INFO:Importing libraries
2024-07-17 11:20:59,362:INFO:Copying training dataset
2024-07-17 11:20:59,377:INFO:Defining folds
2024-07-17 11:20:59,378:INFO:Declaring metric variables
2024-07-17 11:20:59,381:INFO:Importing untrained model
2024-07-17 11:20:59,386:INFO:Gradient Boosting Classifier Imported successfully
2024-07-17 11:20:59,391:INFO:Starting cross validation
2024-07-17 11:20:59,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:21:01,319:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,381:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,390:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,402:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,420:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,421:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,422:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,448:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,470:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,472:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,477:INFO:Calculating mean and std
2024-07-17 11:21:01,478:INFO:Creating metrics dataframe
2024-07-17 11:21:01,480:INFO:Uploading results into container
2024-07-17 11:21:01,480:INFO:Uploading model into container now
2024-07-17 11:21:01,481:INFO:_master_model_container: 10
2024-07-17 11:21:01,481:INFO:_display_container: 2
2024-07-17 11:21:01,481:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-17 11:21:01,481:INFO:create_model() successfully completed......................................
2024-07-17 11:21:01,585:INFO:SubProcess create_model() end ==================================
2024-07-17 11:21:01,585:INFO:Creating metrics dataframe
2024-07-17 11:21:01,592:INFO:Initializing Linear Discriminant Analysis
2024-07-17 11:21:01,592:INFO:Total runtime is 0.34873470465342205 minutes
2024-07-17 11:21:01,595:INFO:SubProcess create_model() called ==================================
2024-07-17 11:21:01,595:INFO:Initializing create_model()
2024-07-17 11:21:01,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:21:01,595:INFO:Checking exceptions
2024-07-17 11:21:01,595:INFO:Importing libraries
2024-07-17 11:21:01,595:INFO:Copying training dataset
2024-07-17 11:21:01,609:INFO:Defining folds
2024-07-17 11:21:01,609:INFO:Declaring metric variables
2024-07-17 11:21:01,613:INFO:Importing untrained model
2024-07-17 11:21:01,616:INFO:Linear Discriminant Analysis Imported successfully
2024-07-17 11:21:01,621:INFO:Starting cross validation
2024-07-17 11:21:01,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:21:01,991:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:01,994:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,000:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,002:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,020:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,025:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,037:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,038:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,040:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,054:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:02,071:INFO:Calculating mean and std
2024-07-17 11:21:02,072:INFO:Creating metrics dataframe
2024-07-17 11:21:02,073:INFO:Uploading results into container
2024-07-17 11:21:02,074:INFO:Uploading model into container now
2024-07-17 11:21:02,074:INFO:_master_model_container: 11
2024-07-17 11:21:02,074:INFO:_display_container: 2
2024-07-17 11:21:02,075:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-17 11:21:02,075:INFO:create_model() successfully completed......................................
2024-07-17 11:21:02,188:INFO:SubProcess create_model() end ==================================
2024-07-17 11:21:02,188:INFO:Creating metrics dataframe
2024-07-17 11:21:02,195:INFO:Initializing Extra Trees Classifier
2024-07-17 11:21:02,195:INFO:Total runtime is 0.35878695249557496 minutes
2024-07-17 11:21:02,197:INFO:SubProcess create_model() called ==================================
2024-07-17 11:21:02,199:INFO:Initializing create_model()
2024-07-17 11:21:02,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:21:02,199:INFO:Checking exceptions
2024-07-17 11:21:02,199:INFO:Importing libraries
2024-07-17 11:21:02,199:INFO:Copying training dataset
2024-07-17 11:21:02,212:INFO:Defining folds
2024-07-17 11:21:02,212:INFO:Declaring metric variables
2024-07-17 11:21:02,215:INFO:Importing untrained model
2024-07-17 11:21:02,219:INFO:Extra Trees Classifier Imported successfully
2024-07-17 11:21:02,224:INFO:Starting cross validation
2024-07-17 11:21:02,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:21:03,036:INFO:Calculating mean and std
2024-07-17 11:21:03,037:INFO:Creating metrics dataframe
2024-07-17 11:21:03,039:INFO:Uploading results into container
2024-07-17 11:21:03,039:INFO:Uploading model into container now
2024-07-17 11:21:03,039:INFO:_master_model_container: 12
2024-07-17 11:21:03,039:INFO:_display_container: 2
2024-07-17 11:21:03,041:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-17 11:21:03,041:INFO:create_model() successfully completed......................................
2024-07-17 11:21:03,143:INFO:SubProcess create_model() end ==================================
2024-07-17 11:21:03,143:INFO:Creating metrics dataframe
2024-07-17 11:21:03,150:INFO:Initializing Extreme Gradient Boosting
2024-07-17 11:21:03,150:INFO:Total runtime is 0.3747018575668335 minutes
2024-07-17 11:21:03,153:INFO:SubProcess create_model() called ==================================
2024-07-17 11:21:03,153:INFO:Initializing create_model()
2024-07-17 11:21:03,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:21:03,153:INFO:Checking exceptions
2024-07-17 11:21:03,153:INFO:Importing libraries
2024-07-17 11:21:03,153:INFO:Copying training dataset
2024-07-17 11:21:03,167:INFO:Defining folds
2024-07-17 11:21:03,167:INFO:Declaring metric variables
2024-07-17 11:21:03,170:INFO:Importing untrained model
2024-07-17 11:21:03,174:INFO:Extreme Gradient Boosting Imported successfully
2024-07-17 11:21:03,178:INFO:Starting cross validation
2024-07-17 11:21:03,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:21:03,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,644:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,680:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,689:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,691:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,694:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,695:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,699:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,704:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:03,712:INFO:Calculating mean and std
2024-07-17 11:21:03,713:INFO:Creating metrics dataframe
2024-07-17 11:21:03,714:INFO:Uploading results into container
2024-07-17 11:21:03,715:INFO:Uploading model into container now
2024-07-17 11:21:03,715:INFO:_master_model_container: 13
2024-07-17 11:21:03,715:INFO:_display_container: 2
2024-07-17 11:21:03,716:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-17 11:21:03,716:INFO:create_model() successfully completed......................................
2024-07-17 11:21:03,819:INFO:SubProcess create_model() end ==================================
2024-07-17 11:21:03,819:INFO:Creating metrics dataframe
2024-07-17 11:21:03,825:INFO:Initializing Light Gradient Boosting Machine
2024-07-17 11:21:03,825:INFO:Total runtime is 0.38595625162124636 minutes
2024-07-17 11:21:03,827:INFO:SubProcess create_model() called ==================================
2024-07-17 11:21:03,828:INFO:Initializing create_model()
2024-07-17 11:21:03,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:21:03,828:INFO:Checking exceptions
2024-07-17 11:21:03,828:INFO:Importing libraries
2024-07-17 11:21:03,828:INFO:Copying training dataset
2024-07-17 11:21:03,842:INFO:Defining folds
2024-07-17 11:21:03,842:INFO:Declaring metric variables
2024-07-17 11:21:03,844:INFO:Importing untrained model
2024-07-17 11:21:03,848:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-17 11:21:03,854:INFO:Starting cross validation
2024-07-17 11:21:03,855:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:21:04,734:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,734:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,810:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,820:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,833:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,865:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,894:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,929:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,942:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:04,959:INFO:Calculating mean and std
2024-07-17 11:21:04,961:INFO:Creating metrics dataframe
2024-07-17 11:21:04,964:INFO:Uploading results into container
2024-07-17 11:21:04,964:INFO:Uploading model into container now
2024-07-17 11:21:04,965:INFO:_master_model_container: 14
2024-07-17 11:21:04,965:INFO:_display_container: 2
2024-07-17 11:21:04,966:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-17 11:21:04,966:INFO:create_model() successfully completed......................................
2024-07-17 11:21:05,100:INFO:SubProcess create_model() end ==================================
2024-07-17 11:21:05,100:INFO:Creating metrics dataframe
2024-07-17 11:21:05,108:INFO:Initializing CatBoost Classifier
2024-07-17 11:21:05,108:INFO:Total runtime is 0.4073259949684143 minutes
2024-07-17 11:21:05,111:INFO:SubProcess create_model() called ==================================
2024-07-17 11:21:05,111:INFO:Initializing create_model()
2024-07-17 11:21:05,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:21:05,111:INFO:Checking exceptions
2024-07-17 11:21:05,111:INFO:Importing libraries
2024-07-17 11:21:05,111:INFO:Copying training dataset
2024-07-17 11:21:05,129:INFO:Defining folds
2024-07-17 11:21:05,129:INFO:Declaring metric variables
2024-07-17 11:21:05,132:INFO:Importing untrained model
2024-07-17 11:21:05,136:INFO:CatBoost Classifier Imported successfully
2024-07-17 11:21:05,142:INFO:Starting cross validation
2024-07-17 11:21:05,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:21:15,677:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:15,701:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:15,708:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:15,719:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:15,740:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
6 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
6 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 5220, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline, use_best_model,
  File "c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 2400, in _fit
    self._train(
  File "c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\catboost\core.py", line 1780, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4833, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4882, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2024-07-17 11:21:15,740:INFO:Calculating mean and std
2024-07-17 11:21:15,742:INFO:Creating metrics dataframe
2024-07-17 11:21:15,743:INFO:Uploading results into container
2024-07-17 11:21:15,744:INFO:Uploading model into container now
2024-07-17 11:21:15,744:INFO:_master_model_container: 15
2024-07-17 11:21:15,744:INFO:_display_container: 2
2024-07-17 11:21:15,744:INFO:<catboost.core.CatBoostClassifier object at 0x000001AE83E54A60>
2024-07-17 11:21:15,744:INFO:create_model() successfully completed......................................
2024-07-17 11:21:15,856:INFO:SubProcess create_model() end ==================================
2024-07-17 11:21:15,857:INFO:Creating metrics dataframe
2024-07-17 11:21:15,864:INFO:Initializing Dummy Classifier
2024-07-17 11:21:15,864:INFO:Total runtime is 0.5865920901298523 minutes
2024-07-17 11:21:15,866:INFO:SubProcess create_model() called ==================================
2024-07-17 11:21:15,866:INFO:Initializing create_model()
2024-07-17 11:21:15,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001AE84204610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:21:15,866:INFO:Checking exceptions
2024-07-17 11:21:15,866:INFO:Importing libraries
2024-07-17 11:21:15,866:INFO:Copying training dataset
2024-07-17 11:21:15,881:INFO:Defining folds
2024-07-17 11:21:15,881:INFO:Declaring metric variables
2024-07-17 11:21:15,884:INFO:Importing untrained model
2024-07-17 11:21:15,887:INFO:Dummy Classifier Imported successfully
2024-07-17 11:21:15,892:INFO:Starting cross validation
2024-07-17 11:21:15,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 11:21:16,123:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,150:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,156:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,170:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,187:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,187:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,201:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,211:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,215:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,216:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-17 11:21:16,234:INFO:Calculating mean and std
2024-07-17 11:21:16,236:INFO:Creating metrics dataframe
2024-07-17 11:21:16,238:INFO:Uploading results into container
2024-07-17 11:21:16,238:INFO:Uploading model into container now
2024-07-17 11:21:16,239:INFO:_master_model_container: 16
2024-07-17 11:21:16,239:INFO:_display_container: 2
2024-07-17 11:21:16,239:INFO:DummyClassifier(constant=None, random_state=85, strategy='prior')
2024-07-17 11:21:16,239:INFO:create_model() successfully completed......................................
2024-07-17 11:21:16,343:INFO:SubProcess create_model() end ==================================
2024-07-17 11:21:16,343:INFO:Creating metrics dataframe
2024-07-17 11:21:16,358:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-17 11:21:16,364:INFO:Initializing create_model()
2024-07-17 11:21:16,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AE827FAB00>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 11:21:16,364:INFO:Checking exceptions
2024-07-17 11:21:16,366:INFO:Importing libraries
2024-07-17 11:21:16,367:INFO:Copying training dataset
2024-07-17 11:21:16,381:INFO:Defining folds
2024-07-17 11:21:16,381:INFO:Declaring metric variables
2024-07-17 11:21:16,381:INFO:Importing untrained model
2024-07-17 11:21:16,381:INFO:Declaring custom model
2024-07-17 11:21:16,382:INFO:Random Forest Classifier Imported successfully
2024-07-17 11:21:16,383:INFO:Cross validation set to False
2024-07-17 11:21:16,383:INFO:Fitting Model
2024-07-17 11:21:16,595:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-17 11:21:16,595:INFO:create_model() successfully completed......................................
2024-07-17 11:21:16,721:INFO:_master_model_container: 16
2024-07-17 11:21:16,721:INFO:_display_container: 2
2024-07-17 11:21:16,721:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-17 11:21:16,721:INFO:compare_models() successfully completed......................................
2024-07-19 00:48:10,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 00:48:10,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 00:48:10,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 00:48:10,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-19 00:48:37,984:INFO:PyCaret ClassificationExperiment
2024-07-19 00:48:37,984:INFO:Logging name: clf-default-name
2024-07-19 00:48:37,984:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 00:48:37,984:INFO:version 3.3.2
2024-07-19 00:48:37,984:INFO:Initializing setup()
2024-07-19 00:48:37,984:INFO:self.USI: 4b5a
2024-07-19 00:48:37,984:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 00:48:37,984:INFO:Checking environment
2024-07-19 00:48:37,984:INFO:python_version: 3.10.11
2024-07-19 00:48:37,984:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 00:48:37,984:INFO:machine: AMD64
2024-07-19 00:48:37,984:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 00:48:37,991:INFO:Memory: svmem(total=16516247552, available=3835338752, percent=76.8, used=12680908800, free=3835338752)
2024-07-19 00:48:37,991:INFO:Physical Core: 8
2024-07-19 00:48:37,991:INFO:Logical Core: 16
2024-07-19 00:48:37,991:INFO:Checking libraries
2024-07-19 00:48:37,991:INFO:System:
2024-07-19 00:48:37,991:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 00:48:37,991:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 00:48:37,991:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 00:48:37,991:INFO:PyCaret required dependencies:
2024-07-19 00:48:39,201:INFO:                 pip: 24.1.2
2024-07-19 00:48:39,202:INFO:          setuptools: 65.5.0
2024-07-19 00:48:39,202:INFO:             pycaret: 3.3.2
2024-07-19 00:48:39,202:INFO:             IPython: 8.21.0
2024-07-19 00:48:39,202:INFO:          ipywidgets: 8.1.3
2024-07-19 00:48:39,202:INFO:                tqdm: 4.66.4
2024-07-19 00:48:39,202:INFO:               numpy: 1.26.4
2024-07-19 00:48:39,202:INFO:              pandas: 2.1.4
2024-07-19 00:48:39,202:INFO:              jinja2: 3.1.2
2024-07-19 00:48:39,202:INFO:               scipy: 1.11.4
2024-07-19 00:48:39,202:INFO:              joblib: 1.3.2
2024-07-19 00:48:39,202:INFO:             sklearn: 1.4.2
2024-07-19 00:48:39,202:INFO:                pyod: 2.0.1
2024-07-19 00:48:39,202:INFO:            imblearn: 0.12.2
2024-07-19 00:48:39,202:INFO:   category_encoders: 2.6.3
2024-07-19 00:48:39,202:INFO:            lightgbm: 4.3.0
2024-07-19 00:48:39,202:INFO:               numba: 0.60.0
2024-07-19 00:48:39,202:INFO:            requests: 2.32.3
2024-07-19 00:48:39,202:INFO:          matplotlib: 3.8.3
2024-07-19 00:48:39,202:INFO:          scikitplot: 0.3.7
2024-07-19 00:48:39,202:INFO:         yellowbrick: 1.5
2024-07-19 00:48:39,202:INFO:              plotly: 5.20.0
2024-07-19 00:48:39,202:INFO:    plotly-resampler: Not installed
2024-07-19 00:48:39,202:INFO:             kaleido: 0.2.1
2024-07-19 00:48:39,202:INFO:           schemdraw: 0.15
2024-07-19 00:48:39,202:INFO:         statsmodels: 0.14.2
2024-07-19 00:48:39,202:INFO:              sktime: 0.26.0
2024-07-19 00:48:39,202:INFO:               tbats: 1.1.3
2024-07-19 00:48:39,202:INFO:            pmdarima: 2.0.4
2024-07-19 00:48:39,202:INFO:              psutil: 5.9.8
2024-07-19 00:48:39,202:INFO:          markupsafe: 2.1.3
2024-07-19 00:48:39,202:INFO:             pickle5: Not installed
2024-07-19 00:48:39,203:INFO:         cloudpickle: 3.0.0
2024-07-19 00:48:39,203:INFO:         deprecation: 2.1.0
2024-07-19 00:48:39,203:INFO:              xxhash: 3.4.1
2024-07-19 00:48:39,203:INFO:           wurlitzer: Not installed
2024-07-19 00:48:39,203:INFO:PyCaret optional dependencies:
2024-07-19 00:48:39,364:INFO:                shap: 0.44.1
2024-07-19 00:48:39,364:INFO:           interpret: 0.6.2
2024-07-19 00:48:39,364:INFO:                umap: 0.5.6
2024-07-19 00:48:39,364:INFO:     ydata_profiling: 4.9.0
2024-07-19 00:48:39,364:INFO:  explainerdashboard: Not installed
2024-07-19 00:48:39,364:INFO:             autoviz: Not installed
2024-07-19 00:48:39,364:INFO:           fairlearn: 0.7.0
2024-07-19 00:48:39,364:INFO:          deepchecks: Not installed
2024-07-19 00:48:39,364:INFO:             xgboost: 2.0.3
2024-07-19 00:48:39,364:INFO:            catboost: 1.2.5
2024-07-19 00:48:39,364:INFO:              kmodes: 0.12.2
2024-07-19 00:48:39,364:INFO:             mlxtend: 0.23.1
2024-07-19 00:48:39,364:INFO:       statsforecast: Not installed
2024-07-19 00:48:39,364:INFO:        tune_sklearn: Not installed
2024-07-19 00:48:39,364:INFO:                 ray: Not installed
2024-07-19 00:48:39,364:INFO:            hyperopt: 0.2.7
2024-07-19 00:48:39,364:INFO:              optuna: 3.6.1
2024-07-19 00:48:39,364:INFO:               skopt: 0.10.2
2024-07-19 00:48:39,364:INFO:              mlflow: Not installed
2024-07-19 00:48:39,364:INFO:              gradio: Not installed
2024-07-19 00:48:39,364:INFO:             fastapi: Not installed
2024-07-19 00:48:39,364:INFO:             uvicorn: 0.30.1
2024-07-19 00:48:39,365:INFO:              m2cgen: 0.10.0
2024-07-19 00:48:39,365:INFO:           evidently: Not installed
2024-07-19 00:48:39,365:INFO:               fugue: Not installed
2024-07-19 00:48:39,365:INFO:           streamlit: Not installed
2024-07-19 00:48:39,365:INFO:             prophet: Not installed
2024-07-19 00:48:39,365:INFO:None
2024-07-19 00:48:39,365:INFO:Set up data.
2024-07-19 00:48:39,389:INFO:Set up folding strategy.
2024-07-19 00:48:39,389:INFO:Set up train/test split.
2024-07-19 00:48:39,402:INFO:Set up index.
2024-07-19 00:48:39,402:INFO:Assigning column types.
2024-07-19 00:48:39,406:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 00:48:39,439:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 00:48:39,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 00:48:39,470:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 00:48:39,472:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 00:48:39,845:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 00:48:39,845:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 00:48:39,867:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 00:48:39,869:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 00:48:39,869:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 00:48:39,902:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 00:48:39,922:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 00:48:39,924:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 00:48:39,959:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 00:48:39,979:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 00:48:39,980:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 00:48:39,981:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 00:48:40,035:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 00:48:40,037:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 00:48:40,091:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 00:48:40,093:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 00:48:40,108:INFO:Preparing preprocessing pipeline...
2024-07-19 00:48:40,109:INFO:Set up label encoding.
2024-07-19 00:48:40,109:INFO:Set up simple imputation.
2024-07-19 00:48:40,113:INFO:Set up encoding of categorical features.
2024-07-19 00:48:40,113:INFO:Set up column name cleaning.
2024-07-19 00:48:40,207:INFO:Finished creating preprocessing pipeline.
2024-07-19 00:48:40,212:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Number of Cre...
                 TransformerWrapper(exclude=None, include=['Address'],
                                    transformer=TargetEncoder(cols=['Address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 00:48:40,213:INFO:Creating final display dataframe.
2024-07-19 00:48:40,443:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3                Target mapping      NO: 0, SI: 1
4           Original data shape        (9816, 17)
5        Transformed data shape        (9816, 17)
6   Transformed train set shape        (6871, 17)
7    Transformed test set shape        (2945, 17)
8              Numeric features                15
9          Categorical features                 1
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              4b5a
2024-07-19 00:48:40,502:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 00:48:40,504:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 00:48:40,558:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 00:48:40,560:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 00:48:40,561:INFO:setup() successfully completed in 2.58s...............
2024-07-19 00:48:54,110:INFO:Initializing compare_models()
2024-07-19 00:48:54,110:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 00:48:54,110:INFO:Checking exceptions
2024-07-19 00:48:54,116:INFO:Preparing display monitor
2024-07-19 00:48:54,136:INFO:Initializing Logistic Regression
2024-07-19 00:48:54,136:INFO:Total runtime is 0.0 minutes
2024-07-19 00:48:54,140:INFO:SubProcess create_model() called ==================================
2024-07-19 00:48:54,140:INFO:Initializing create_model()
2024-07-19 00:48:54,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:48:54,140:INFO:Checking exceptions
2024-07-19 00:48:54,140:INFO:Importing libraries
2024-07-19 00:48:54,141:INFO:Copying training dataset
2024-07-19 00:48:54,147:INFO:Defining folds
2024-07-19 00:48:54,147:INFO:Declaring metric variables
2024-07-19 00:48:54,150:INFO:Importing untrained model
2024-07-19 00:48:54,154:INFO:Logistic Regression Imported successfully
2024-07-19 00:48:54,161:INFO:Starting cross validation
2024-07-19 00:48:54,162:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:00,275:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,276:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,276:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,281:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,305:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,315:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,315:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,322:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,323:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,323:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,329:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,330:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,333:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:00,333:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,333:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,333:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,336:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,338:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,338:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:00,339:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,339:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,343:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,345:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,345:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,346:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,348:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,351:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,355:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,358:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,363:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,373:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,378:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,383:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,383:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,383:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 00:49:00,391:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,395:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:00,397:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,418:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,424:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,430:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:00,449:INFO:Calculating mean and std
2024-07-19 00:49:00,451:INFO:Creating metrics dataframe
2024-07-19 00:49:00,456:INFO:Uploading results into container
2024-07-19 00:49:00,456:INFO:Uploading model into container now
2024-07-19 00:49:00,457:INFO:_master_model_container: 1
2024-07-19 00:49:00,457:INFO:_display_container: 2
2024-07-19 00:49:00,458:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 00:49:00,458:INFO:create_model() successfully completed......................................
2024-07-19 00:49:00,613:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:00,613:INFO:Creating metrics dataframe
2024-07-19 00:49:00,618:INFO:Initializing K Neighbors Classifier
2024-07-19 00:49:00,618:INFO:Total runtime is 0.10803949435551961 minutes
2024-07-19 00:49:00,621:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:00,621:INFO:Initializing create_model()
2024-07-19 00:49:00,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:00,621:INFO:Checking exceptions
2024-07-19 00:49:00,622:INFO:Importing libraries
2024-07-19 00:49:00,622:INFO:Copying training dataset
2024-07-19 00:49:00,628:INFO:Defining folds
2024-07-19 00:49:00,628:INFO:Declaring metric variables
2024-07-19 00:49:00,631:INFO:Importing untrained model
2024-07-19 00:49:00,634:INFO:K Neighbors Classifier Imported successfully
2024-07-19 00:49:00,640:INFO:Starting cross validation
2024-07-19 00:49:00,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:01,033:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,036:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,037:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,039:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,043:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,043:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,044:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,049:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,049:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,050:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:01,057:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,695:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,698:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,700:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,703:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,703:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,705:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,708:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,708:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,713:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,714:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,718:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,720:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,724:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,726:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,730:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,735:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,740:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,745:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:04,764:INFO:Calculating mean and std
2024-07-19 00:49:04,766:INFO:Creating metrics dataframe
2024-07-19 00:49:04,768:INFO:Uploading results into container
2024-07-19 00:49:04,768:INFO:Uploading model into container now
2024-07-19 00:49:04,769:INFO:_master_model_container: 2
2024-07-19 00:49:04,769:INFO:_display_container: 2
2024-07-19 00:49:04,769:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 00:49:04,769:INFO:create_model() successfully completed......................................
2024-07-19 00:49:04,910:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:04,910:INFO:Creating metrics dataframe
2024-07-19 00:49:04,918:INFO:Initializing Naive Bayes
2024-07-19 00:49:04,918:INFO:Total runtime is 0.17969160079956054 minutes
2024-07-19 00:49:04,920:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:04,921:INFO:Initializing create_model()
2024-07-19 00:49:04,921:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:04,921:INFO:Checking exceptions
2024-07-19 00:49:04,921:INFO:Importing libraries
2024-07-19 00:49:04,921:INFO:Copying training dataset
2024-07-19 00:49:04,926:INFO:Defining folds
2024-07-19 00:49:04,926:INFO:Declaring metric variables
2024-07-19 00:49:04,929:INFO:Importing untrained model
2024-07-19 00:49:04,932:INFO:Naive Bayes Imported successfully
2024-07-19 00:49:04,939:INFO:Starting cross validation
2024-07-19 00:49:04,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:05,088:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,089:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,094:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,094:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,095:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,101:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,102:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,103:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,103:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,106:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,110:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,118:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,118:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,119:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,121:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,123:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,125:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,128:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,129:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,130:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,134:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,134:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,135:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,139:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,139:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,154:INFO:Calculating mean and std
2024-07-19 00:49:05,156:INFO:Creating metrics dataframe
2024-07-19 00:49:05,157:INFO:Uploading results into container
2024-07-19 00:49:05,158:INFO:Uploading model into container now
2024-07-19 00:49:05,158:INFO:_master_model_container: 3
2024-07-19 00:49:05,158:INFO:_display_container: 2
2024-07-19 00:49:05,158:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 00:49:05,158:INFO:create_model() successfully completed......................................
2024-07-19 00:49:05,261:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:05,261:INFO:Creating metrics dataframe
2024-07-19 00:49:05,267:INFO:Initializing Decision Tree Classifier
2024-07-19 00:49:05,267:INFO:Total runtime is 0.18551206588745117 minutes
2024-07-19 00:49:05,270:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:05,270:INFO:Initializing create_model()
2024-07-19 00:49:05,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:05,270:INFO:Checking exceptions
2024-07-19 00:49:05,270:INFO:Importing libraries
2024-07-19 00:49:05,270:INFO:Copying training dataset
2024-07-19 00:49:05,277:INFO:Defining folds
2024-07-19 00:49:05,277:INFO:Declaring metric variables
2024-07-19 00:49:05,279:INFO:Importing untrained model
2024-07-19 00:49:05,282:INFO:Decision Tree Classifier Imported successfully
2024-07-19 00:49:05,288:INFO:Starting cross validation
2024-07-19 00:49:05,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:05,431:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,435:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,435:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,437:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,441:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,441:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,442:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,444:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,444:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,445:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,447:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,448:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,449:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,450:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,453:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,452:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,455:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,455:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,456:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,457:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,458:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,460:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,461:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,461:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,461:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,462:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,465:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,465:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,467:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,467:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,469:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,469:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,470:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,472:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,475:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,477:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,482:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,486:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,488:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:05,489:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,497:INFO:Calculating mean and std
2024-07-19 00:49:05,499:INFO:Creating metrics dataframe
2024-07-19 00:49:05,500:INFO:Uploading results into container
2024-07-19 00:49:05,501:INFO:Uploading model into container now
2024-07-19 00:49:05,501:INFO:_master_model_container: 4
2024-07-19 00:49:05,501:INFO:_display_container: 2
2024-07-19 00:49:05,501:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-19 00:49:05,501:INFO:create_model() successfully completed......................................
2024-07-19 00:49:05,604:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:05,604:INFO:Creating metrics dataframe
2024-07-19 00:49:05,609:INFO:Initializing SVM - Linear Kernel
2024-07-19 00:49:05,610:INFO:Total runtime is 0.1912359356880188 minutes
2024-07-19 00:49:05,612:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:05,612:INFO:Initializing create_model()
2024-07-19 00:49:05,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:05,612:INFO:Checking exceptions
2024-07-19 00:49:05,612:INFO:Importing libraries
2024-07-19 00:49:05,612:INFO:Copying training dataset
2024-07-19 00:49:05,619:INFO:Defining folds
2024-07-19 00:49:05,619:INFO:Declaring metric variables
2024-07-19 00:49:05,622:INFO:Importing untrained model
2024-07-19 00:49:05,625:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 00:49:05,630:INFO:Starting cross validation
2024-07-19 00:49:05,631:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:05,770:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,776:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,777:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,781:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,783:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,788:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,788:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,794:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,795:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,800:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,800:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,800:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,802:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,804:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,807:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,808:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,809:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,810:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,812:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,813:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,821:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,825:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,829:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,835:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,843:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:05,855:INFO:Calculating mean and std
2024-07-19 00:49:05,858:INFO:Creating metrics dataframe
2024-07-19 00:49:05,859:INFO:Uploading results into container
2024-07-19 00:49:05,860:INFO:Uploading model into container now
2024-07-19 00:49:05,860:INFO:_master_model_container: 5
2024-07-19 00:49:05,860:INFO:_display_container: 2
2024-07-19 00:49:05,861:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 00:49:05,861:INFO:create_model() successfully completed......................................
2024-07-19 00:49:05,962:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:05,962:INFO:Creating metrics dataframe
2024-07-19 00:49:05,968:INFO:Initializing Ridge Classifier
2024-07-19 00:49:05,968:INFO:Total runtime is 0.19719332059224448 minutes
2024-07-19 00:49:05,970:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:05,971:INFO:Initializing create_model()
2024-07-19 00:49:05,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:05,971:INFO:Checking exceptions
2024-07-19 00:49:05,971:INFO:Importing libraries
2024-07-19 00:49:05,971:INFO:Copying training dataset
2024-07-19 00:49:05,977:INFO:Defining folds
2024-07-19 00:49:05,977:INFO:Declaring metric variables
2024-07-19 00:49:05,980:INFO:Importing untrained model
2024-07-19 00:49:05,983:INFO:Ridge Classifier Imported successfully
2024-07-19 00:49:05,989:INFO:Starting cross validation
2024-07-19 00:49:05,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:06,124:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,125:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,130:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,131:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,133:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,133:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,134:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,135:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,137:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,139:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,139:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,139:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,142:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,144:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,144:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,145:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,145:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,147:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,147:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,147:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,149:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,150:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,152:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,155:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,155:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,159:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,160:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,162:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,164:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,166:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,169:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,171:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,172:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,175:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,176:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,178:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,178:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,180:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,180:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,182:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,198:INFO:Calculating mean and std
2024-07-19 00:49:06,199:INFO:Creating metrics dataframe
2024-07-19 00:49:06,201:INFO:Uploading results into container
2024-07-19 00:49:06,201:INFO:Uploading model into container now
2024-07-19 00:49:06,201:INFO:_master_model_container: 6
2024-07-19 00:49:06,202:INFO:_display_container: 2
2024-07-19 00:49:06,202:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-19 00:49:06,202:INFO:create_model() successfully completed......................................
2024-07-19 00:49:06,305:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:06,305:INFO:Creating metrics dataframe
2024-07-19 00:49:06,310:INFO:Initializing Random Forest Classifier
2024-07-19 00:49:06,310:INFO:Total runtime is 0.20290352106094361 minutes
2024-07-19 00:49:06,313:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:06,313:INFO:Initializing create_model()
2024-07-19 00:49:06,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:06,313:INFO:Checking exceptions
2024-07-19 00:49:06,313:INFO:Importing libraries
2024-07-19 00:49:06,313:INFO:Copying training dataset
2024-07-19 00:49:06,320:INFO:Defining folds
2024-07-19 00:49:06,320:INFO:Declaring metric variables
2024-07-19 00:49:06,323:INFO:Importing untrained model
2024-07-19 00:49:06,327:INFO:Random Forest Classifier Imported successfully
2024-07-19 00:49:06,331:INFO:Starting cross validation
2024-07-19 00:49:06,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:06,935:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,944:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:06,953:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:06,959:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,018:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,022:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,022:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,026:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,027:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,032:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,036:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,041:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,043:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,047:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,047:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,048:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,053:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,054:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,057:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,062:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,091:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,096:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,099:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,101:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,152:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,157:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,160:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,162:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,166:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,167:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,167:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,171:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,172:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,173:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,173:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,174:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,175:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,175:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,176:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,178:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,191:INFO:Calculating mean and std
2024-07-19 00:49:07,193:INFO:Creating metrics dataframe
2024-07-19 00:49:07,194:INFO:Uploading results into container
2024-07-19 00:49:07,195:INFO:Uploading model into container now
2024-07-19 00:49:07,195:INFO:_master_model_container: 7
2024-07-19 00:49:07,195:INFO:_display_container: 2
2024-07-19 00:49:07,195:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 00:49:07,195:INFO:create_model() successfully completed......................................
2024-07-19 00:49:07,298:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:07,298:INFO:Creating metrics dataframe
2024-07-19 00:49:07,303:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 00:49:07,303:INFO:Total runtime is 0.2194545030593872 minutes
2024-07-19 00:49:07,305:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:07,305:INFO:Initializing create_model()
2024-07-19 00:49:07,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:07,305:INFO:Checking exceptions
2024-07-19 00:49:07,307:INFO:Importing libraries
2024-07-19 00:49:07,307:INFO:Copying training dataset
2024-07-19 00:49:07,313:INFO:Defining folds
2024-07-19 00:49:07,313:INFO:Declaring metric variables
2024-07-19 00:49:07,315:INFO:Importing untrained model
2024-07-19 00:49:07,324:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 00:49:07,347:INFO:Starting cross validation
2024-07-19 00:49:07,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:07,505:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 00:49:07,505:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 00:49:07,513:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 00:49:07,522:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 00:49:07,522:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 00:49:07,529:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 00:49:07,548:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 00:49:07,551:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 00:49:07,552:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,553:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,553:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,557:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,559:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,559:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,560:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,560:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,563:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,563:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,564:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,565:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,567:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,569:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,569:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,569:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,570:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,571:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,575:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,576:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,578:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,579:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,579:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,580:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,583:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,584:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,585:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,588:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,588:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,590:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,591:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,593:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,595:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,596:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,598:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,600:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,601:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,605:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,607:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,609:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,615:INFO:Calculating mean and std
2024-07-19 00:49:07,616:INFO:Creating metrics dataframe
2024-07-19 00:49:07,618:INFO:Uploading results into container
2024-07-19 00:49:07,618:INFO:Uploading model into container now
2024-07-19 00:49:07,618:INFO:_master_model_container: 8
2024-07-19 00:49:07,618:INFO:_display_container: 2
2024-07-19 00:49:07,618:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 00:49:07,618:INFO:create_model() successfully completed......................................
2024-07-19 00:49:07,719:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:07,719:INFO:Creating metrics dataframe
2024-07-19 00:49:07,726:INFO:Initializing Ada Boost Classifier
2024-07-19 00:49:07,726:INFO:Total runtime is 0.2265038291613261 minutes
2024-07-19 00:49:07,728:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:07,728:INFO:Initializing create_model()
2024-07-19 00:49:07,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:07,729:INFO:Checking exceptions
2024-07-19 00:49:07,729:INFO:Importing libraries
2024-07-19 00:49:07,729:INFO:Copying training dataset
2024-07-19 00:49:07,735:INFO:Defining folds
2024-07-19 00:49:07,736:INFO:Declaring metric variables
2024-07-19 00:49:07,738:INFO:Importing untrained model
2024-07-19 00:49:07,742:INFO:Ada Boost Classifier Imported successfully
2024-07-19 00:49:07,749:INFO:Starting cross validation
2024-07-19 00:49:07,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:07,877:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 00:49:07,877:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 00:49:07,877:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 00:49:07,877:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 00:49:07,877:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 00:49:07,886:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 00:49:07,894:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 00:49:07,895:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 00:49:07,914:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,915:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,916:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,917:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,920:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,922:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,922:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,923:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,923:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,924:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,925:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,926:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,926:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,927:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,927:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,927:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,927:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,928:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,929:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,932:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,933:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,935:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,937:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,937:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,937:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,938:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,939:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,939:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,939:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,940:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,941:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,942:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,942:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,943:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,945:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,946:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,950:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:07,952:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:07,972:INFO:Calculating mean and std
2024-07-19 00:49:07,974:INFO:Creating metrics dataframe
2024-07-19 00:49:07,976:INFO:Uploading results into container
2024-07-19 00:49:07,976:INFO:Uploading model into container now
2024-07-19 00:49:07,977:INFO:_master_model_container: 9
2024-07-19 00:49:07,977:INFO:_display_container: 2
2024-07-19 00:49:07,977:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-19 00:49:07,977:INFO:create_model() successfully completed......................................
2024-07-19 00:49:08,078:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:08,079:INFO:Creating metrics dataframe
2024-07-19 00:49:08,085:INFO:Initializing Gradient Boosting Classifier
2024-07-19 00:49:08,085:INFO:Total runtime is 0.23248951435089113 minutes
2024-07-19 00:49:08,089:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:08,089:INFO:Initializing create_model()
2024-07-19 00:49:08,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:08,090:INFO:Checking exceptions
2024-07-19 00:49:08,090:INFO:Importing libraries
2024-07-19 00:49:08,090:INFO:Copying training dataset
2024-07-19 00:49:08,096:INFO:Defining folds
2024-07-19 00:49:08,097:INFO:Declaring metric variables
2024-07-19 00:49:08,100:INFO:Importing untrained model
2024-07-19 00:49:08,103:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 00:49:08,109:INFO:Starting cross validation
2024-07-19 00:49:08,109:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:09,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,107:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,111:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,116:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,135:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,141:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,146:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,150:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,160:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,163:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,167:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,169:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,170:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,172:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,172:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,173:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,175:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,176:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,177:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,180:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,182:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,182:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,185:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,186:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,189:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,189:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,194:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,194:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,197:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,199:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,200:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,204:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,212:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,217:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,222:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,256:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,259:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,261:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,263:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,277:INFO:Calculating mean and std
2024-07-19 00:49:09,279:INFO:Creating metrics dataframe
2024-07-19 00:49:09,281:INFO:Uploading results into container
2024-07-19 00:49:09,281:INFO:Uploading model into container now
2024-07-19 00:49:09,282:INFO:_master_model_container: 10
2024-07-19 00:49:09,282:INFO:_display_container: 2
2024-07-19 00:49:09,282:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 00:49:09,282:INFO:create_model() successfully completed......................................
2024-07-19 00:49:09,388:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:09,388:INFO:Creating metrics dataframe
2024-07-19 00:49:09,394:INFO:Initializing Linear Discriminant Analysis
2024-07-19 00:49:09,394:INFO:Total runtime is 0.2543052196502686 minutes
2024-07-19 00:49:09,397:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:09,397:INFO:Initializing create_model()
2024-07-19 00:49:09,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:09,398:INFO:Checking exceptions
2024-07-19 00:49:09,398:INFO:Importing libraries
2024-07-19 00:49:09,398:INFO:Copying training dataset
2024-07-19 00:49:09,405:INFO:Defining folds
2024-07-19 00:49:09,405:INFO:Declaring metric variables
2024-07-19 00:49:09,407:INFO:Importing untrained model
2024-07-19 00:49:09,411:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 00:49:09,416:INFO:Starting cross validation
2024-07-19 00:49:09,417:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:09,562:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,569:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,572:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,575:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,577:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,583:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,588:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,589:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,592:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,592:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,594:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,596:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,597:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,597:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,598:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,599:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,600:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,600:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,602:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,602:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,603:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,605:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,605:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,605:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,605:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,606:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,607:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,608:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,608:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,609:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,609:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,610:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,611:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,613:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,613:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,613:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,616:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,618:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,622:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:09,623:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:09,635:INFO:Calculating mean and std
2024-07-19 00:49:09,636:INFO:Creating metrics dataframe
2024-07-19 00:49:09,638:INFO:Uploading results into container
2024-07-19 00:49:09,638:INFO:Uploading model into container now
2024-07-19 00:49:09,639:INFO:_master_model_container: 11
2024-07-19 00:49:09,639:INFO:_display_container: 2
2024-07-19 00:49:09,639:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 00:49:09,640:INFO:create_model() successfully completed......................................
2024-07-19 00:49:09,740:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:09,740:INFO:Creating metrics dataframe
2024-07-19 00:49:09,747:INFO:Initializing Extra Trees Classifier
2024-07-19 00:49:09,747:INFO:Total runtime is 0.26017788251241053 minutes
2024-07-19 00:49:09,750:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:09,750:INFO:Initializing create_model()
2024-07-19 00:49:09,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:09,750:INFO:Checking exceptions
2024-07-19 00:49:09,750:INFO:Importing libraries
2024-07-19 00:49:09,750:INFO:Copying training dataset
2024-07-19 00:49:09,756:INFO:Defining folds
2024-07-19 00:49:09,757:INFO:Declaring metric variables
2024-07-19 00:49:09,761:INFO:Importing untrained model
2024-07-19 00:49:09,763:INFO:Extra Trees Classifier Imported successfully
2024-07-19 00:49:09,769:INFO:Starting cross validation
2024-07-19 00:49:09,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:10,176:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,186:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,190:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,190:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,192:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,196:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,200:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,204:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,206:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,214:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,220:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,220:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,222:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,225:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,226:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,228:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,228:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,229:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,231:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,232:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,233:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,237:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,251:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,256:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,260:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,264:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,295:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,295:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,295:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,301:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,301:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,301:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,303:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,303:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,305:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,306:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,307:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,308:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,319:INFO:Calculating mean and std
2024-07-19 00:49:10,320:INFO:Creating metrics dataframe
2024-07-19 00:49:10,322:INFO:Uploading results into container
2024-07-19 00:49:10,323:INFO:Uploading model into container now
2024-07-19 00:49:10,323:INFO:_master_model_container: 12
2024-07-19 00:49:10,323:INFO:_display_container: 2
2024-07-19 00:49:10,324:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-19 00:49:10,324:INFO:create_model() successfully completed......................................
2024-07-19 00:49:10,437:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:10,437:INFO:Creating metrics dataframe
2024-07-19 00:49:10,444:INFO:Initializing Extreme Gradient Boosting
2024-07-19 00:49:10,444:INFO:Total runtime is 0.27179607947667445 minutes
2024-07-19 00:49:10,447:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:10,448:INFO:Initializing create_model()
2024-07-19 00:49:10,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:10,448:INFO:Checking exceptions
2024-07-19 00:49:10,448:INFO:Importing libraries
2024-07-19 00:49:10,448:INFO:Copying training dataset
2024-07-19 00:49:10,455:INFO:Defining folds
2024-07-19 00:49:10,455:INFO:Declaring metric variables
2024-07-19 00:49:10,459:INFO:Importing untrained model
2024-07-19 00:49:10,463:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 00:49:10,469:INFO:Starting cross validation
2024-07-19 00:49:10,471:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:10,726:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,727:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,729:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,731:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,732:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,733:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,734:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,735:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,736:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,738:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,738:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,738:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,739:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,739:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,741:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,742:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,745:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,746:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,746:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,746:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,748:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,751:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,752:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,753:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,754:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,755:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,755:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,758:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,761:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,764:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,767:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,768:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,770:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,773:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,775:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,775:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,777:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:10,777:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,779:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:10,802:INFO:Calculating mean and std
2024-07-19 00:49:10,803:INFO:Creating metrics dataframe
2024-07-19 00:49:10,805:INFO:Uploading results into container
2024-07-19 00:49:10,806:INFO:Uploading model into container now
2024-07-19 00:49:10,806:INFO:_master_model_container: 13
2024-07-19 00:49:10,806:INFO:_display_container: 2
2024-07-19 00:49:10,807:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 00:49:10,807:INFO:create_model() successfully completed......................................
2024-07-19 00:49:10,909:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:10,909:INFO:Creating metrics dataframe
2024-07-19 00:49:10,916:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 00:49:10,916:INFO:Total runtime is 0.27966634035110477 minutes
2024-07-19 00:49:10,919:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:10,919:INFO:Initializing create_model()
2024-07-19 00:49:10,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:10,919:INFO:Checking exceptions
2024-07-19 00:49:10,919:INFO:Importing libraries
2024-07-19 00:49:10,919:INFO:Copying training dataset
2024-07-19 00:49:10,932:INFO:Defining folds
2024-07-19 00:49:10,933:INFO:Declaring metric variables
2024-07-19 00:49:10,939:INFO:Importing untrained model
2024-07-19 00:49:10,944:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 00:49:10,955:INFO:Starting cross validation
2024-07-19 00:49:10,956:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:11,429:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,431:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,438:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,440:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,441:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,443:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,445:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,447:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,449:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,451:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,455:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,459:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,463:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,472:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,477:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,481:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,520:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,524:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,529:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,530:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,533:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,535:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,537:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,538:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,539:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,541:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,547:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,567:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,576:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,581:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,585:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,596:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,604:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,609:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,612:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,612:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,620:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,625:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:11,628:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:11,643:INFO:Calculating mean and std
2024-07-19 00:49:11,645:INFO:Creating metrics dataframe
2024-07-19 00:49:11,648:INFO:Uploading results into container
2024-07-19 00:49:11,648:INFO:Uploading model into container now
2024-07-19 00:49:11,649:INFO:_master_model_container: 14
2024-07-19 00:49:11,649:INFO:_display_container: 2
2024-07-19 00:49:11,650:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 00:49:11,650:INFO:create_model() successfully completed......................................
2024-07-19 00:49:11,771:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:11,771:INFO:Creating metrics dataframe
2024-07-19 00:49:11,778:INFO:Initializing CatBoost Classifier
2024-07-19 00:49:11,778:INFO:Total runtime is 0.29403635263442995 minutes
2024-07-19 00:49:11,780:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:11,780:INFO:Initializing create_model()
2024-07-19 00:49:11,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:11,781:INFO:Checking exceptions
2024-07-19 00:49:11,781:INFO:Importing libraries
2024-07-19 00:49:11,781:INFO:Copying training dataset
2024-07-19 00:49:11,787:INFO:Defining folds
2024-07-19 00:49:11,787:INFO:Declaring metric variables
2024-07-19 00:49:11,790:INFO:Importing untrained model
2024-07-19 00:49:11,794:INFO:CatBoost Classifier Imported successfully
2024-07-19 00:49:11,798:INFO:Starting cross validation
2024-07-19 00:49:11,799:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:27,148:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,158:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,164:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,170:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,350:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,366:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,366:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,383:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,433:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,433:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,450:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,450:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,507:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,518:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,524:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,529:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,541:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,553:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,559:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,566:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,576:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,588:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,592:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,595:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,606:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,613:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,615:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,616:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,620:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,624:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,628:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,631:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,633:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,640:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,642:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,645:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,651:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,656:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,659:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,661:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,681:INFO:Calculating mean and std
2024-07-19 00:49:27,683:INFO:Creating metrics dataframe
2024-07-19 00:49:27,684:INFO:Uploading results into container
2024-07-19 00:49:27,685:INFO:Uploading model into container now
2024-07-19 00:49:27,685:INFO:_master_model_container: 15
2024-07-19 00:49:27,685:INFO:_display_container: 2
2024-07-19 00:49:27,686:INFO:<catboost.core.CatBoostClassifier object at 0x00000191B646EAA0>
2024-07-19 00:49:27,686:INFO:create_model() successfully completed......................................
2024-07-19 00:49:27,797:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:27,797:INFO:Creating metrics dataframe
2024-07-19 00:49:27,804:INFO:Initializing Dummy Classifier
2024-07-19 00:49:27,805:INFO:Total runtime is 0.5611422856648763 minutes
2024-07-19 00:49:27,807:INFO:SubProcess create_model() called ==================================
2024-07-19 00:49:27,808:INFO:Initializing create_model()
2024-07-19 00:49:27,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7CD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:27,808:INFO:Checking exceptions
2024-07-19 00:49:27,808:INFO:Importing libraries
2024-07-19 00:49:27,808:INFO:Copying training dataset
2024-07-19 00:49:27,814:INFO:Defining folds
2024-07-19 00:49:27,815:INFO:Declaring metric variables
2024-07-19 00:49:27,818:INFO:Importing untrained model
2024-07-19 00:49:27,822:INFO:Dummy Classifier Imported successfully
2024-07-19 00:49:27,829:INFO:Starting cross validation
2024-07-19 00:49:27,831:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 00:49:27,946:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,952:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,955:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,958:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,965:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,971:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,974:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,977:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,977:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,977:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,980:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,983:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,984:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,985:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,986:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,988:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,988:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,989:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,991:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,991:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,992:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:27,994:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,995:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:27,996:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,002:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,006:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,007:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,008:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,010:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:28,010:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,012:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,012:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,013:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:28,014:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 00:49:28,015:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,016:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 00:49:28,036:INFO:Calculating mean and std
2024-07-19 00:49:28,037:INFO:Creating metrics dataframe
2024-07-19 00:49:28,039:INFO:Uploading results into container
2024-07-19 00:49:28,040:INFO:Uploading model into container now
2024-07-19 00:49:28,040:INFO:_master_model_container: 16
2024-07-19 00:49:28,040:INFO:_display_container: 2
2024-07-19 00:49:28,040:INFO:DummyClassifier(constant=None, random_state=85, strategy='prior')
2024-07-19 00:49:28,040:INFO:create_model() successfully completed......................................
2024-07-19 00:49:28,143:INFO:SubProcess create_model() end ==================================
2024-07-19 00:49:28,143:INFO:Creating metrics dataframe
2024-07-19 00:49:28,175:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-19 00:49:28,182:INFO:Initializing create_model()
2024-07-19 00:49:28,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7CFA0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 00:49:28,183:INFO:Checking exceptions
2024-07-19 00:49:28,184:INFO:Importing libraries
2024-07-19 00:49:28,184:INFO:Copying training dataset
2024-07-19 00:49:28,190:INFO:Defining folds
2024-07-19 00:49:28,190:INFO:Declaring metric variables
2024-07-19 00:49:28,190:INFO:Importing untrained model
2024-07-19 00:49:28,190:INFO:Declaring custom model
2024-07-19 00:49:28,190:INFO:K Neighbors Classifier Imported successfully
2024-07-19 00:49:28,191:INFO:Cross validation set to False
2024-07-19 00:49:28,191:INFO:Fitting Model
2024-07-19 00:49:28,224:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 00:49:28,224:INFO:create_model() successfully completed......................................
2024-07-19 00:49:28,349:INFO:_master_model_container: 16
2024-07-19 00:49:28,349:INFO:_display_container: 2
2024-07-19 00:49:28,350:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 00:49:28,350:INFO:compare_models() successfully completed......................................
2024-07-19 01:02:34,009:INFO:PyCaret ClassificationExperiment
2024-07-19 01:02:34,009:INFO:Logging name: clf-default-name
2024-07-19 01:02:34,009:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:02:34,009:INFO:version 3.3.2
2024-07-19 01:02:34,009:INFO:Initializing setup()
2024-07-19 01:02:34,009:INFO:self.USI: e96c
2024-07-19 01:02:34,009:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:02:34,009:INFO:Checking environment
2024-07-19 01:02:34,009:INFO:python_version: 3.10.11
2024-07-19 01:02:34,009:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:02:34,009:INFO:machine: AMD64
2024-07-19 01:02:34,009:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:02:34,014:INFO:Memory: svmem(total=16516247552, available=4629995520, percent=72.0, used=11886252032, free=4629995520)
2024-07-19 01:02:34,014:INFO:Physical Core: 8
2024-07-19 01:02:34,015:INFO:Logical Core: 16
2024-07-19 01:02:34,015:INFO:Checking libraries
2024-07-19 01:02:34,015:INFO:System:
2024-07-19 01:02:34,015:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:02:34,015:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:02:34,015:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:02:34,015:INFO:PyCaret required dependencies:
2024-07-19 01:02:34,015:INFO:                 pip: 24.1.2
2024-07-19 01:02:34,015:INFO:          setuptools: 65.5.0
2024-07-19 01:02:34,015:INFO:             pycaret: 3.3.2
2024-07-19 01:02:34,015:INFO:             IPython: 8.21.0
2024-07-19 01:02:34,015:INFO:          ipywidgets: 8.1.3
2024-07-19 01:02:34,015:INFO:                tqdm: 4.66.4
2024-07-19 01:02:34,015:INFO:               numpy: 1.26.4
2024-07-19 01:02:34,015:INFO:              pandas: 2.1.4
2024-07-19 01:02:34,015:INFO:              jinja2: 3.1.2
2024-07-19 01:02:34,015:INFO:               scipy: 1.11.4
2024-07-19 01:02:34,015:INFO:              joblib: 1.3.2
2024-07-19 01:02:34,015:INFO:             sklearn: 1.4.2
2024-07-19 01:02:34,015:INFO:                pyod: 2.0.1
2024-07-19 01:02:34,015:INFO:            imblearn: 0.12.2
2024-07-19 01:02:34,015:INFO:   category_encoders: 2.6.3
2024-07-19 01:02:34,015:INFO:            lightgbm: 4.3.0
2024-07-19 01:02:34,015:INFO:               numba: 0.60.0
2024-07-19 01:02:34,015:INFO:            requests: 2.32.3
2024-07-19 01:02:34,015:INFO:          matplotlib: 3.8.3
2024-07-19 01:02:34,015:INFO:          scikitplot: 0.3.7
2024-07-19 01:02:34,015:INFO:         yellowbrick: 1.5
2024-07-19 01:02:34,015:INFO:              plotly: 5.20.0
2024-07-19 01:02:34,015:INFO:    plotly-resampler: Not installed
2024-07-19 01:02:34,015:INFO:             kaleido: 0.2.1
2024-07-19 01:02:34,016:INFO:           schemdraw: 0.15
2024-07-19 01:02:34,016:INFO:         statsmodels: 0.14.2
2024-07-19 01:02:34,016:INFO:              sktime: 0.26.0
2024-07-19 01:02:34,016:INFO:               tbats: 1.1.3
2024-07-19 01:02:34,016:INFO:            pmdarima: 2.0.4
2024-07-19 01:02:34,016:INFO:              psutil: 5.9.8
2024-07-19 01:02:34,016:INFO:          markupsafe: 2.1.3
2024-07-19 01:02:34,016:INFO:             pickle5: Not installed
2024-07-19 01:02:34,016:INFO:         cloudpickle: 3.0.0
2024-07-19 01:02:34,016:INFO:         deprecation: 2.1.0
2024-07-19 01:02:34,016:INFO:              xxhash: 3.4.1
2024-07-19 01:02:34,016:INFO:           wurlitzer: Not installed
2024-07-19 01:02:34,016:INFO:PyCaret optional dependencies:
2024-07-19 01:02:34,016:INFO:                shap: 0.44.1
2024-07-19 01:02:34,016:INFO:           interpret: 0.6.2
2024-07-19 01:02:34,016:INFO:                umap: 0.5.6
2024-07-19 01:02:34,016:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:02:34,016:INFO:  explainerdashboard: Not installed
2024-07-19 01:02:34,016:INFO:             autoviz: Not installed
2024-07-19 01:02:34,016:INFO:           fairlearn: 0.7.0
2024-07-19 01:02:34,016:INFO:          deepchecks: Not installed
2024-07-19 01:02:34,016:INFO:             xgboost: 2.0.3
2024-07-19 01:02:34,016:INFO:            catboost: 1.2.5
2024-07-19 01:02:34,016:INFO:              kmodes: 0.12.2
2024-07-19 01:02:34,016:INFO:             mlxtend: 0.23.1
2024-07-19 01:02:34,016:INFO:       statsforecast: Not installed
2024-07-19 01:02:34,016:INFO:        tune_sklearn: Not installed
2024-07-19 01:02:34,016:INFO:                 ray: Not installed
2024-07-19 01:02:34,016:INFO:            hyperopt: 0.2.7
2024-07-19 01:02:34,016:INFO:              optuna: 3.6.1
2024-07-19 01:02:34,016:INFO:               skopt: 0.10.2
2024-07-19 01:02:34,016:INFO:              mlflow: Not installed
2024-07-19 01:02:34,016:INFO:              gradio: Not installed
2024-07-19 01:02:34,016:INFO:             fastapi: Not installed
2024-07-19 01:02:34,016:INFO:             uvicorn: 0.30.1
2024-07-19 01:02:34,016:INFO:              m2cgen: 0.10.0
2024-07-19 01:02:34,016:INFO:           evidently: Not installed
2024-07-19 01:02:34,016:INFO:               fugue: Not installed
2024-07-19 01:02:34,016:INFO:           streamlit: Not installed
2024-07-19 01:02:34,017:INFO:             prophet: Not installed
2024-07-19 01:02:34,017:INFO:None
2024-07-19 01:02:34,017:INFO:Set up data.
2024-07-19 01:02:34,036:INFO:Set up folding strategy.
2024-07-19 01:02:34,037:INFO:Set up train/test split.
2024-07-19 01:02:34,052:INFO:Set up index.
2024-07-19 01:02:34,052:INFO:Assigning column types.
2024-07-19 01:02:34,065:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:02:34,097:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:02:34,098:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:02:34,119:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:34,121:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:34,154:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:02:34,154:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:02:34,174:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:34,177:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:34,177:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:02:34,210:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:02:34,230:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:34,233:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:34,266:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:02:34,286:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:34,288:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:34,289:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:02:34,343:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:34,345:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:34,401:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:34,403:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:34,405:INFO:Preparing preprocessing pipeline...
2024-07-19 01:02:34,407:INFO:Set up simple imputation.
2024-07-19 01:02:34,413:INFO:Set up encoding of categorical features.
2024-07-19 01:02:34,415:INFO:Set up column name cleaning.
2024-07-19 01:02:34,566:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:02:34,570:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'Index',
                                             'Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Sent tnx', 'Received Tnx',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To A...
                                                                    'most sent '
                                                                    'token '
                                                                    'type',
                                                                    ' '
                                                                    'ERC20_most_rec_token_type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:02:34,570:INFO:Creating final display dataframe.
2024-07-19 01:02:34,953:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9841, 51)
4        Transformed data shape        (9841, 51)
5   Transformed train set shape        (6888, 51)
6    Transformed test set shape        (2953, 51)
7              Numeric features                47
8          Categorical features                 3
9      Rows with missing values             27.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              e96c
2024-07-19 01:02:35,015:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,016:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,072:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,073:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,075:INFO:setup() successfully completed in 1.07s...............
2024-07-19 01:02:35,100:INFO:PyCaret ClassificationExperiment
2024-07-19 01:02:35,100:INFO:Logging name: clf-default-name
2024-07-19 01:02:35,100:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:02:35,100:INFO:version 3.3.2
2024-07-19 01:02:35,100:INFO:Initializing setup()
2024-07-19 01:02:35,100:INFO:self.USI: 0083
2024-07-19 01:02:35,100:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:02:35,100:INFO:Checking environment
2024-07-19 01:02:35,100:INFO:python_version: 3.10.11
2024-07-19 01:02:35,100:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:02:35,100:INFO:machine: AMD64
2024-07-19 01:02:35,100:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:02:35,107:INFO:Memory: svmem(total=16516247552, available=4623110144, percent=72.0, used=11893137408, free=4623110144)
2024-07-19 01:02:35,107:INFO:Physical Core: 8
2024-07-19 01:02:35,107:INFO:Logical Core: 16
2024-07-19 01:02:35,107:INFO:Checking libraries
2024-07-19 01:02:35,107:INFO:System:
2024-07-19 01:02:35,107:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:02:35,107:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:02:35,107:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:02:35,107:INFO:PyCaret required dependencies:
2024-07-19 01:02:35,108:INFO:                 pip: 24.1.2
2024-07-19 01:02:35,108:INFO:          setuptools: 65.5.0
2024-07-19 01:02:35,108:INFO:             pycaret: 3.3.2
2024-07-19 01:02:35,108:INFO:             IPython: 8.21.0
2024-07-19 01:02:35,108:INFO:          ipywidgets: 8.1.3
2024-07-19 01:02:35,108:INFO:                tqdm: 4.66.4
2024-07-19 01:02:35,108:INFO:               numpy: 1.26.4
2024-07-19 01:02:35,108:INFO:              pandas: 2.1.4
2024-07-19 01:02:35,108:INFO:              jinja2: 3.1.2
2024-07-19 01:02:35,108:INFO:               scipy: 1.11.4
2024-07-19 01:02:35,108:INFO:              joblib: 1.3.2
2024-07-19 01:02:35,108:INFO:             sklearn: 1.4.2
2024-07-19 01:02:35,108:INFO:                pyod: 2.0.1
2024-07-19 01:02:35,108:INFO:            imblearn: 0.12.2
2024-07-19 01:02:35,108:INFO:   category_encoders: 2.6.3
2024-07-19 01:02:35,108:INFO:            lightgbm: 4.3.0
2024-07-19 01:02:35,108:INFO:               numba: 0.60.0
2024-07-19 01:02:35,108:INFO:            requests: 2.32.3
2024-07-19 01:02:35,108:INFO:          matplotlib: 3.8.3
2024-07-19 01:02:35,108:INFO:          scikitplot: 0.3.7
2024-07-19 01:02:35,108:INFO:         yellowbrick: 1.5
2024-07-19 01:02:35,108:INFO:              plotly: 5.20.0
2024-07-19 01:02:35,108:INFO:    plotly-resampler: Not installed
2024-07-19 01:02:35,108:INFO:             kaleido: 0.2.1
2024-07-19 01:02:35,108:INFO:           schemdraw: 0.15
2024-07-19 01:02:35,108:INFO:         statsmodels: 0.14.2
2024-07-19 01:02:35,108:INFO:              sktime: 0.26.0
2024-07-19 01:02:35,108:INFO:               tbats: 1.1.3
2024-07-19 01:02:35,108:INFO:            pmdarima: 2.0.4
2024-07-19 01:02:35,108:INFO:              psutil: 5.9.8
2024-07-19 01:02:35,108:INFO:          markupsafe: 2.1.3
2024-07-19 01:02:35,108:INFO:             pickle5: Not installed
2024-07-19 01:02:35,108:INFO:         cloudpickle: 3.0.0
2024-07-19 01:02:35,108:INFO:         deprecation: 2.1.0
2024-07-19 01:02:35,108:INFO:              xxhash: 3.4.1
2024-07-19 01:02:35,108:INFO:           wurlitzer: Not installed
2024-07-19 01:02:35,109:INFO:PyCaret optional dependencies:
2024-07-19 01:02:35,109:INFO:                shap: 0.44.1
2024-07-19 01:02:35,109:INFO:           interpret: 0.6.2
2024-07-19 01:02:35,109:INFO:                umap: 0.5.6
2024-07-19 01:02:35,109:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:02:35,109:INFO:  explainerdashboard: Not installed
2024-07-19 01:02:35,109:INFO:             autoviz: Not installed
2024-07-19 01:02:35,109:INFO:           fairlearn: 0.7.0
2024-07-19 01:02:35,109:INFO:          deepchecks: Not installed
2024-07-19 01:02:35,109:INFO:             xgboost: 2.0.3
2024-07-19 01:02:35,109:INFO:            catboost: 1.2.5
2024-07-19 01:02:35,109:INFO:              kmodes: 0.12.2
2024-07-19 01:02:35,109:INFO:             mlxtend: 0.23.1
2024-07-19 01:02:35,109:INFO:       statsforecast: Not installed
2024-07-19 01:02:35,109:INFO:        tune_sklearn: Not installed
2024-07-19 01:02:35,109:INFO:                 ray: Not installed
2024-07-19 01:02:35,109:INFO:            hyperopt: 0.2.7
2024-07-19 01:02:35,109:INFO:              optuna: 3.6.1
2024-07-19 01:02:35,109:INFO:               skopt: 0.10.2
2024-07-19 01:02:35,109:INFO:              mlflow: Not installed
2024-07-19 01:02:35,109:INFO:              gradio: Not installed
2024-07-19 01:02:35,109:INFO:             fastapi: Not installed
2024-07-19 01:02:35,109:INFO:             uvicorn: 0.30.1
2024-07-19 01:02:35,109:INFO:              m2cgen: 0.10.0
2024-07-19 01:02:35,109:INFO:           evidently: Not installed
2024-07-19 01:02:35,109:INFO:               fugue: Not installed
2024-07-19 01:02:35,109:INFO:           streamlit: Not installed
2024-07-19 01:02:35,109:INFO:             prophet: Not installed
2024-07-19 01:02:35,109:INFO:None
2024-07-19 01:02:35,109:INFO:Set up data.
2024-07-19 01:02:35,120:INFO:Set up folding strategy.
2024-07-19 01:02:35,120:INFO:Set up train/test split.
2024-07-19 01:02:35,130:INFO:Set up index.
2024-07-19 01:02:35,131:INFO:Assigning column types.
2024-07-19 01:02:35,135:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:02:35,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:02:35,167:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:02:35,188:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,190:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:02:35,223:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:02:35,244:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,245:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,246:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:02:35,279:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:02:35,298:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,300:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:02:35,354:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,356:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,356:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:02:35,410:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,412:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,464:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,466:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,468:INFO:Preparing preprocessing pipeline...
2024-07-19 01:02:35,470:INFO:Set up label encoding.
2024-07-19 01:02:35,470:INFO:Set up simple imputation.
2024-07-19 01:02:35,472:INFO:Set up encoding of categorical features.
2024-07-19 01:02:35,473:INFO:Set up column name cleaning.
2024-07-19 01:02:35,552:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:02:35,557:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Number of Cre...
                 TransformerWrapper(exclude=None, include=['Address'],
                                    transformer=TargetEncoder(cols=['Address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:02:35,557:INFO:Creating final display dataframe.
2024-07-19 01:02:35,780:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3                Target mapping      NO: 0, SI: 1
4           Original data shape        (9816, 17)
5        Transformed data shape        (9816, 17)
6   Transformed train set shape        (6871, 17)
7    Transformed test set shape        (2945, 17)
8              Numeric features                15
9          Categorical features                 1
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              0083
2024-07-19 01:02:35,838:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,841:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,893:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:02:35,896:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:02:35,897:INFO:setup() successfully completed in 0.8s...............
2024-07-19 01:02:35,911:INFO:Initializing compare_models()
2024-07-19 01:02:35,911:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:02:35,911:INFO:Checking exceptions
2024-07-19 01:02:35,916:INFO:Preparing display monitor
2024-07-19 01:02:35,957:INFO:Initializing Logistic Regression
2024-07-19 01:02:35,958:INFO:Total runtime is 8.443991343180338e-06 minutes
2024-07-19 01:02:35,962:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:35,963:INFO:Initializing create_model()
2024-07-19 01:02:35,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:35,963:INFO:Checking exceptions
2024-07-19 01:02:35,963:INFO:Importing libraries
2024-07-19 01:02:35,963:INFO:Copying training dataset
2024-07-19 01:02:35,970:INFO:Defining folds
2024-07-19 01:02:35,970:INFO:Declaring metric variables
2024-07-19 01:02:35,974:INFO:Importing untrained model
2024-07-19 01:02:35,978:INFO:Logistic Regression Imported successfully
2024-07-19 01:02:35,984:INFO:Starting cross validation
2024-07-19 01:02:35,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:02:51,355:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,409:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,413:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,418:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,421:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,427:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,433:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,449:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,453:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,453:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,456:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,456:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,459:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,459:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,462:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,468:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,468:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,469:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,471:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,472:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:51,472:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:51,476:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,476:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,484:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,488:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,492:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,493:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,494:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:02:51,494:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,496:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,497:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:51,499:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,500:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,500:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,502:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,507:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,508:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,510:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,518:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,527:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,532:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,540:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,545:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:51,563:INFO:Calculating mean and std
2024-07-19 01:02:51,565:INFO:Creating metrics dataframe
2024-07-19 01:02:51,569:INFO:Uploading results into container
2024-07-19 01:02:51,570:INFO:Uploading model into container now
2024-07-19 01:02:51,571:INFO:_master_model_container: 1
2024-07-19 01:02:51,571:INFO:_display_container: 2
2024-07-19 01:02:51,572:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:02:51,572:INFO:create_model() successfully completed......................................
2024-07-19 01:02:51,746:INFO:SubProcess create_model() end ==================================
2024-07-19 01:02:51,746:INFO:Creating metrics dataframe
2024-07-19 01:02:51,750:INFO:Initializing K Neighbors Classifier
2024-07-19 01:02:51,750:INFO:Total runtime is 0.2632150928179423 minutes
2024-07-19 01:02:51,752:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:51,754:INFO:Initializing create_model()
2024-07-19 01:02:51,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:51,754:INFO:Checking exceptions
2024-07-19 01:02:51,754:INFO:Importing libraries
2024-07-19 01:02:51,754:INFO:Copying training dataset
2024-07-19 01:02:51,762:INFO:Defining folds
2024-07-19 01:02:51,762:INFO:Declaring metric variables
2024-07-19 01:02:51,765:INFO:Importing untrained model
2024-07-19 01:02:51,767:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:02:51,772:INFO:Starting cross validation
2024-07-19 01:02:51,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:02:52,226:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,239:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,244:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,251:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,255:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,266:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,283:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,289:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,292:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,300:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,301:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:52,311:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,825:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,830:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,835:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,837:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,838:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,842:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,842:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,843:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,844:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,845:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,848:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,848:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,849:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,849:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,850:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,854:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,855:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,856:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:56,871:INFO:Calculating mean and std
2024-07-19 01:02:56,873:INFO:Creating metrics dataframe
2024-07-19 01:02:56,877:INFO:Uploading results into container
2024-07-19 01:02:56,877:INFO:Uploading model into container now
2024-07-19 01:02:56,878:INFO:_master_model_container: 2
2024-07-19 01:02:56,878:INFO:_display_container: 2
2024-07-19 01:02:56,879:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:02:56,879:INFO:create_model() successfully completed......................................
2024-07-19 01:02:57,041:INFO:SubProcess create_model() end ==================================
2024-07-19 01:02:57,041:INFO:Creating metrics dataframe
2024-07-19 01:02:57,046:INFO:Initializing Naive Bayes
2024-07-19 01:02:57,046:INFO:Total runtime is 0.3514801462491354 minutes
2024-07-19 01:02:57,048:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:57,048:INFO:Initializing create_model()
2024-07-19 01:02:57,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:57,048:INFO:Checking exceptions
2024-07-19 01:02:57,050:INFO:Importing libraries
2024-07-19 01:02:57,050:INFO:Copying training dataset
2024-07-19 01:02:57,056:INFO:Defining folds
2024-07-19 01:02:57,056:INFO:Declaring metric variables
2024-07-19 01:02:57,059:INFO:Importing untrained model
2024-07-19 01:02:57,062:INFO:Naive Bayes Imported successfully
2024-07-19 01:02:57,066:INFO:Starting cross validation
2024-07-19 01:02:57,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:02:57,211:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,214:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,216:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,222:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,225:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,237:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,238:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,242:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,242:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,249:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,251:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,252:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,256:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,256:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,257:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,261:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,261:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,262:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,262:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,264:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,265:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,266:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,267:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,269:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,270:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,272:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,274:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,274:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,292:INFO:Calculating mean and std
2024-07-19 01:02:57,293:INFO:Creating metrics dataframe
2024-07-19 01:02:57,295:INFO:Uploading results into container
2024-07-19 01:02:57,296:INFO:Uploading model into container now
2024-07-19 01:02:57,296:INFO:_master_model_container: 3
2024-07-19 01:02:57,297:INFO:_display_container: 2
2024-07-19 01:02:57,297:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:02:57,297:INFO:create_model() successfully completed......................................
2024-07-19 01:02:57,403:INFO:SubProcess create_model() end ==================================
2024-07-19 01:02:57,403:INFO:Creating metrics dataframe
2024-07-19 01:02:57,410:INFO:Initializing Decision Tree Classifier
2024-07-19 01:02:57,410:INFO:Total runtime is 0.35753788948059084 minutes
2024-07-19 01:02:57,412:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:57,412:INFO:Initializing create_model()
2024-07-19 01:02:57,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:57,412:INFO:Checking exceptions
2024-07-19 01:02:57,412:INFO:Importing libraries
2024-07-19 01:02:57,412:INFO:Copying training dataset
2024-07-19 01:02:57,418:INFO:Defining folds
2024-07-19 01:02:57,418:INFO:Declaring metric variables
2024-07-19 01:02:57,422:INFO:Importing untrained model
2024-07-19 01:02:57,425:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:02:57,430:INFO:Starting cross validation
2024-07-19 01:02:57,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:02:57,570:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,578:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,580:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,583:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,584:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,584:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,585:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,587:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,589:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,590:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,590:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,590:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,591:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,591:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,592:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,595:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,595:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,596:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,596:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,596:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,597:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,598:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,598:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,599:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,601:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,601:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,602:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,602:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,615:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,615:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,619:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,619:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,620:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,622:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,622:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,623:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,624:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,624:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,627:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:57,628:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,648:INFO:Calculating mean and std
2024-07-19 01:02:57,650:INFO:Creating metrics dataframe
2024-07-19 01:02:57,652:INFO:Uploading results into container
2024-07-19 01:02:57,652:INFO:Uploading model into container now
2024-07-19 01:02:57,652:INFO:_master_model_container: 4
2024-07-19 01:02:57,654:INFO:_display_container: 2
2024-07-19 01:02:57,654:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-19 01:02:57,654:INFO:create_model() successfully completed......................................
2024-07-19 01:02:57,758:INFO:SubProcess create_model() end ==================================
2024-07-19 01:02:57,758:INFO:Creating metrics dataframe
2024-07-19 01:02:57,763:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:02:57,763:INFO:Total runtime is 0.3634278813997905 minutes
2024-07-19 01:02:57,766:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:57,766:INFO:Initializing create_model()
2024-07-19 01:02:57,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:57,766:INFO:Checking exceptions
2024-07-19 01:02:57,766:INFO:Importing libraries
2024-07-19 01:02:57,766:INFO:Copying training dataset
2024-07-19 01:02:57,772:INFO:Defining folds
2024-07-19 01:02:57,772:INFO:Declaring metric variables
2024-07-19 01:02:57,775:INFO:Importing untrained model
2024-07-19 01:02:57,777:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:02:57,783:INFO:Starting cross validation
2024-07-19 01:02:57,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:02:57,921:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,928:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,937:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,940:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,946:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,948:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,952:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,954:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,955:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,958:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,960:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,961:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,964:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,964:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,966:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,967:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,969:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,972:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,972:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,973:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,977:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,982:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,983:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,989:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,991:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,994:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:57,998:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,007:INFO:Calculating mean and std
2024-07-19 01:02:58,008:INFO:Creating metrics dataframe
2024-07-19 01:02:58,009:INFO:Uploading results into container
2024-07-19 01:02:58,010:INFO:Uploading model into container now
2024-07-19 01:02:58,010:INFO:_master_model_container: 5
2024-07-19 01:02:58,010:INFO:_display_container: 2
2024-07-19 01:02:58,011:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:02:58,011:INFO:create_model() successfully completed......................................
2024-07-19 01:02:58,118:INFO:SubProcess create_model() end ==================================
2024-07-19 01:02:58,118:INFO:Creating metrics dataframe
2024-07-19 01:02:58,124:INFO:Initializing Ridge Classifier
2024-07-19 01:02:58,124:INFO:Total runtime is 0.36944377024968467 minutes
2024-07-19 01:02:58,126:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:58,126:INFO:Initializing create_model()
2024-07-19 01:02:58,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:58,127:INFO:Checking exceptions
2024-07-19 01:02:58,127:INFO:Importing libraries
2024-07-19 01:02:58,127:INFO:Copying training dataset
2024-07-19 01:02:58,133:INFO:Defining folds
2024-07-19 01:02:58,133:INFO:Declaring metric variables
2024-07-19 01:02:58,137:INFO:Importing untrained model
2024-07-19 01:02:58,140:INFO:Ridge Classifier Imported successfully
2024-07-19 01:02:58,144:INFO:Starting cross validation
2024-07-19 01:02:58,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:02:58,275:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,279:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,281:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,284:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,285:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,285:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,286:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,288:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,291:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,291:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,293:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,295:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,295:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,296:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,300:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,303:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,305:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,307:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,309:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,310:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,313:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,315:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,315:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,317:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,318:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,320:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,322:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,323:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,324:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,325:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,327:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,327:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,328:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,332:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,334:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,335:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,336:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,339:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,341:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:58,343:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:58,361:INFO:Calculating mean and std
2024-07-19 01:02:58,362:INFO:Creating metrics dataframe
2024-07-19 01:02:58,363:INFO:Uploading results into container
2024-07-19 01:02:58,364:INFO:Uploading model into container now
2024-07-19 01:02:58,364:INFO:_master_model_container: 6
2024-07-19 01:02:58,364:INFO:_display_container: 2
2024-07-19 01:02:58,365:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-19 01:02:58,365:INFO:create_model() successfully completed......................................
2024-07-19 01:02:58,470:INFO:SubProcess create_model() end ==================================
2024-07-19 01:02:58,470:INFO:Creating metrics dataframe
2024-07-19 01:02:58,476:INFO:Initializing Random Forest Classifier
2024-07-19 01:02:58,477:INFO:Total runtime is 0.3753210266431173 minutes
2024-07-19 01:02:58,478:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:58,479:INFO:Initializing create_model()
2024-07-19 01:02:58,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:58,479:INFO:Checking exceptions
2024-07-19 01:02:58,479:INFO:Importing libraries
2024-07-19 01:02:58,479:INFO:Copying training dataset
2024-07-19 01:02:58,485:INFO:Defining folds
2024-07-19 01:02:58,487:INFO:Declaring metric variables
2024-07-19 01:02:58,489:INFO:Importing untrained model
2024-07-19 01:02:58,492:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:02:58,497:INFO:Starting cross validation
2024-07-19 01:02:58,498:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:02:59,275:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,276:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,286:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,286:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,291:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,291:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,292:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,295:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,296:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,302:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,308:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

fier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,314:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,318:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,323:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,324:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,328:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,331:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,336:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,338:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,339:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,346:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,350:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,353:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,354:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,355:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,359:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,363:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,363:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,366:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,366:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,369:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,383:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,390:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,393:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,395:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,490:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,494:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,496:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,498:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,516:INFO:Calculating mean and std
2024-07-19 01:02:59,517:INFO:Creating metrics dataframe
2024-07-19 01:02:59,519:INFO:Uploading results into container
2024-07-19 01:02:59,519:INFO:Uploading model into container now
2024-07-19 01:02:59,520:INFO:_master_model_container: 7
2024-07-19 01:02:59,520:INFO:_display_container: 2
2024-07-19 01:02:59,520:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:02:59,520:INFO:create_model() successfully completed......................................
2024-07-19 01:02:59,628:INFO:SubProcess create_model() end ==================================
2024-07-19 01:02:59,628:INFO:Creating metrics dataframe
2024-07-19 01:02:59,634:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:02:59,634:INFO:Total runtime is 0.3946038881937663 minutes
2024-07-19 01:02:59,636:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:59,636:INFO:Initializing create_model()
2024-07-19 01:02:59,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:59,637:INFO:Checking exceptions
2024-07-19 01:02:59,637:INFO:Importing libraries
2024-07-19 01:02:59,637:INFO:Copying training dataset
2024-07-19 01:02:59,643:INFO:Defining folds
2024-07-19 01:02:59,643:INFO:Declaring metric variables
2024-07-19 01:02:59,647:INFO:Importing untrained model
2024-07-19 01:02:59,650:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:02:59,655:INFO:Starting cross validation
2024-07-19 01:02:59,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:02:59,779:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:02:59,779:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:02:59,787:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:02:59,794:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:02:59,799:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:02:59,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:02:59,810:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,812:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,813:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:02:59,816:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,817:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,819:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,820:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,820:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,821:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,822:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,824:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,825:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,826:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,826:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,829:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,830:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,830:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,832:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,834:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,834:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,834:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,834:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,834:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,835:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,837:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,838:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,840:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,840:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,841:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,842:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,842:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,843:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,845:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,845:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,846:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,847:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:02:59,848:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,850:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,850:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:02:59,873:INFO:Calculating mean and std
2024-07-19 01:02:59,874:INFO:Creating metrics dataframe
2024-07-19 01:02:59,875:INFO:Uploading results into container
2024-07-19 01:02:59,876:INFO:Uploading model into container now
2024-07-19 01:02:59,876:INFO:_master_model_container: 8
2024-07-19 01:02:59,876:INFO:_display_container: 2
2024-07-19 01:02:59,876:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:02:59,876:INFO:create_model() successfully completed......................................
2024-07-19 01:02:59,981:INFO:SubProcess create_model() end ==================================
2024-07-19 01:02:59,981:INFO:Creating metrics dataframe
2024-07-19 01:02:59,987:INFO:Initializing Ada Boost Classifier
2024-07-19 01:02:59,987:INFO:Total runtime is 0.4004905939102173 minutes
2024-07-19 01:02:59,989:INFO:SubProcess create_model() called ==================================
2024-07-19 01:02:59,990:INFO:Initializing create_model()
2024-07-19 01:02:59,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:02:59,990:INFO:Checking exceptions
2024-07-19 01:02:59,990:INFO:Importing libraries
2024-07-19 01:02:59,990:INFO:Copying training dataset
2024-07-19 01:02:59,996:INFO:Defining folds
2024-07-19 01:02:59,996:INFO:Declaring metric variables
2024-07-19 01:02:59,999:INFO:Importing untrained model
2024-07-19 01:03:00,002:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:03:00,008:INFO:Starting cross validation
2024-07-19 01:03:00,010:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:00,126:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,126:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,126:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,134:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,136:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,141:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,151:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,153:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,153:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:00,166:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,168:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,171:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,173:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,174:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,174:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,177:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,177:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,178:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,178:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,180:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,182:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,185:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,185:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,187:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,187:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,189:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,190:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,190:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,190:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,191:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,191:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,191:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,192:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,193:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,195:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,195:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,196:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,196:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,196:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,197:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,198:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,198:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,198:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,199:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,200:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:00,201:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,201:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,201:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,202:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:00,218:INFO:Calculating mean and std
2024-07-19 01:03:00,220:INFO:Creating metrics dataframe
2024-07-19 01:03:00,221:INFO:Uploading results into container
2024-07-19 01:03:00,222:INFO:Uploading model into container now
2024-07-19 01:03:00,222:INFO:_master_model_container: 9
2024-07-19 01:03:00,223:INFO:_display_container: 2
2024-07-19 01:03:00,223:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-19 01:03:00,223:INFO:create_model() successfully completed......................................
2024-07-19 01:03:00,329:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:00,329:INFO:Creating metrics dataframe
2024-07-19 01:03:00,335:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:03:00,335:INFO:Total runtime is 0.40630124807357787 minutes
2024-07-19 01:03:00,339:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:00,340:INFO:Initializing create_model()
2024-07-19 01:03:00,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:00,340:INFO:Checking exceptions
2024-07-19 01:03:00,340:INFO:Importing libraries
2024-07-19 01:03:00,340:INFO:Copying training dataset
2024-07-19 01:03:00,346:INFO:Defining folds
2024-07-19 01:03:00,346:INFO:Declaring metric variables
2024-07-19 01:03:00,349:INFO:Importing untrained model
2024-07-19 01:03:00,352:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:03:00,359:INFO:Starting cross validation
2024-07-19 01:03:00,361:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:01,400:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,410:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,415:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,419:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,427:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,432:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,436:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,440:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,440:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,445:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,448:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,451:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,459:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,463:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,465:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,467:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,468:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,469:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,471:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,473:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,478:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,484:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,487:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,487:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,490:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,490:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,492:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,495:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,495:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,497:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,497:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,498:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,500:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,503:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,505:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,508:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,508:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,513:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,515:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,517:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,529:INFO:Calculating mean and std
2024-07-19 01:03:01,531:INFO:Creating metrics dataframe
2024-07-19 01:03:01,533:INFO:Uploading results into container
2024-07-19 01:03:01,533:INFO:Uploading model into container now
2024-07-19 01:03:01,534:INFO:_master_model_container: 10
2024-07-19 01:03:01,534:INFO:_display_container: 2
2024-07-19 01:03:01,534:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:03:01,534:INFO:create_model() successfully completed......................................
2024-07-19 01:03:01,639:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:01,644:INFO:Creating metrics dataframe
2024-07-19 01:03:01,651:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:03:01,651:INFO:Total runtime is 0.4282250881195068 minutes
2024-07-19 01:03:01,654:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:01,654:INFO:Initializing create_model()
2024-07-19 01:03:01,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:01,654:INFO:Checking exceptions
2024-07-19 01:03:01,654:INFO:Importing libraries
2024-07-19 01:03:01,654:INFO:Copying training dataset
2024-07-19 01:03:01,661:INFO:Defining folds
2024-07-19 01:03:01,661:INFO:Declaring metric variables
2024-07-19 01:03:01,664:INFO:Importing untrained model
2024-07-19 01:03:01,666:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:03:01,672:INFO:Starting cross validation
2024-07-19 01:03:01,673:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:01,807:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,813:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,816:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,819:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,826:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,830:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,831:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,834:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,835:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,837:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,840:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,843:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,843:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,845:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,847:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,847:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,848:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,850:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,850:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,851:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,852:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,852:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,854:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,855:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,857:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,858:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,859:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,859:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,860:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,864:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,864:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,866:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,866:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,867:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,869:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:01,869:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,872:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:01,887:INFO:Calculating mean and std
2024-07-19 01:03:01,888:INFO:Creating metrics dataframe
2024-07-19 01:03:01,890:INFO:Uploading results into container
2024-07-19 01:03:01,891:INFO:Uploading model into container now
2024-07-19 01:03:01,891:INFO:_master_model_container: 11
2024-07-19 01:03:01,891:INFO:_display_container: 2
2024-07-19 01:03:01,892:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:03:01,892:INFO:create_model() successfully completed......................................
2024-07-19 01:03:02,001:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:02,001:INFO:Creating metrics dataframe
2024-07-19 01:03:02,008:INFO:Initializing Extra Trees Classifier
2024-07-19 01:03:02,008:INFO:Total runtime is 0.43418290615081784 minutes
2024-07-19 01:03:02,011:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:02,011:INFO:Initializing create_model()
2024-07-19 01:03:02,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:02,012:INFO:Checking exceptions
2024-07-19 01:03:02,012:INFO:Importing libraries
2024-07-19 01:03:02,012:INFO:Copying training dataset
2024-07-19 01:03:02,018:INFO:Defining folds
2024-07-19 01:03:02,018:INFO:Declaring metric variables
2024-07-19 01:03:02,022:INFO:Importing untrained model
2024-07-19 01:03:02,024:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:03:02,029:INFO:Starting cross validation
2024-07-19 01:03:02,030:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:02,452:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,457:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,461:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,466:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,469:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,469:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,469:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,470:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,470:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,476:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,477:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,478:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,478:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,479:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,480:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,480:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,481:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,482:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,483:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,483:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,483:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,485:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,487:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,489:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,496:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,502:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,505:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,508:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,528:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,535:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,538:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,540:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,545:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,551:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,554:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,558:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,560:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,565:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,567:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:02,569:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:02,582:INFO:Calculating mean and std
2024-07-19 01:03:02,584:INFO:Creating metrics dataframe
2024-07-19 01:03:02,585:INFO:Uploading results into container
2024-07-19 01:03:02,586:INFO:Uploading model into container now
2024-07-19 01:03:02,586:INFO:_master_model_container: 12
2024-07-19 01:03:02,586:INFO:_display_container: 2
2024-07-19 01:03:02,587:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-19 01:03:02,587:INFO:create_model() successfully completed......................................
2024-07-19 01:03:02,692:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:02,693:INFO:Creating metrics dataframe
2024-07-19 01:03:02,699:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:03:02,699:INFO:Total runtime is 0.4456920464833577 minutes
2024-07-19 01:03:02,701:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:02,702:INFO:Initializing create_model()
2024-07-19 01:03:02,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:02,702:INFO:Checking exceptions
2024-07-19 01:03:02,702:INFO:Importing libraries
2024-07-19 01:03:02,702:INFO:Copying training dataset
2024-07-19 01:03:02,708:INFO:Defining folds
2024-07-19 01:03:02,709:INFO:Declaring metric variables
2024-07-19 01:03:02,712:INFO:Importing untrained model
2024-07-19 01:03:02,715:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:03:02,720:INFO:Starting cross validation
2024-07-19 01:03:02,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:03,006:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,012:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,015:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,017:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,020:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,020:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,027:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,029:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,030:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,030:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,030:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,032:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,033:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,034:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,034:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,034:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,035:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,035:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,035:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,037:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,038:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,038:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,039:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,039:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,039:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,039:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,041:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,041:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,042:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,042:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,042:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,044:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,045:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,050:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,052:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,054:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,057:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,061:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,063:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,064:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,079:INFO:Calculating mean and std
2024-07-19 01:03:03,081:INFO:Creating metrics dataframe
2024-07-19 01:03:03,082:INFO:Uploading results into container
2024-07-19 01:03:03,083:INFO:Uploading model into container now
2024-07-19 01:03:03,083:INFO:_master_model_container: 13
2024-07-19 01:03:03,083:INFO:_display_container: 2
2024-07-19 01:03:03,084:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:03:03,084:INFO:create_model() successfully completed......................................
2024-07-19 01:03:03,186:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:03,187:INFO:Creating metrics dataframe
2024-07-19 01:03:03,194:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:03:03,194:INFO:Total runtime is 0.453936227162679 minutes
2024-07-19 01:03:03,197:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:03,197:INFO:Initializing create_model()
2024-07-19 01:03:03,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:03,197:INFO:Checking exceptions
2024-07-19 01:03:03,198:INFO:Importing libraries
2024-07-19 01:03:03,198:INFO:Copying training dataset
2024-07-19 01:03:03,204:INFO:Defining folds
2024-07-19 01:03:03,204:INFO:Declaring metric variables
2024-07-19 01:03:03,207:INFO:Importing untrained model
2024-07-19 01:03:03,211:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:03:03,215:INFO:Starting cross validation
2024-07-19 01:03:03,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:03,609:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,618:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,622:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,624:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,626:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,632:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,636:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,640:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,662:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,671:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,676:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,680:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,710:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,714:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,719:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,722:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,723:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,727:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,728:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,731:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,753:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,755:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,762:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,764:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,767:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,770:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,771:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,775:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,786:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,793:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,795:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,800:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,802:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,804:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,806:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,810:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,828:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,836:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,840:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:03,844:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:03:03,871:INFO:Calculating mean and std
2024-07-19 01:03:03,873:INFO:Creating metrics dataframe
2024-07-19 01:03:03,876:INFO:Uploading results into container
2024-07-19 01:03:03,876:INFO:Uploading model into container now
2024-07-19 01:03:03,877:INFO:_master_model_container: 14
2024-07-19 01:03:03,877:INFO:_display_container: 2
2024-07-19 01:03:03,878:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:03:03,878:INFO:create_model() successfully completed......................................
2024-07-19 01:03:03,998:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:03,998:INFO:Creating metrics dataframe
2024-07-19 01:03:04,005:INFO:Initializing CatBoost Classifier
2024-07-19 01:03:04,005:INFO:Total runtime is 0.46746638218561803 minutes
2024-07-19 01:03:04,007:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:04,008:INFO:Initializing create_model()
2024-07-19 01:03:04,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191B4C7F700>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B646E470>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:04,008:INFO:Checking exceptions
2024-07-19 01:03:04,008:INFO:Importing libraries
2024-07-19 01:03:04,008:INFO:Copying training dataset
2024-07-19 01:03:04,015:INFO:Defining folds
2024-07-19 01:03:04,015:INFO:Declaring metric variables
2024-07-19 01:03:04,018:INFO:Importing untrained model
2024-07-19 01:03:04,021:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:03:04,026:INFO:Starting cross validation
2024-07-19 01:03:04,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:37,097:INFO:PyCaret ClassificationExperiment
2024-07-19 01:03:37,097:INFO:Logging name: clf-default-name
2024-07-19 01:03:37,097:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:03:37,097:INFO:version 3.3.2
2024-07-19 01:03:37,097:INFO:Initializing setup()
2024-07-19 01:03:37,097:INFO:self.USI: cbf2
2024-07-19 01:03:37,097:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:03:37,097:INFO:Checking environment
2024-07-19 01:03:37,097:INFO:python_version: 3.10.11
2024-07-19 01:03:37,097:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:03:37,097:INFO:machine: AMD64
2024-07-19 01:03:37,097:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:03:37,102:INFO:Memory: svmem(total=16516247552, available=4767854592, percent=71.1, used=11748392960, free=4767854592)
2024-07-19 01:03:37,102:INFO:Physical Core: 8
2024-07-19 01:03:37,102:INFO:Logical Core: 16
2024-07-19 01:03:37,102:INFO:Checking libraries
2024-07-19 01:03:37,102:INFO:System:
2024-07-19 01:03:37,102:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:03:37,102:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:03:37,102:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:03:37,102:INFO:PyCaret required dependencies:
2024-07-19 01:03:37,102:INFO:                 pip: 24.1.2
2024-07-19 01:03:37,102:INFO:          setuptools: 65.5.0
2024-07-19 01:03:37,102:INFO:             pycaret: 3.3.2
2024-07-19 01:03:37,102:INFO:             IPython: 8.21.0
2024-07-19 01:03:37,103:INFO:          ipywidgets: 8.1.3
2024-07-19 01:03:37,103:INFO:                tqdm: 4.66.4
2024-07-19 01:03:37,103:INFO:               numpy: 1.26.4
2024-07-19 01:03:37,103:INFO:              pandas: 2.1.4
2024-07-19 01:03:37,103:INFO:              jinja2: 3.1.2
2024-07-19 01:03:37,103:INFO:               scipy: 1.11.4
2024-07-19 01:03:37,103:INFO:              joblib: 1.3.2
2024-07-19 01:03:37,103:INFO:             sklearn: 1.4.2
2024-07-19 01:03:37,103:INFO:                pyod: 2.0.1
2024-07-19 01:03:37,103:INFO:            imblearn: 0.12.2
2024-07-19 01:03:37,103:INFO:   category_encoders: 2.6.3
2024-07-19 01:03:37,103:INFO:            lightgbm: 4.3.0
2024-07-19 01:03:37,103:INFO:               numba: 0.60.0
2024-07-19 01:03:37,103:INFO:            requests: 2.32.3
2024-07-19 01:03:37,103:INFO:          matplotlib: 3.8.3
2024-07-19 01:03:37,103:INFO:          scikitplot: 0.3.7
2024-07-19 01:03:37,103:INFO:         yellowbrick: 1.5
2024-07-19 01:03:37,103:INFO:              plotly: 5.20.0
2024-07-19 01:03:37,103:INFO:    plotly-resampler: Not installed
2024-07-19 01:03:37,103:INFO:             kaleido: 0.2.1
2024-07-19 01:03:37,103:INFO:           schemdraw: 0.15
2024-07-19 01:03:37,103:INFO:         statsmodels: 0.14.2
2024-07-19 01:03:37,103:INFO:              sktime: 0.26.0
2024-07-19 01:03:37,103:INFO:               tbats: 1.1.3
2024-07-19 01:03:37,103:INFO:            pmdarima: 2.0.4
2024-07-19 01:03:37,103:INFO:              psutil: 5.9.8
2024-07-19 01:03:37,103:INFO:          markupsafe: 2.1.3
2024-07-19 01:03:37,103:INFO:             pickle5: Not installed
2024-07-19 01:03:37,103:INFO:         cloudpickle: 3.0.0
2024-07-19 01:03:37,103:INFO:         deprecation: 2.1.0
2024-07-19 01:03:37,103:INFO:              xxhash: 3.4.1
2024-07-19 01:03:37,103:INFO:           wurlitzer: Not installed
2024-07-19 01:03:37,103:INFO:PyCaret optional dependencies:
2024-07-19 01:03:37,103:INFO:                shap: 0.44.1
2024-07-19 01:03:37,103:INFO:           interpret: 0.6.2
2024-07-19 01:03:37,103:INFO:                umap: 0.5.6
2024-07-19 01:03:37,103:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:03:37,103:INFO:  explainerdashboard: Not installed
2024-07-19 01:03:37,103:INFO:             autoviz: Not installed
2024-07-19 01:03:37,103:INFO:           fairlearn: 0.7.0
2024-07-19 01:03:37,104:INFO:          deepchecks: Not installed
2024-07-19 01:03:37,104:INFO:             xgboost: 2.0.3
2024-07-19 01:03:37,104:INFO:            catboost: 1.2.5
2024-07-19 01:03:37,104:INFO:              kmodes: 0.12.2
2024-07-19 01:03:37,104:INFO:             mlxtend: 0.23.1
2024-07-19 01:03:37,104:INFO:       statsforecast: Not installed
2024-07-19 01:03:37,104:INFO:        tune_sklearn: Not installed
2024-07-19 01:03:37,104:INFO:                 ray: Not installed
2024-07-19 01:03:37,104:INFO:            hyperopt: 0.2.7
2024-07-19 01:03:37,104:INFO:              optuna: 3.6.1
2024-07-19 01:03:37,104:INFO:               skopt: 0.10.2
2024-07-19 01:03:37,104:INFO:              mlflow: Not installed
2024-07-19 01:03:37,104:INFO:              gradio: Not installed
2024-07-19 01:03:37,104:INFO:             fastapi: Not installed
2024-07-19 01:03:37,104:INFO:             uvicorn: 0.30.1
2024-07-19 01:03:37,104:INFO:              m2cgen: 0.10.0
2024-07-19 01:03:37,104:INFO:           evidently: Not installed
2024-07-19 01:03:37,104:INFO:               fugue: Not installed
2024-07-19 01:03:37,104:INFO:           streamlit: Not installed
2024-07-19 01:03:37,104:INFO:             prophet: Not installed
2024-07-19 01:03:37,104:INFO:None
2024-07-19 01:03:37,104:INFO:Set up data.
2024-07-19 01:03:37,123:INFO:Set up folding strategy.
2024-07-19 01:03:37,123:INFO:Set up train/test split.
2024-07-19 01:03:37,140:INFO:Set up index.
2024-07-19 01:03:37,140:INFO:Assigning column types.
2024-07-19 01:03:37,152:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:03:37,185:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:03:37,185:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:03:37,205:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:03:37,208:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:03:37,240:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:03:37,241:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:03:37,261:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:03:37,263:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:03:37,263:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:03:37,296:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:03:37,315:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:03:37,317:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:03:37,351:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:03:37,371:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:03:37,373:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:03:37,373:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:03:37,427:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:03:37,429:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:03:37,481:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:03:37,483:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:03:37,484:INFO:Preparing preprocessing pipeline...
2024-07-19 01:03:37,487:INFO:Set up simple imputation.
2024-07-19 01:03:37,492:INFO:Set up encoding of categorical features.
2024-07-19 01:03:37,495:INFO:Set up column name cleaning.
2024-07-19 01:03:37,629:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:03:37,635:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'Index',
                                             'Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Sent tnx', 'Received Tnx',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To A...
                                                                    'most sent '
                                                                    'token '
                                                                    'type',
                                                                    ' '
                                                                    'ERC20_most_rec_token_type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:03:37,635:INFO:Creating final display dataframe.
2024-07-19 01:03:37,999:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9841, 51)
4        Transformed data shape        (9841, 51)
5   Transformed train set shape        (6888, 51)
6    Transformed test set shape        (2953, 51)
7              Numeric features                47
8          Categorical features                 3
9      Rows with missing values             27.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              cbf2
2024-07-19 01:03:38,057:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:03:38,059:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:03:38,113:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:03:38,115:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:03:38,116:INFO:setup() successfully completed in 1.02s...............
2024-07-19 01:03:38,126:INFO:Initializing compare_models()
2024-07-19 01:03:38,126:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:03:38,126:INFO:Checking exceptions
2024-07-19 01:03:38,138:INFO:Preparing display monitor
2024-07-19 01:03:38,153:INFO:Initializing Logistic Regression
2024-07-19 01:03:38,153:INFO:Total runtime is 0.0 minutes
2024-07-19 01:03:38,156:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:38,157:INFO:Initializing create_model()
2024-07-19 01:03:38,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:38,157:INFO:Checking exceptions
2024-07-19 01:03:38,157:INFO:Importing libraries
2024-07-19 01:03:38,157:INFO:Copying training dataset
2024-07-19 01:03:38,170:INFO:Defining folds
2024-07-19 01:03:38,170:INFO:Declaring metric variables
2024-07-19 01:03:38,173:INFO:Importing untrained model
2024-07-19 01:03:38,176:INFO:Logistic Regression Imported successfully
2024-07-19 01:03:38,180:INFO:Starting cross validation
2024-07-19 01:03:38,182:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:45,095:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,162:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,354:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,473:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,496:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,501:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,508:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,511:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,529:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:03:45,567:INFO:Calculating mean and std
2024-07-19 01:03:45,569:INFO:Creating metrics dataframe
2024-07-19 01:03:45,571:INFO:Uploading results into container
2024-07-19 01:03:45,571:INFO:Uploading model into container now
2024-07-19 01:03:45,572:INFO:_master_model_container: 1
2024-07-19 01:03:45,572:INFO:_display_container: 2
2024-07-19 01:03:45,573:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:03:45,573:INFO:create_model() successfully completed......................................
2024-07-19 01:03:45,758:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:45,758:INFO:Creating metrics dataframe
2024-07-19 01:03:45,762:INFO:Initializing K Neighbors Classifier
2024-07-19 01:03:45,762:INFO:Total runtime is 0.12681891918182372 minutes
2024-07-19 01:03:45,765:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:45,765:INFO:Initializing create_model()
2024-07-19 01:03:45,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:45,765:INFO:Checking exceptions
2024-07-19 01:03:45,765:INFO:Importing libraries
2024-07-19 01:03:45,765:INFO:Copying training dataset
2024-07-19 01:03:45,780:INFO:Defining folds
2024-07-19 01:03:45,780:INFO:Declaring metric variables
2024-07-19 01:03:45,783:INFO:Importing untrained model
2024-07-19 01:03:45,785:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:03:45,790:INFO:Starting cross validation
2024-07-19 01:03:45,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:50,794:INFO:Calculating mean and std
2024-07-19 01:03:50,797:INFO:Creating metrics dataframe
2024-07-19 01:03:50,800:INFO:Uploading results into container
2024-07-19 01:03:50,801:INFO:Uploading model into container now
2024-07-19 01:03:50,801:INFO:_master_model_container: 2
2024-07-19 01:03:50,801:INFO:_display_container: 2
2024-07-19 01:03:50,802:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:03:50,802:INFO:create_model() successfully completed......................................
2024-07-19 01:03:50,963:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:50,964:INFO:Creating metrics dataframe
2024-07-19 01:03:50,969:INFO:Initializing Naive Bayes
2024-07-19 01:03:50,969:INFO:Total runtime is 0.21359473864237466 minutes
2024-07-19 01:03:50,971:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:50,971:INFO:Initializing create_model()
2024-07-19 01:03:50,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:50,971:INFO:Checking exceptions
2024-07-19 01:03:50,971:INFO:Importing libraries
2024-07-19 01:03:50,971:INFO:Copying training dataset
2024-07-19 01:03:50,987:INFO:Defining folds
2024-07-19 01:03:50,987:INFO:Declaring metric variables
2024-07-19 01:03:50,990:INFO:Importing untrained model
2024-07-19 01:03:50,993:INFO:Naive Bayes Imported successfully
2024-07-19 01:03:50,997:INFO:Starting cross validation
2024-07-19 01:03:50,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:51,365:INFO:Calculating mean and std
2024-07-19 01:03:51,367:INFO:Creating metrics dataframe
2024-07-19 01:03:51,368:INFO:Uploading results into container
2024-07-19 01:03:51,369:INFO:Uploading model into container now
2024-07-19 01:03:51,369:INFO:_master_model_container: 3
2024-07-19 01:03:51,369:INFO:_display_container: 2
2024-07-19 01:03:51,370:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:03:51,370:INFO:create_model() successfully completed......................................
2024-07-19 01:03:51,546:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:51,546:INFO:Creating metrics dataframe
2024-07-19 01:03:51,552:INFO:Initializing Decision Tree Classifier
2024-07-19 01:03:51,552:INFO:Total runtime is 0.22332454522450765 minutes
2024-07-19 01:03:51,555:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:51,555:INFO:Initializing create_model()
2024-07-19 01:03:51,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:51,555:INFO:Checking exceptions
2024-07-19 01:03:51,555:INFO:Importing libraries
2024-07-19 01:03:51,555:INFO:Copying training dataset
2024-07-19 01:03:51,569:INFO:Defining folds
2024-07-19 01:03:51,569:INFO:Declaring metric variables
2024-07-19 01:03:51,572:INFO:Importing untrained model
2024-07-19 01:03:51,575:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:03:51,580:INFO:Starting cross validation
2024-07-19 01:03:51,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:51,833:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,853:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,873:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,882:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,883:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,885:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,889:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,906:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,913:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,933:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:51,942:INFO:Calculating mean and std
2024-07-19 01:03:51,944:INFO:Creating metrics dataframe
2024-07-19 01:03:51,946:INFO:Uploading results into container
2024-07-19 01:03:51,946:INFO:Uploading model into container now
2024-07-19 01:03:51,946:INFO:_master_model_container: 4
2024-07-19 01:03:51,946:INFO:_display_container: 2
2024-07-19 01:03:51,947:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-19 01:03:51,947:INFO:create_model() successfully completed......................................
2024-07-19 01:03:52,078:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:52,078:INFO:Creating metrics dataframe
2024-07-19 01:03:52,083:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:03:52,087:INFO:Total runtime is 0.232232403755188 minutes
2024-07-19 01:03:52,090:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:52,090:INFO:Initializing create_model()
2024-07-19 01:03:52,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:52,091:INFO:Checking exceptions
2024-07-19 01:03:52,091:INFO:Importing libraries
2024-07-19 01:03:52,091:INFO:Copying training dataset
2024-07-19 01:03:52,105:INFO:Defining folds
2024-07-19 01:03:52,106:INFO:Declaring metric variables
2024-07-19 01:03:52,108:INFO:Importing untrained model
2024-07-19 01:03:52,111:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:03:52,116:INFO:Starting cross validation
2024-07-19 01:03:52,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:52,472:INFO:Calculating mean and std
2024-07-19 01:03:52,474:INFO:Creating metrics dataframe
2024-07-19 01:03:52,475:INFO:Uploading results into container
2024-07-19 01:03:52,476:INFO:Uploading model into container now
2024-07-19 01:03:52,476:INFO:_master_model_container: 5
2024-07-19 01:03:52,476:INFO:_display_container: 2
2024-07-19 01:03:52,477:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:03:52,477:INFO:create_model() successfully completed......................................
2024-07-19 01:03:52,608:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:52,608:INFO:Creating metrics dataframe
2024-07-19 01:03:52,614:INFO:Initializing Ridge Classifier
2024-07-19 01:03:52,615:INFO:Total runtime is 0.2410354495048523 minutes
2024-07-19 01:03:52,617:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:52,617:INFO:Initializing create_model()
2024-07-19 01:03:52,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:52,617:INFO:Checking exceptions
2024-07-19 01:03:52,617:INFO:Importing libraries
2024-07-19 01:03:52,617:INFO:Copying training dataset
2024-07-19 01:03:52,631:INFO:Defining folds
2024-07-19 01:03:52,631:INFO:Declaring metric variables
2024-07-19 01:03:52,634:INFO:Importing untrained model
2024-07-19 01:03:52,637:INFO:Ridge Classifier Imported successfully
2024-07-19 01:03:52,643:INFO:Starting cross validation
2024-07-19 01:03:52,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:52,915:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.47275e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:52,916:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95647e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:52,916:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95656e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:52,932:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.51911e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:52,933:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.59335e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:52,942:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.77144e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:52,947:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95627e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:52,952:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95661e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:52,963:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:52,967:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:52,969:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:52,978:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:52,984:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:52,984:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:52,988:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:52,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:52,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.79374e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:03:53,013:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:53,030:INFO:Calculating mean and std
2024-07-19 01:03:53,031:INFO:Creating metrics dataframe
2024-07-19 01:03:53,032:INFO:Uploading results into container
2024-07-19 01:03:53,033:INFO:Uploading model into container now
2024-07-19 01:03:53,033:INFO:_master_model_container: 6
2024-07-19 01:03:53,033:INFO:_display_container: 2
2024-07-19 01:03:53,033:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-19 01:03:53,034:INFO:create_model() successfully completed......................................
2024-07-19 01:03:53,167:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:53,167:INFO:Creating metrics dataframe
2024-07-19 01:03:53,172:INFO:Initializing Random Forest Classifier
2024-07-19 01:03:53,173:INFO:Total runtime is 0.25033185879389447 minutes
2024-07-19 01:03:53,175:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:53,175:INFO:Initializing create_model()
2024-07-19 01:03:53,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:53,175:INFO:Checking exceptions
2024-07-19 01:03:53,175:INFO:Importing libraries
2024-07-19 01:03:53,175:INFO:Copying training dataset
2024-07-19 01:03:53,190:INFO:Defining folds
2024-07-19 01:03:53,190:INFO:Declaring metric variables
2024-07-19 01:03:53,193:INFO:Importing untrained model
2024-07-19 01:03:53,195:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:03:53,200:INFO:Starting cross validation
2024-07-19 01:03:53,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:54,217:INFO:Calculating mean and std
2024-07-19 01:03:54,219:INFO:Creating metrics dataframe
2024-07-19 01:03:54,221:INFO:Uploading results into container
2024-07-19 01:03:54,222:INFO:Uploading model into container now
2024-07-19 01:03:54,230:INFO:_master_model_container: 7
2024-07-19 01:03:54,230:INFO:_display_container: 2
2024-07-19 01:03:54,231:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:03:54,231:INFO:create_model() successfully completed......................................
2024-07-19 01:03:54,391:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:54,391:INFO:Creating metrics dataframe
2024-07-19 01:03:54,397:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:03:54,397:INFO:Total runtime is 0.2707313179969788 minutes
2024-07-19 01:03:54,400:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:54,401:INFO:Initializing create_model()
2024-07-19 01:03:54,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:54,401:INFO:Checking exceptions
2024-07-19 01:03:54,401:INFO:Importing libraries
2024-07-19 01:03:54,401:INFO:Copying training dataset
2024-07-19 01:03:54,416:INFO:Defining folds
2024-07-19 01:03:54,416:INFO:Declaring metric variables
2024-07-19 01:03:54,418:INFO:Importing untrained model
2024-07-19 01:03:54,422:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:03:54,426:INFO:Starting cross validation
2024-07-19 01:03:54,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:54,664:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,693:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,697:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,724:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,724:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,737:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,745:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,760:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,761:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,765:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,766:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,769:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,775:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,776:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:03:54,790:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,796:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,802:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,811:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:54,825:INFO:Calculating mean and std
2024-07-19 01:03:54,827:INFO:Creating metrics dataframe
2024-07-19 01:03:54,828:INFO:Uploading results into container
2024-07-19 01:03:54,829:INFO:Uploading model into container now
2024-07-19 01:03:54,829:INFO:_master_model_container: 8
2024-07-19 01:03:54,829:INFO:_display_container: 2
2024-07-19 01:03:54,829:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:03:54,829:INFO:create_model() successfully completed......................................
2024-07-19 01:03:54,957:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:54,957:INFO:Creating metrics dataframe
2024-07-19 01:03:54,963:INFO:Initializing Ada Boost Classifier
2024-07-19 01:03:54,963:INFO:Total runtime is 0.28017437458038336 minutes
2024-07-19 01:03:54,965:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:54,966:INFO:Initializing create_model()
2024-07-19 01:03:54,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:54,966:INFO:Checking exceptions
2024-07-19 01:03:54,966:INFO:Importing libraries
2024-07-19 01:03:54,966:INFO:Copying training dataset
2024-07-19 01:03:54,981:INFO:Defining folds
2024-07-19 01:03:54,981:INFO:Declaring metric variables
2024-07-19 01:03:54,984:INFO:Importing untrained model
2024-07-19 01:03:54,986:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:03:54,991:INFO:Starting cross validation
2024-07-19 01:03:54,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:55,181:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,196:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,202:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,222:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,232:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,237:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,274:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,284:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,307:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:03:55,328:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:55,348:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:55,367:INFO:Calculating mean and std
2024-07-19 01:03:55,369:INFO:Creating metrics dataframe
2024-07-19 01:03:55,371:INFO:Uploading results into container
2024-07-19 01:03:55,372:INFO:Uploading model into container now
2024-07-19 01:03:55,372:INFO:_master_model_container: 9
2024-07-19 01:03:55,372:INFO:_display_container: 2
2024-07-19 01:03:55,372:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-19 01:03:55,373:INFO:create_model() successfully completed......................................
2024-07-19 01:03:55,549:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:55,550:INFO:Creating metrics dataframe
2024-07-19 01:03:55,558:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:03:55,558:INFO:Total runtime is 0.2900818467140198 minutes
2024-07-19 01:03:55,561:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:55,562:INFO:Initializing create_model()
2024-07-19 01:03:55,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:55,562:INFO:Checking exceptions
2024-07-19 01:03:55,562:INFO:Importing libraries
2024-07-19 01:03:55,562:INFO:Copying training dataset
2024-07-19 01:03:55,578:INFO:Defining folds
2024-07-19 01:03:55,579:INFO:Declaring metric variables
2024-07-19 01:03:55,583:INFO:Importing untrained model
2024-07-19 01:03:55,607:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:03:55,619:INFO:Starting cross validation
2024-07-19 01:03:55,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:57,535:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,599:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,660:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,666:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,679:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,692:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,695:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,708:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,713:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:57,725:INFO:Calculating mean and std
2024-07-19 01:03:57,726:INFO:Creating metrics dataframe
2024-07-19 01:03:57,728:INFO:Uploading results into container
2024-07-19 01:03:57,728:INFO:Uploading model into container now
2024-07-19 01:03:57,729:INFO:_master_model_container: 10
2024-07-19 01:03:57,729:INFO:_display_container: 2
2024-07-19 01:03:57,729:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:03:57,729:INFO:create_model() successfully completed......................................
2024-07-19 01:03:57,857:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:57,857:INFO:Creating metrics dataframe
2024-07-19 01:03:57,864:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:03:57,864:INFO:Total runtime is 0.32852238019307456 minutes
2024-07-19 01:03:57,867:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:57,867:INFO:Initializing create_model()
2024-07-19 01:03:57,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:57,867:INFO:Checking exceptions
2024-07-19 01:03:57,867:INFO:Importing libraries
2024-07-19 01:03:57,868:INFO:Copying training dataset
2024-07-19 01:03:57,881:INFO:Defining folds
2024-07-19 01:03:57,882:INFO:Declaring metric variables
2024-07-19 01:03:57,885:INFO:Importing untrained model
2024-07-19 01:03:57,887:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:03:57,897:INFO:Starting cross validation
2024-07-19 01:03:57,898:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:58,170:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,199:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,206:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,226:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,251:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,256:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,277:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,282:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,285:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:58,301:INFO:Calculating mean and std
2024-07-19 01:03:58,302:INFO:Creating metrics dataframe
2024-07-19 01:03:58,304:INFO:Uploading results into container
2024-07-19 01:03:58,304:INFO:Uploading model into container now
2024-07-19 01:03:58,305:INFO:_master_model_container: 11
2024-07-19 01:03:58,305:INFO:_display_container: 2
2024-07-19 01:03:58,306:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:03:58,306:INFO:create_model() successfully completed......................................
2024-07-19 01:03:58,435:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:58,435:INFO:Creating metrics dataframe
2024-07-19 01:03:58,442:INFO:Initializing Extra Trees Classifier
2024-07-19 01:03:58,442:INFO:Total runtime is 0.33815622727076217 minutes
2024-07-19 01:03:58,444:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:58,444:INFO:Initializing create_model()
2024-07-19 01:03:58,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:58,444:INFO:Checking exceptions
2024-07-19 01:03:58,444:INFO:Importing libraries
2024-07-19 01:03:58,444:INFO:Copying training dataset
2024-07-19 01:03:58,459:INFO:Defining folds
2024-07-19 01:03:58,459:INFO:Declaring metric variables
2024-07-19 01:03:58,462:INFO:Importing untrained model
2024-07-19 01:03:58,466:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:03:58,470:INFO:Starting cross validation
2024-07-19 01:03:58,471:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:59,183:INFO:Calculating mean and std
2024-07-19 01:03:59,185:INFO:Creating metrics dataframe
2024-07-19 01:03:59,186:INFO:Uploading results into container
2024-07-19 01:03:59,187:INFO:Uploading model into container now
2024-07-19 01:03:59,187:INFO:_master_model_container: 12
2024-07-19 01:03:59,187:INFO:_display_container: 2
2024-07-19 01:03:59,188:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-19 01:03:59,188:INFO:create_model() successfully completed......................................
2024-07-19 01:03:59,315:INFO:SubProcess create_model() end ==================================
2024-07-19 01:03:59,315:INFO:Creating metrics dataframe
2024-07-19 01:03:59,322:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:03:59,322:INFO:Total runtime is 0.3528240998586019 minutes
2024-07-19 01:03:59,325:INFO:SubProcess create_model() called ==================================
2024-07-19 01:03:59,325:INFO:Initializing create_model()
2024-07-19 01:03:59,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:03:59,325:INFO:Checking exceptions
2024-07-19 01:03:59,325:INFO:Importing libraries
2024-07-19 01:03:59,325:INFO:Copying training dataset
2024-07-19 01:03:59,339:INFO:Defining folds
2024-07-19 01:03:59,340:INFO:Declaring metric variables
2024-07-19 01:03:59,343:INFO:Importing untrained model
2024-07-19 01:03:59,346:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:03:59,351:INFO:Starting cross validation
2024-07-19 01:03:59,352:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:03:59,769:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,788:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,791:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,803:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,816:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,851:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,853:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,857:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,865:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:03:59,881:INFO:Calculating mean and std
2024-07-19 01:03:59,882:INFO:Creating metrics dataframe
2024-07-19 01:03:59,885:INFO:Uploading results into container
2024-07-19 01:03:59,885:INFO:Uploading model into container now
2024-07-19 01:03:59,886:INFO:_master_model_container: 13
2024-07-19 01:03:59,886:INFO:_display_container: 2
2024-07-19 01:03:59,886:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:03:59,886:INFO:create_model() successfully completed......................................
2024-07-19 01:04:00,016:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:00,017:INFO:Creating metrics dataframe
2024-07-19 01:04:00,024:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:04:00,024:INFO:Total runtime is 0.3645145932833354 minutes
2024-07-19 01:04:00,027:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:00,027:INFO:Initializing create_model()
2024-07-19 01:04:00,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:00,027:INFO:Checking exceptions
2024-07-19 01:04:00,027:INFO:Importing libraries
2024-07-19 01:04:00,027:INFO:Copying training dataset
2024-07-19 01:04:00,042:INFO:Defining folds
2024-07-19 01:04:00,042:INFO:Declaring metric variables
2024-07-19 01:04:00,046:INFO:Importing untrained model
2024-07-19 01:04:00,048:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:04:00,052:INFO:Starting cross validation
2024-07-19 01:04:00,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:01,048:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,065:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,067:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,143:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,145:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,145:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,158:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,209:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,217:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:01,233:INFO:Calculating mean and std
2024-07-19 01:04:01,235:INFO:Creating metrics dataframe
2024-07-19 01:04:01,238:INFO:Uploading results into container
2024-07-19 01:04:01,238:INFO:Uploading model into container now
2024-07-19 01:04:01,239:INFO:_master_model_container: 14
2024-07-19 01:04:01,239:INFO:_display_container: 2
2024-07-19 01:04:01,240:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:04:01,240:INFO:create_model() successfully completed......................................
2024-07-19 01:04:01,393:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:01,394:INFO:Creating metrics dataframe
2024-07-19 01:04:01,401:INFO:Initializing CatBoost Classifier
2024-07-19 01:04:01,401:INFO:Total runtime is 0.3874712427457174 minutes
2024-07-19 01:04:01,404:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:01,404:INFO:Initializing create_model()
2024-07-19 01:04:01,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:01,405:INFO:Checking exceptions
2024-07-19 01:04:01,405:INFO:Importing libraries
2024-07-19 01:04:01,405:INFO:Copying training dataset
2024-07-19 01:04:01,419:INFO:Defining folds
2024-07-19 01:04:01,419:INFO:Declaring metric variables
2024-07-19 01:04:01,423:INFO:Importing untrained model
2024-07-19 01:04:01,426:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:04:01,431:INFO:Starting cross validation
2024-07-19 01:04:01,432:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:28,310:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:28,698:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:28,957:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,002:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,321:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,323:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,373:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,380:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,401:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,406:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,418:INFO:Calculating mean and std
2024-07-19 01:04:29,420:INFO:Creating metrics dataframe
2024-07-19 01:04:29,422:INFO:Uploading results into container
2024-07-19 01:04:29,423:INFO:Uploading model into container now
2024-07-19 01:04:29,425:INFO:_master_model_container: 15
2024-07-19 01:04:29,425:INFO:_display_container: 2
2024-07-19 01:04:29,425:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BAB9DD50>
2024-07-19 01:04:29,425:INFO:create_model() successfully completed......................................
2024-07-19 01:04:29,555:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:29,555:INFO:Creating metrics dataframe
2024-07-19 01:04:29,563:INFO:Initializing Dummy Classifier
2024-07-19 01:04:29,563:INFO:Total runtime is 0.8568345506985983 minutes
2024-07-19 01:04:29,565:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:29,566:INFO:Initializing create_model()
2024-07-19 01:04:29,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4C7F4C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:29,566:INFO:Checking exceptions
2024-07-19 01:04:29,566:INFO:Importing libraries
2024-07-19 01:04:29,566:INFO:Copying training dataset
2024-07-19 01:04:29,580:INFO:Defining folds
2024-07-19 01:04:29,580:INFO:Declaring metric variables
2024-07-19 01:04:29,584:INFO:Importing untrained model
2024-07-19 01:04:29,586:INFO:Dummy Classifier Imported successfully
2024-07-19 01:04:29,592:INFO:Starting cross validation
2024-07-19 01:04:29,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:29,851:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,863:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,877:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,894:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,895:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,897:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,912:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,921:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,931:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,932:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:29,945:INFO:Calculating mean and std
2024-07-19 01:04:29,947:INFO:Creating metrics dataframe
2024-07-19 01:04:29,948:INFO:Uploading results into container
2024-07-19 01:04:29,949:INFO:Uploading model into container now
2024-07-19 01:04:29,949:INFO:_master_model_container: 16
2024-07-19 01:04:29,949:INFO:_display_container: 2
2024-07-19 01:04:29,950:INFO:DummyClassifier(constant=None, random_state=85, strategy='prior')
2024-07-19 01:04:29,950:INFO:create_model() successfully completed......................................
2024-07-19 01:04:30,077:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:30,077:INFO:Creating metrics dataframe
2024-07-19 01:04:30,086:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-19 01:04:30,093:INFO:Initializing create_model()
2024-07-19 01:04:30,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FEEF0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:30,093:INFO:Checking exceptions
2024-07-19 01:04:30,095:INFO:Importing libraries
2024-07-19 01:04:30,095:INFO:Copying training dataset
2024-07-19 01:04:30,109:INFO:Defining folds
2024-07-19 01:04:30,109:INFO:Declaring metric variables
2024-07-19 01:04:30,110:INFO:Importing untrained model
2024-07-19 01:04:30,110:INFO:Declaring custom model
2024-07-19 01:04:30,110:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:04:30,111:INFO:Cross validation set to False
2024-07-19 01:04:30,111:INFO:Fitting Model
2024-07-19 01:04:30,336:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:04:30,336:INFO:create_model() successfully completed......................................
2024-07-19 01:04:30,489:INFO:_master_model_container: 16
2024-07-19 01:04:30,489:INFO:_display_container: 2
2024-07-19 01:04:30,489:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:04:30,490:INFO:compare_models() successfully completed......................................
2024-07-19 01:04:30,529:INFO:PyCaret ClassificationExperiment
2024-07-19 01:04:30,529:INFO:Logging name: clf-default-name
2024-07-19 01:04:30,529:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:04:30,529:INFO:version 3.3.2
2024-07-19 01:04:30,529:INFO:Initializing setup()
2024-07-19 01:04:30,529:INFO:self.USI: f6d6
2024-07-19 01:04:30,530:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:04:30,530:INFO:Checking environment
2024-07-19 01:04:30,530:INFO:python_version: 3.10.11
2024-07-19 01:04:30,530:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:04:30,530:INFO:machine: AMD64
2024-07-19 01:04:30,530:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:04:30,547:INFO:Memory: svmem(total=16516247552, available=1622986752, percent=90.2, used=14893260800, free=1622986752)
2024-07-19 01:04:30,547:INFO:Physical Core: 8
2024-07-19 01:04:30,547:INFO:Logical Core: 16
2024-07-19 01:04:30,547:INFO:Checking libraries
2024-07-19 01:04:30,547:INFO:System:
2024-07-19 01:04:30,547:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:04:30,547:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:04:30,547:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:04:30,547:INFO:PyCaret required dependencies:
2024-07-19 01:04:30,547:INFO:                 pip: 24.1.2
2024-07-19 01:04:30,547:INFO:          setuptools: 65.5.0
2024-07-19 01:04:30,547:INFO:             pycaret: 3.3.2
2024-07-19 01:04:30,547:INFO:             IPython: 8.21.0
2024-07-19 01:04:30,547:INFO:          ipywidgets: 8.1.3
2024-07-19 01:04:30,547:INFO:                tqdm: 4.66.4
2024-07-19 01:04:30,547:INFO:               numpy: 1.26.4
2024-07-19 01:04:30,547:INFO:              pandas: 2.1.4
2024-07-19 01:04:30,547:INFO:              jinja2: 3.1.2
2024-07-19 01:04:30,547:INFO:               scipy: 1.11.4
2024-07-19 01:04:30,547:INFO:              joblib: 1.3.2
2024-07-19 01:04:30,547:INFO:             sklearn: 1.4.2
2024-07-19 01:04:30,547:INFO:                pyod: 2.0.1
2024-07-19 01:04:30,547:INFO:            imblearn: 0.12.2
2024-07-19 01:04:30,548:INFO:   category_encoders: 2.6.3
2024-07-19 01:04:30,548:INFO:            lightgbm: 4.3.0
2024-07-19 01:04:30,548:INFO:               numba: 0.60.0
2024-07-19 01:04:30,548:INFO:            requests: 2.32.3
2024-07-19 01:04:30,548:INFO:          matplotlib: 3.8.3
2024-07-19 01:04:30,548:INFO:          scikitplot: 0.3.7
2024-07-19 01:04:30,548:INFO:         yellowbrick: 1.5
2024-07-19 01:04:30,548:INFO:              plotly: 5.20.0
2024-07-19 01:04:30,548:INFO:    plotly-resampler: Not installed
2024-07-19 01:04:30,548:INFO:             kaleido: 0.2.1
2024-07-19 01:04:30,548:INFO:           schemdraw: 0.15
2024-07-19 01:04:30,548:INFO:         statsmodels: 0.14.2
2024-07-19 01:04:30,548:INFO:              sktime: 0.26.0
2024-07-19 01:04:30,548:INFO:               tbats: 1.1.3
2024-07-19 01:04:30,548:INFO:            pmdarima: 2.0.4
2024-07-19 01:04:30,548:INFO:              psutil: 5.9.8
2024-07-19 01:04:30,548:INFO:          markupsafe: 2.1.3
2024-07-19 01:04:30,548:INFO:             pickle5: Not installed
2024-07-19 01:04:30,548:INFO:         cloudpickle: 3.0.0
2024-07-19 01:04:30,548:INFO:         deprecation: 2.1.0
2024-07-19 01:04:30,548:INFO:              xxhash: 3.4.1
2024-07-19 01:04:30,548:INFO:           wurlitzer: Not installed
2024-07-19 01:04:30,548:INFO:PyCaret optional dependencies:
2024-07-19 01:04:30,548:INFO:                shap: 0.44.1
2024-07-19 01:04:30,549:INFO:           interpret: 0.6.2
2024-07-19 01:04:30,549:INFO:                umap: 0.5.6
2024-07-19 01:04:30,549:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:04:30,549:INFO:  explainerdashboard: Not installed
2024-07-19 01:04:30,549:INFO:             autoviz: Not installed
2024-07-19 01:04:30,549:INFO:           fairlearn: 0.7.0
2024-07-19 01:04:30,549:INFO:          deepchecks: Not installed
2024-07-19 01:04:30,549:INFO:             xgboost: 2.0.3
2024-07-19 01:04:30,549:INFO:            catboost: 1.2.5
2024-07-19 01:04:30,549:INFO:              kmodes: 0.12.2
2024-07-19 01:04:30,549:INFO:             mlxtend: 0.23.1
2024-07-19 01:04:30,549:INFO:       statsforecast: Not installed
2024-07-19 01:04:30,549:INFO:        tune_sklearn: Not installed
2024-07-19 01:04:30,549:INFO:                 ray: Not installed
2024-07-19 01:04:30,549:INFO:            hyperopt: 0.2.7
2024-07-19 01:04:30,549:INFO:              optuna: 3.6.1
2024-07-19 01:04:30,549:INFO:               skopt: 0.10.2
2024-07-19 01:04:30,549:INFO:              mlflow: Not installed
2024-07-19 01:04:30,549:INFO:              gradio: Not installed
2024-07-19 01:04:30,549:INFO:             fastapi: Not installed
2024-07-19 01:04:30,549:INFO:             uvicorn: 0.30.1
2024-07-19 01:04:30,549:INFO:              m2cgen: 0.10.0
2024-07-19 01:04:30,549:INFO:           evidently: Not installed
2024-07-19 01:04:30,549:INFO:               fugue: Not installed
2024-07-19 01:04:30,549:INFO:           streamlit: Not installed
2024-07-19 01:04:30,549:INFO:             prophet: Not installed
2024-07-19 01:04:30,549:INFO:None
2024-07-19 01:04:30,549:INFO:Set up data.
2024-07-19 01:04:30,566:INFO:Set up folding strategy.
2024-07-19 01:04:30,566:INFO:Set up train/test split.
2024-07-19 01:04:30,578:INFO:Set up index.
2024-07-19 01:04:30,579:INFO:Assigning column types.
2024-07-19 01:04:30,584:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:04:30,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:04:30,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:04:30,644:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:04:30,646:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:04:30,682:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:04:30,682:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:04:30,704:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:04:30,706:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:04:30,707:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:04:30,739:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:04:30,759:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:04:30,761:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:04:30,795:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:04:30,815:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:04:30,817:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:04:30,818:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:04:30,871:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:04:30,873:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:04:30,926:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:04:30,928:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:04:30,929:INFO:Preparing preprocessing pipeline...
2024-07-19 01:04:30,930:INFO:Set up label encoding.
2024-07-19 01:04:30,930:INFO:Set up simple imputation.
2024-07-19 01:04:30,932:INFO:Set up encoding of categorical features.
2024-07-19 01:04:30,934:INFO:Set up column name cleaning.
2024-07-19 01:04:31,012:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:04:31,016:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Number of Cre...
                 TransformerWrapper(exclude=None, include=['Address'],
                                    transformer=TargetEncoder(cols=['Address'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:04:31,016:INFO:Creating final display dataframe.
2024-07-19 01:04:31,243:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3                Target mapping      NO: 0, SI: 1
4           Original data shape        (9816, 17)
5        Transformed data shape        (9816, 17)
6   Transformed train set shape        (6871, 17)
7    Transformed test set shape        (2945, 17)
8              Numeric features                15
9          Categorical features                 1
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              f6d6
2024-07-19 01:04:31,302:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:04:31,305:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:04:31,359:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:04:31,361:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:04:31,362:INFO:setup() successfully completed in 0.84s...............
2024-07-19 01:04:31,386:INFO:Initializing compare_models()
2024-07-19 01:04:31,386:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:04:31,386:INFO:Checking exceptions
2024-07-19 01:04:31,392:INFO:Preparing display monitor
2024-07-19 01:04:31,436:INFO:Initializing Logistic Regression
2024-07-19 01:04:31,436:INFO:Total runtime is 0.0 minutes
2024-07-19 01:04:31,441:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:31,441:INFO:Initializing create_model()
2024-07-19 01:04:31,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:31,442:INFO:Checking exceptions
2024-07-19 01:04:31,442:INFO:Importing libraries
2024-07-19 01:04:31,442:INFO:Copying training dataset
2024-07-19 01:04:31,450:INFO:Defining folds
2024-07-19 01:04:31,450:INFO:Declaring metric variables
2024-07-19 01:04:31,456:INFO:Importing untrained model
2024-07-19 01:04:31,460:INFO:Logistic Regression Imported successfully
2024-07-19 01:04:31,467:INFO:Starting cross validation
2024-07-19 01:04:31,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:32,130:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,148:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,160:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,165:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,166:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,169:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,169:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:32,172:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,177:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,181:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,183:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,190:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,190:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,193:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,194:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,199:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,204:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:32,206:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,210:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,211:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,220:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,223:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:32,224:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,225:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,226:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,229:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,229:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,231:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,235:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,239:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,248:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,258:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:04:32,267:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,272:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,273:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,278:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,278:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,283:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,283:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,288:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,293:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,304:INFO:Calculating mean and std
2024-07-19 01:04:32,305:INFO:Creating metrics dataframe
2024-07-19 01:04:32,306:INFO:Uploading results into container
2024-07-19 01:04:32,307:INFO:Uploading model into container now
2024-07-19 01:04:32,307:INFO:_master_model_container: 1
2024-07-19 01:04:32,307:INFO:_display_container: 2
2024-07-19 01:04:32,307:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:04:32,308:INFO:create_model() successfully completed......................................
2024-07-19 01:04:32,444:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:32,444:INFO:Creating metrics dataframe
2024-07-19 01:04:32,449:INFO:Initializing K Neighbors Classifier
2024-07-19 01:04:32,449:INFO:Total runtime is 0.016887521743774413 minutes
2024-07-19 01:04:32,452:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:32,452:INFO:Initializing create_model()
2024-07-19 01:04:32,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:32,452:INFO:Checking exceptions
2024-07-19 01:04:32,452:INFO:Importing libraries
2024-07-19 01:04:32,452:INFO:Copying training dataset
2024-07-19 01:04:32,458:INFO:Defining folds
2024-07-19 01:04:32,459:INFO:Declaring metric variables
2024-07-19 01:04:32,461:INFO:Importing untrained model
2024-07-19 01:04:32,465:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:04:32,469:INFO:Starting cross validation
2024-07-19 01:04:32,470:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:32,676:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,682:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,683:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,688:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,689:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,694:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,697:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,699:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,705:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,705:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,710:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,710:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,710:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,717:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,724:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,731:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,733:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,736:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,737:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,741:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,743:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,769:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,774:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,779:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,785:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,788:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,789:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,792:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,793:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,797:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:32,818:INFO:Calculating mean and std
2024-07-19 01:04:32,819:INFO:Creating metrics dataframe
2024-07-19 01:04:32,821:INFO:Uploading results into container
2024-07-19 01:04:32,821:INFO:Uploading model into container now
2024-07-19 01:04:32,822:INFO:_master_model_container: 2
2024-07-19 01:04:32,822:INFO:_display_container: 2
2024-07-19 01:04:32,822:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:04:32,822:INFO:create_model() successfully completed......................................
2024-07-19 01:04:32,959:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:32,959:INFO:Creating metrics dataframe
2024-07-19 01:04:32,964:INFO:Initializing Naive Bayes
2024-07-19 01:04:32,965:INFO:Total runtime is 0.025484601656595864 minutes
2024-07-19 01:04:32,967:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:32,967:INFO:Initializing create_model()
2024-07-19 01:04:32,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:32,967:INFO:Checking exceptions
2024-07-19 01:04:32,967:INFO:Importing libraries
2024-07-19 01:04:32,967:INFO:Copying training dataset
2024-07-19 01:04:32,974:INFO:Defining folds
2024-07-19 01:04:32,974:INFO:Declaring metric variables
2024-07-19 01:04:32,977:INFO:Importing untrained model
2024-07-19 01:04:32,981:INFO:Naive Bayes Imported successfully
2024-07-19 01:04:32,985:INFO:Starting cross validation
2024-07-19 01:04:32,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:33,102:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,110:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,120:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,141:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,142:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,147:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,149:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,150:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,152:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,152:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,154:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,159:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,161:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,161:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,163:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,164:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,169:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,169:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,169:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,170:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,175:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,175:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,175:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,179:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,180:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,188:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,189:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,193:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,195:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,197:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,221:INFO:Calculating mean and std
2024-07-19 01:04:33,223:INFO:Creating metrics dataframe
2024-07-19 01:04:33,225:INFO:Uploading results into container
2024-07-19 01:04:33,225:INFO:Uploading model into container now
2024-07-19 01:04:33,225:INFO:_master_model_container: 3
2024-07-19 01:04:33,225:INFO:_display_container: 2
2024-07-19 01:04:33,226:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:04:33,226:INFO:create_model() successfully completed......................................
2024-07-19 01:04:33,351:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:33,352:INFO:Creating metrics dataframe
2024-07-19 01:04:33,357:INFO:Initializing Decision Tree Classifier
2024-07-19 01:04:33,357:INFO:Total runtime is 0.03201231559117635 minutes
2024-07-19 01:04:33,359:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:33,359:INFO:Initializing create_model()
2024-07-19 01:04:33,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:33,360:INFO:Checking exceptions
2024-07-19 01:04:33,360:INFO:Importing libraries
2024-07-19 01:04:33,360:INFO:Copying training dataset
2024-07-19 01:04:33,367:INFO:Defining folds
2024-07-19 01:04:33,367:INFO:Declaring metric variables
2024-07-19 01:04:33,370:INFO:Importing untrained model
2024-07-19 01:04:33,373:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:04:33,378:INFO:Starting cross validation
2024-07-19 01:04:33,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:33,509:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,513:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,515:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,517:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,518:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,520:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,521:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,521:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,522:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,524:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,526:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,528:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,529:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,531:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,533:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,533:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,534:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,542:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,544:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,547:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,548:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,548:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,548:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,549:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,550:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,551:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,551:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,552:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,553:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,553:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,556:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,557:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,562:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,562:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,564:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,564:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:33,566:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,566:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,579:INFO:Calculating mean and std
2024-07-19 01:04:33,581:INFO:Creating metrics dataframe
2024-07-19 01:04:33,582:INFO:Uploading results into container
2024-07-19 01:04:33,582:INFO:Uploading model into container now
2024-07-19 01:04:33,583:INFO:_master_model_container: 4
2024-07-19 01:04:33,583:INFO:_display_container: 2
2024-07-19 01:04:33,583:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-19 01:04:33,583:INFO:create_model() successfully completed......................................
2024-07-19 01:04:33,724:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:33,724:INFO:Creating metrics dataframe
2024-07-19 01:04:33,731:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:04:33,731:INFO:Total runtime is 0.03824784358342489 minutes
2024-07-19 01:04:33,732:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:33,734:INFO:Initializing create_model()
2024-07-19 01:04:33,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:33,734:INFO:Checking exceptions
2024-07-19 01:04:33,734:INFO:Importing libraries
2024-07-19 01:04:33,734:INFO:Copying training dataset
2024-07-19 01:04:33,741:INFO:Defining folds
2024-07-19 01:04:33,741:INFO:Declaring metric variables
2024-07-19 01:04:33,744:INFO:Importing untrained model
2024-07-19 01:04:33,748:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:04:33,753:INFO:Starting cross validation
2024-07-19 01:04:33,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:33,937:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,942:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,947:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,949:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,955:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,961:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,982:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,984:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,984:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,988:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,989:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,992:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,992:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,993:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,994:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,994:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,997:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:33,999:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,001:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,007:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,007:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,014:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,014:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,018:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,019:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,028:INFO:Calculating mean and std
2024-07-19 01:04:34,029:INFO:Creating metrics dataframe
2024-07-19 01:04:34,031:INFO:Uploading results into container
2024-07-19 01:04:34,031:INFO:Uploading model into container now
2024-07-19 01:04:34,032:INFO:_master_model_container: 5
2024-07-19 01:04:34,032:INFO:_display_container: 2
2024-07-19 01:04:34,032:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:04:34,032:INFO:create_model() successfully completed......................................
2024-07-19 01:04:34,162:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:34,163:INFO:Creating metrics dataframe
2024-07-19 01:04:34,170:INFO:Initializing Ridge Classifier
2024-07-19 01:04:34,170:INFO:Total runtime is 0.04555999835332235 minutes
2024-07-19 01:04:34,172:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:34,172:INFO:Initializing create_model()
2024-07-19 01:04:34,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:34,172:INFO:Checking exceptions
2024-07-19 01:04:34,172:INFO:Importing libraries
2024-07-19 01:04:34,172:INFO:Copying training dataset
2024-07-19 01:04:34,180:INFO:Defining folds
2024-07-19 01:04:34,180:INFO:Declaring metric variables
2024-07-19 01:04:34,183:INFO:Importing untrained model
2024-07-19 01:04:34,186:INFO:Ridge Classifier Imported successfully
2024-07-19 01:04:34,192:INFO:Starting cross validation
2024-07-19 01:04:34,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:34,334:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,337:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,339:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,340:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,345:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,352:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,353:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,353:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,354:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,354:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,357:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,357:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,357:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,357:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,358:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,360:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,360:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,360:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,362:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,369:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,373:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,374:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,375:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,377:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,378:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,379:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,380:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,382:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,382:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,384:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,387:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,392:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,395:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:34,396:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:34,404:INFO:Calculating mean and std
2024-07-19 01:04:34,406:INFO:Creating metrics dataframe
2024-07-19 01:04:34,407:INFO:Uploading results into container
2024-07-19 01:04:34,407:INFO:Uploading model into container now
2024-07-19 01:04:34,408:INFO:_master_model_container: 6
2024-07-19 01:04:34,408:INFO:_display_container: 2
2024-07-19 01:04:34,408:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-19 01:04:34,408:INFO:create_model() successfully completed......................................
2024-07-19 01:04:34,534:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:34,535:INFO:Creating metrics dataframe
2024-07-19 01:04:34,540:INFO:Initializing Random Forest Classifier
2024-07-19 01:04:34,540:INFO:Total runtime is 0.05173792441685995 minutes
2024-07-19 01:04:34,543:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:34,543:INFO:Initializing create_model()
2024-07-19 01:04:34,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:34,543:INFO:Checking exceptions
2024-07-19 01:04:34,543:INFO:Importing libraries
2024-07-19 01:04:34,543:INFO:Copying training dataset
2024-07-19 01:04:34,549:INFO:Defining folds
2024-07-19 01:04:34,549:INFO:Declaring metric variables
2024-07-19 01:04:34,552:INFO:Importing untrained model
2024-07-19 01:04:34,556:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:04:34,561:INFO:Starting cross validation
2024-07-19 01:04:34,562:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:35,292:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,302:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,307:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,313:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,321:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,330:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,335:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,336:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,336:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,336:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,338:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,342:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,343:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,344:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,345:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,346:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,347:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,348:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,349:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,350:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,380:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,380:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,380:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,385:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,385:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,385:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,387:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,387:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,388:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,390:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,390:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,391:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,395:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,395:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,400:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,400:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,403:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,403:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,405:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,406:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,419:INFO:Calculating mean and std
2024-07-19 01:04:35,421:INFO:Creating metrics dataframe
2024-07-19 01:04:35,423:INFO:Uploading results into container
2024-07-19 01:04:35,423:INFO:Uploading model into container now
2024-07-19 01:04:35,424:INFO:_master_model_container: 7
2024-07-19 01:04:35,424:INFO:_display_container: 2
2024-07-19 01:04:35,424:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:04:35,424:INFO:create_model() successfully completed......................................
2024-07-19 01:04:35,552:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:35,552:INFO:Creating metrics dataframe
2024-07-19 01:04:35,559:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:04:35,559:INFO:Total runtime is 0.06871922810872397 minutes
2024-07-19 01:04:35,562:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:35,562:INFO:Initializing create_model()
2024-07-19 01:04:35,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:35,562:INFO:Checking exceptions
2024-07-19 01:04:35,562:INFO:Importing libraries
2024-07-19 01:04:35,562:INFO:Copying training dataset
2024-07-19 01:04:35,570:INFO:Defining folds
2024-07-19 01:04:35,570:INFO:Declaring metric variables
2024-07-19 01:04:35,574:INFO:Importing untrained model
2024-07-19 01:04:35,579:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:04:35,586:INFO:Starting cross validation
2024-07-19 01:04:35,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:35,736:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,738:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,757:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,760:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,761:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,778:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,778:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,792:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,794:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,795:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,798:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,801:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,802:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:04:35,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,809:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,809:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,810:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,810:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,810:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,813:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,815:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,818:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,820:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,820:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,821:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,821:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,825:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,825:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,827:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,829:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,829:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,830:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,831:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,833:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,834:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,835:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,836:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,836:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,838:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,841:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,841:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,842:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,845:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,847:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,848:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,850:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:35,852:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:35,869:INFO:Calculating mean and std
2024-07-19 01:04:35,871:INFO:Creating metrics dataframe
2024-07-19 01:04:35,873:INFO:Uploading results into container
2024-07-19 01:04:35,873:INFO:Uploading model into container now
2024-07-19 01:04:35,874:INFO:_master_model_container: 8
2024-07-19 01:04:35,874:INFO:_display_container: 2
2024-07-19 01:04:35,874:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:04:35,874:INFO:create_model() successfully completed......................................
2024-07-19 01:04:36,006:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:36,007:INFO:Creating metrics dataframe
2024-07-19 01:04:36,013:INFO:Initializing Ada Boost Classifier
2024-07-19 01:04:36,013:INFO:Total runtime is 0.07627923488616944 minutes
2024-07-19 01:04:36,015:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:36,016:INFO:Initializing create_model()
2024-07-19 01:04:36,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:36,016:INFO:Checking exceptions
2024-07-19 01:04:36,016:INFO:Importing libraries
2024-07-19 01:04:36,016:INFO:Copying training dataset
2024-07-19 01:04:36,023:INFO:Defining folds
2024-07-19 01:04:36,023:INFO:Declaring metric variables
2024-07-19 01:04:36,026:INFO:Importing untrained model
2024-07-19 01:04:36,028:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:04:36,033:INFO:Starting cross validation
2024-07-19 01:04:36,034:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:36,156:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,158:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,162:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,174:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,176:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,184:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,193:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,193:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,198:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:04:36,206:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,209:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,211:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,212:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,215:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,215:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,218:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,220:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,221:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,221:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,222:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,222:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,222:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,224:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,226:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,227:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,227:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,231:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,233:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,235:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,235:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,237:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,237:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,238:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,239:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,240:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,242:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,243:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,243:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,246:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,246:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:36,248:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,248:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:36,258:INFO:Calculating mean and std
2024-07-19 01:04:36,259:INFO:Creating metrics dataframe
2024-07-19 01:04:36,261:INFO:Uploading results into container
2024-07-19 01:04:36,262:INFO:Uploading model into container now
2024-07-19 01:04:36,262:INFO:_master_model_container: 9
2024-07-19 01:04:36,262:INFO:_display_container: 2
2024-07-19 01:04:36,263:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-19 01:04:36,263:INFO:create_model() successfully completed......................................
2024-07-19 01:04:36,390:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:36,390:INFO:Creating metrics dataframe
2024-07-19 01:04:36,396:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:04:36,396:INFO:Total runtime is 0.08266905943552653 minutes
2024-07-19 01:04:36,398:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:36,399:INFO:Initializing create_model()
2024-07-19 01:04:36,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:36,399:INFO:Checking exceptions
2024-07-19 01:04:36,399:INFO:Importing libraries
2024-07-19 01:04:36,399:INFO:Copying training dataset
2024-07-19 01:04:36,405:INFO:Defining folds
2024-07-19 01:04:36,405:INFO:Declaring metric variables
2024-07-19 01:04:36,408:INFO:Importing untrained model
2024-07-19 01:04:36,412:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:04:36,418:INFO:Starting cross validation
2024-07-19 01:04:36,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:37,475:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,482:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,487:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,491:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,491:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,497:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,500:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,503:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,516:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,521:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,527:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,527:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,529:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,532:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,532:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,533:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,534:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,536:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,537:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,539:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,540:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,542:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,545:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,545:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,547:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,549:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,554:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,560:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,563:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,563:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,565:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,568:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,570:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,572:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,585:INFO:Calculating mean and std
2024-07-19 01:04:37,587:INFO:Creating metrics dataframe
2024-07-19 01:04:37,589:INFO:Uploading results into container
2024-07-19 01:04:37,590:INFO:Uploading model into container now
2024-07-19 01:04:37,590:INFO:_master_model_container: 10
2024-07-19 01:04:37,590:INFO:_display_container: 2
2024-07-19 01:04:37,590:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:04:37,590:INFO:create_model() successfully completed......................................
2024-07-19 01:04:37,720:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:37,720:INFO:Creating metrics dataframe
2024-07-19 01:04:37,727:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:04:37,727:INFO:Total runtime is 0.10485106309254964 minutes
2024-07-19 01:04:37,729:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:37,730:INFO:Initializing create_model()
2024-07-19 01:04:37,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:37,730:INFO:Checking exceptions
2024-07-19 01:04:37,730:INFO:Importing libraries
2024-07-19 01:04:37,730:INFO:Copying training dataset
2024-07-19 01:04:37,737:INFO:Defining folds
2024-07-19 01:04:37,737:INFO:Declaring metric variables
2024-07-19 01:04:37,741:INFO:Importing untrained model
2024-07-19 01:04:37,744:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:04:37,773:INFO:Starting cross validation
2024-07-19 01:04:37,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:37,932:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,934:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,936:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,939:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,941:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,942:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,943:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,944:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,945:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,945:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,945:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,947:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,948:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,951:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,956:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,960:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,967:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,967:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,969:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,972:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,974:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,974:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,975:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,977:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,977:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,977:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,980:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,982:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,984:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,985:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:37,989:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,996:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:37,999:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,001:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,003:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,014:INFO:Calculating mean and std
2024-07-19 01:04:38,015:INFO:Creating metrics dataframe
2024-07-19 01:04:38,017:INFO:Uploading results into container
2024-07-19 01:04:38,017:INFO:Uploading model into container now
2024-07-19 01:04:38,018:INFO:_master_model_container: 11
2024-07-19 01:04:38,018:INFO:_display_container: 2
2024-07-19 01:04:38,018:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:04:38,018:INFO:create_model() successfully completed......................................
2024-07-19 01:04:38,145:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:38,145:INFO:Creating metrics dataframe
2024-07-19 01:04:38,152:INFO:Initializing Extra Trees Classifier
2024-07-19 01:04:38,152:INFO:Total runtime is 0.11193163394927978 minutes
2024-07-19 01:04:38,154:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:38,154:INFO:Initializing create_model()
2024-07-19 01:04:38,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:38,154:INFO:Checking exceptions
2024-07-19 01:04:38,154:INFO:Importing libraries
2024-07-19 01:04:38,155:INFO:Copying training dataset
2024-07-19 01:04:38,162:INFO:Defining folds
2024-07-19 01:04:38,162:INFO:Declaring metric variables
2024-07-19 01:04:38,165:INFO:Importing untrained model
2024-07-19 01:04:38,168:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:04:38,173:INFO:Starting cross validation
2024-07-19 01:04:38,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:38,602:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,610:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,615:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,616:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,616:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,617:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,617:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,618:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,621:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,623:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,625:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,626:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,626:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,627:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,629:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,629:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,630:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,631:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,632:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,633:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,641:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,644:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,646:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,647:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,651:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,653:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,656:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,660:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,665:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,668:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,669:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,692:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,696:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,699:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,700:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,708:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,712:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,714:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:38,715:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:38,733:INFO:Calculating mean and std
2024-07-19 01:04:38,735:INFO:Creating metrics dataframe
2024-07-19 01:04:38,736:INFO:Uploading results into container
2024-07-19 01:04:38,737:INFO:Uploading model into container now
2024-07-19 01:04:38,737:INFO:_master_model_container: 12
2024-07-19 01:04:38,737:INFO:_display_container: 2
2024-07-19 01:04:38,738:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-19 01:04:38,738:INFO:create_model() successfully completed......................................
2024-07-19 01:04:38,865:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:38,865:INFO:Creating metrics dataframe
2024-07-19 01:04:38,873:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:04:38,873:INFO:Total runtime is 0.12394283215204874 minutes
2024-07-19 01:04:38,876:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:38,876:INFO:Initializing create_model()
2024-07-19 01:04:38,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:38,876:INFO:Checking exceptions
2024-07-19 01:04:38,876:INFO:Importing libraries
2024-07-19 01:04:38,876:INFO:Copying training dataset
2024-07-19 01:04:38,882:INFO:Defining folds
2024-07-19 01:04:38,882:INFO:Declaring metric variables
2024-07-19 01:04:38,886:INFO:Importing untrained model
2024-07-19 01:04:38,889:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:04:38,894:INFO:Starting cross validation
2024-07-19 01:04:38,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:39,086:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,092:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,096:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,098:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,101:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,104:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,106:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,109:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,110:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,111:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,114:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,115:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,115:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,116:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,117:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,117:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,118:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,121:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,132:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,136:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,139:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,140:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,141:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,143:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,144:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,144:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,145:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,146:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,148:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,148:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,151:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,155:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,158:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,159:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,160:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,163:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,165:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,167:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,182:INFO:Calculating mean and std
2024-07-19 01:04:39,183:INFO:Creating metrics dataframe
2024-07-19 01:04:39,185:INFO:Uploading results into container
2024-07-19 01:04:39,185:INFO:Uploading model into container now
2024-07-19 01:04:39,186:INFO:_master_model_container: 13
2024-07-19 01:04:39,186:INFO:_display_container: 2
2024-07-19 01:04:39,187:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:04:39,187:INFO:create_model() successfully completed......................................
2024-07-19 01:04:39,314:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:39,315:INFO:Creating metrics dataframe
2024-07-19 01:04:39,321:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:04:39,321:INFO:Total runtime is 0.13142056067784627 minutes
2024-07-19 01:04:39,325:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:39,325:INFO:Initializing create_model()
2024-07-19 01:04:39,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:39,325:INFO:Checking exceptions
2024-07-19 01:04:39,325:INFO:Importing libraries
2024-07-19 01:04:39,325:INFO:Copying training dataset
2024-07-19 01:04:39,332:INFO:Defining folds
2024-07-19 01:04:39,332:INFO:Declaring metric variables
2024-07-19 01:04:39,336:INFO:Importing untrained model
2024-07-19 01:04:39,338:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:04:39,347:INFO:Starting cross validation
2024-07-19 01:04:39,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:39,757:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,767:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,772:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,776:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,780:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,789:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,794:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,797:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,811:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,813:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,816:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,818:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,819:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,822:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,824:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,825:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,828:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,830:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,833:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,869:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,879:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,884:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,887:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,888:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,894:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,896:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,900:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,902:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,904:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,907:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,907:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,911:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,916:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,920:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,925:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,954:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,962:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,966:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:39,970:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:39,985:INFO:Calculating mean and std
2024-07-19 01:04:39,987:INFO:Creating metrics dataframe
2024-07-19 01:04:39,990:INFO:Uploading results into container
2024-07-19 01:04:39,991:INFO:Uploading model into container now
2024-07-19 01:04:39,991:INFO:_master_model_container: 14
2024-07-19 01:04:39,991:INFO:_display_container: 2
2024-07-19 01:04:39,992:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:04:39,992:INFO:create_model() successfully completed......................................
2024-07-19 01:04:40,140:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:40,140:INFO:Creating metrics dataframe
2024-07-19 01:04:40,147:INFO:Initializing CatBoost Classifier
2024-07-19 01:04:40,147:INFO:Total runtime is 0.14518253803253173 minutes
2024-07-19 01:04:40,150:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:40,150:INFO:Initializing create_model()
2024-07-19 01:04:40,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:40,150:INFO:Checking exceptions
2024-07-19 01:04:40,150:INFO:Importing libraries
2024-07-19 01:04:40,151:INFO:Copying training dataset
2024-07-19 01:04:40,157:INFO:Defining folds
2024-07-19 01:04:40,157:INFO:Declaring metric variables
2024-07-19 01:04:40,160:INFO:Importing untrained model
2024-07-19 01:04:40,163:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:04:40,168:INFO:Starting cross validation
2024-07-19 01:04:40,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:52,750:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:52,760:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:52,766:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:52,772:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:52,964:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:52,975:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:52,980:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:52,989:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,027:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,039:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,044:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:53,050:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,243:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,249:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:53,256:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,345:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,357:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:53,362:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:53,368:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,349:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,357:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,357:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,357:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,437:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,437:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,453:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,457:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,511:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,522:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,527:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,532:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,595:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,602:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,605:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,608:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,632:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,636:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,638:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,640:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,649:INFO:Calculating mean and std
2024-07-19 01:04:54,650:INFO:Creating metrics dataframe
2024-07-19 01:04:54,652:INFO:Uploading results into container
2024-07-19 01:04:54,652:INFO:Uploading model into container now
2024-07-19 01:04:54,653:INFO:_master_model_container: 15
2024-07-19 01:04:54,653:INFO:_display_container: 2
2024-07-19 01:04:54,653:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BB88EEF0>
2024-07-19 01:04:54,653:INFO:create_model() successfully completed......................................
2024-07-19 01:04:54,784:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:54,784:INFO:Creating metrics dataframe
2024-07-19 01:04:54,792:INFO:Initializing Dummy Classifier
2024-07-19 01:04:54,792:INFO:Total runtime is 0.38925965229670206 minutes
2024-07-19 01:04:54,794:INFO:SubProcess create_model() called ==================================
2024-07-19 01:04:54,794:INFO:Initializing create_model()
2024-07-19 01:04:54,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB6D85E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:54,794:INFO:Checking exceptions
2024-07-19 01:04:54,794:INFO:Importing libraries
2024-07-19 01:04:54,794:INFO:Copying training dataset
2024-07-19 01:04:54,802:INFO:Defining folds
2024-07-19 01:04:54,802:INFO:Declaring metric variables
2024-07-19 01:04:54,805:INFO:Importing untrained model
2024-07-19 01:04:54,809:INFO:Dummy Classifier Imported successfully
2024-07-19 01:04:54,814:INFO:Starting cross validation
2024-07-19 01:04:54,815:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:04:54,931:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,936:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,940:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,942:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,944:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,947:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,948:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,951:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,952:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,954:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,955:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,959:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,966:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,972:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,975:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,978:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,982:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,983:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,984:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,988:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,989:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,993:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,993:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,994:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,996:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:54,996:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,998:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:54,999:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:55,001:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:55,003:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:55,004:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:55,006:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:55,007:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:04:55,009:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:04:55,020:INFO:Calculating mean and std
2024-07-19 01:04:55,021:INFO:Creating metrics dataframe
2024-07-19 01:04:55,023:INFO:Uploading results into container
2024-07-19 01:04:55,024:INFO:Uploading model into container now
2024-07-19 01:04:55,024:INFO:_master_model_container: 16
2024-07-19 01:04:55,024:INFO:_display_container: 2
2024-07-19 01:04:55,024:INFO:DummyClassifier(constant=None, random_state=85, strategy='prior')
2024-07-19 01:04:55,024:INFO:create_model() successfully completed......................................
2024-07-19 01:04:55,152:INFO:SubProcess create_model() end ==================================
2024-07-19 01:04:55,152:INFO:Creating metrics dataframe
2024-07-19 01:04:55,161:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-19 01:04:55,168:INFO:Initializing create_model()
2024-07-19 01:04:55,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB3FF460>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:04:55,168:INFO:Checking exceptions
2024-07-19 01:04:55,169:INFO:Importing libraries
2024-07-19 01:04:55,170:INFO:Copying training dataset
2024-07-19 01:04:55,176:INFO:Defining folds
2024-07-19 01:04:55,176:INFO:Declaring metric variables
2024-07-19 01:04:55,176:INFO:Importing untrained model
2024-07-19 01:04:55,176:INFO:Declaring custom model
2024-07-19 01:04:55,176:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:04:55,177:INFO:Cross validation set to False
2024-07-19 01:04:55,177:INFO:Fitting Model
2024-07-19 01:04:55,210:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:04:55,210:INFO:create_model() successfully completed......................................
2024-07-19 01:04:55,355:INFO:_master_model_container: 16
2024-07-19 01:04:55,355:INFO:_display_container: 2
2024-07-19 01:04:55,356:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:04:55,356:INFO:compare_models() successfully completed......................................
2024-07-19 01:06:13,788:INFO:PyCaret ClassificationExperiment
2024-07-19 01:06:13,788:INFO:Logging name: clf-default-name
2024-07-19 01:06:13,788:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:06:13,789:INFO:version 3.3.2
2024-07-19 01:06:13,789:INFO:Initializing setup()
2024-07-19 01:06:13,789:INFO:self.USI: f4ec
2024-07-19 01:06:13,789:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:06:13,789:INFO:Checking environment
2024-07-19 01:06:13,789:INFO:python_version: 3.10.11
2024-07-19 01:06:13,789:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:06:13,789:INFO:machine: AMD64
2024-07-19 01:06:13,789:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:06:13,796:INFO:Memory: svmem(total=16516247552, available=1482543104, percent=91.0, used=15033704448, free=1482543104)
2024-07-19 01:06:13,796:INFO:Physical Core: 8
2024-07-19 01:06:13,796:INFO:Logical Core: 16
2024-07-19 01:06:13,796:INFO:Checking libraries
2024-07-19 01:06:13,796:INFO:System:
2024-07-19 01:06:13,796:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:06:13,796:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:06:13,796:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:06:13,796:INFO:PyCaret required dependencies:
2024-07-19 01:06:13,796:INFO:                 pip: 24.1.2
2024-07-19 01:06:13,796:INFO:          setuptools: 65.5.0
2024-07-19 01:06:13,796:INFO:             pycaret: 3.3.2
2024-07-19 01:06:13,796:INFO:             IPython: 8.21.0
2024-07-19 01:06:13,796:INFO:          ipywidgets: 8.1.3
2024-07-19 01:06:13,796:INFO:                tqdm: 4.66.4
2024-07-19 01:06:13,797:INFO:               numpy: 1.26.4
2024-07-19 01:06:13,797:INFO:              pandas: 2.1.4
2024-07-19 01:06:13,797:INFO:              jinja2: 3.1.2
2024-07-19 01:06:13,797:INFO:               scipy: 1.11.4
2024-07-19 01:06:13,797:INFO:              joblib: 1.3.2
2024-07-19 01:06:13,797:INFO:             sklearn: 1.4.2
2024-07-19 01:06:13,797:INFO:                pyod: 2.0.1
2024-07-19 01:06:13,797:INFO:            imblearn: 0.12.2
2024-07-19 01:06:13,797:INFO:   category_encoders: 2.6.3
2024-07-19 01:06:13,797:INFO:            lightgbm: 4.3.0
2024-07-19 01:06:13,797:INFO:               numba: 0.60.0
2024-07-19 01:06:13,797:INFO:            requests: 2.32.3
2024-07-19 01:06:13,797:INFO:          matplotlib: 3.8.3
2024-07-19 01:06:13,797:INFO:          scikitplot: 0.3.7
2024-07-19 01:06:13,797:INFO:         yellowbrick: 1.5
2024-07-19 01:06:13,797:INFO:              plotly: 5.20.0
2024-07-19 01:06:13,797:INFO:    plotly-resampler: Not installed
2024-07-19 01:06:13,797:INFO:             kaleido: 0.2.1
2024-07-19 01:06:13,797:INFO:           schemdraw: 0.15
2024-07-19 01:06:13,797:INFO:         statsmodels: 0.14.2
2024-07-19 01:06:13,797:INFO:              sktime: 0.26.0
2024-07-19 01:06:13,797:INFO:               tbats: 1.1.3
2024-07-19 01:06:13,797:INFO:            pmdarima: 2.0.4
2024-07-19 01:06:13,797:INFO:              psutil: 5.9.8
2024-07-19 01:06:13,797:INFO:          markupsafe: 2.1.3
2024-07-19 01:06:13,797:INFO:             pickle5: Not installed
2024-07-19 01:06:13,797:INFO:         cloudpickle: 3.0.0
2024-07-19 01:06:13,797:INFO:         deprecation: 2.1.0
2024-07-19 01:06:13,797:INFO:              xxhash: 3.4.1
2024-07-19 01:06:13,797:INFO:           wurlitzer: Not installed
2024-07-19 01:06:13,797:INFO:PyCaret optional dependencies:
2024-07-19 01:06:13,797:INFO:                shap: 0.44.1
2024-07-19 01:06:13,797:INFO:           interpret: 0.6.2
2024-07-19 01:06:13,797:INFO:                umap: 0.5.6
2024-07-19 01:06:13,797:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:06:13,797:INFO:  explainerdashboard: Not installed
2024-07-19 01:06:13,797:INFO:             autoviz: Not installed
2024-07-19 01:06:13,797:INFO:           fairlearn: 0.7.0
2024-07-19 01:06:13,798:INFO:          deepchecks: Not installed
2024-07-19 01:06:13,798:INFO:             xgboost: 2.0.3
2024-07-19 01:06:13,798:INFO:            catboost: 1.2.5
2024-07-19 01:06:13,798:INFO:              kmodes: 0.12.2
2024-07-19 01:06:13,798:INFO:             mlxtend: 0.23.1
2024-07-19 01:06:13,798:INFO:       statsforecast: Not installed
2024-07-19 01:06:13,798:INFO:        tune_sklearn: Not installed
2024-07-19 01:06:13,798:INFO:                 ray: Not installed
2024-07-19 01:06:13,798:INFO:            hyperopt: 0.2.7
2024-07-19 01:06:13,798:INFO:              optuna: 3.6.1
2024-07-19 01:06:13,798:INFO:               skopt: 0.10.2
2024-07-19 01:06:13,798:INFO:              mlflow: Not installed
2024-07-19 01:06:13,798:INFO:              gradio: Not installed
2024-07-19 01:06:13,798:INFO:             fastapi: Not installed
2024-07-19 01:06:13,798:INFO:             uvicorn: 0.30.1
2024-07-19 01:06:13,798:INFO:              m2cgen: 0.10.0
2024-07-19 01:06:13,798:INFO:           evidently: Not installed
2024-07-19 01:06:13,798:INFO:               fugue: Not installed
2024-07-19 01:06:13,798:INFO:           streamlit: Not installed
2024-07-19 01:06:13,798:INFO:             prophet: Not installed
2024-07-19 01:06:13,798:INFO:None
2024-07-19 01:06:13,798:INFO:Set up data.
2024-07-19 01:06:13,818:INFO:Set up folding strategy.
2024-07-19 01:06:13,818:INFO:Set up train/test split.
2024-07-19 01:06:13,834:INFO:Set up index.
2024-07-19 01:06:13,834:INFO:Assigning column types.
2024-07-19 01:06:13,846:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:06:13,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:06:13,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:06:13,900:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:13,901:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:13,934:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:06:13,935:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:06:13,954:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:13,956:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:13,956:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:06:13,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:06:14,009:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:14,011:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:14,044:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:06:14,063:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:14,065:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:14,066:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:06:14,119:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:14,121:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:14,174:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:14,176:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:14,177:INFO:Preparing preprocessing pipeline...
2024-07-19 01:06:14,179:INFO:Set up simple imputation.
2024-07-19 01:06:14,185:INFO:Set up encoding of categorical features.
2024-07-19 01:06:14,186:INFO:Set up column name cleaning.
2024-07-19 01:06:14,324:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:06:14,329:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'Index',
                                             'Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Sent tnx', 'Received Tnx',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To A...
                                                                    'most sent '
                                                                    'token '
                                                                    'type',
                                                                    ' '
                                                                    'ERC20_most_rec_token_type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:06:14,329:INFO:Creating final display dataframe.
2024-07-19 01:06:14,724:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9841, 51)
4        Transformed data shape        (9841, 51)
5   Transformed train set shape        (6888, 51)
6    Transformed test set shape        (2953, 51)
7              Numeric features                47
8          Categorical features                 3
9      Rows with missing values             27.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              f4ec
2024-07-19 01:06:14,781:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:14,783:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:14,835:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:14,837:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:14,838:INFO:setup() successfully completed in 1.05s...............
2024-07-19 01:06:14,867:INFO:Initializing compare_models()
2024-07-19 01:06:14,867:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:06:14,867:INFO:Checking exceptions
2024-07-19 01:06:14,888:INFO:Preparing display monitor
2024-07-19 01:06:14,910:INFO:Initializing Logistic Regression
2024-07-19 01:06:14,910:INFO:Total runtime is 0.0 minutes
2024-07-19 01:06:14,913:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:14,913:INFO:Initializing create_model()
2024-07-19 01:06:14,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:14,914:INFO:Checking exceptions
2024-07-19 01:06:14,914:INFO:Importing libraries
2024-07-19 01:06:14,914:INFO:Copying training dataset
2024-07-19 01:06:14,932:INFO:Defining folds
2024-07-19 01:06:14,932:INFO:Declaring metric variables
2024-07-19 01:06:14,936:INFO:Importing untrained model
2024-07-19 01:06:14,939:INFO:Logistic Regression Imported successfully
2024-07-19 01:06:14,945:INFO:Starting cross validation
2024-07-19 01:06:14,947:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:17,335:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,356:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,368:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,443:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,486:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,564:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,565:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,570:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,597:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,599:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:17,635:INFO:Calculating mean and std
2024-07-19 01:06:17,636:INFO:Creating metrics dataframe
2024-07-19 01:06:17,638:INFO:Uploading results into container
2024-07-19 01:06:17,639:INFO:Uploading model into container now
2024-07-19 01:06:17,639:INFO:_master_model_container: 1
2024-07-19 01:06:17,639:INFO:_display_container: 2
2024-07-19 01:06:17,639:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:06:17,640:INFO:create_model() successfully completed......................................
2024-07-19 01:06:17,770:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:17,770:INFO:Creating metrics dataframe
2024-07-19 01:06:17,775:INFO:Initializing K Neighbors Classifier
2024-07-19 01:06:17,775:INFO:Total runtime is 0.047747381528218585 minutes
2024-07-19 01:06:17,778:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:17,778:INFO:Initializing create_model()
2024-07-19 01:06:17,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:17,778:INFO:Checking exceptions
2024-07-19 01:06:17,778:INFO:Importing libraries
2024-07-19 01:06:17,778:INFO:Copying training dataset
2024-07-19 01:06:17,793:INFO:Defining folds
2024-07-19 01:06:17,793:INFO:Declaring metric variables
2024-07-19 01:06:17,797:INFO:Importing untrained model
2024-07-19 01:06:17,799:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:06:17,803:INFO:Starting cross validation
2024-07-19 01:06:17,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:18,335:INFO:Calculating mean and std
2024-07-19 01:06:18,337:INFO:Creating metrics dataframe
2024-07-19 01:06:18,339:INFO:Uploading results into container
2024-07-19 01:06:18,340:INFO:Uploading model into container now
2024-07-19 01:06:18,340:INFO:_master_model_container: 2
2024-07-19 01:06:18,340:INFO:_display_container: 2
2024-07-19 01:06:18,340:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:06:18,340:INFO:create_model() successfully completed......................................
2024-07-19 01:06:18,471:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:18,471:INFO:Creating metrics dataframe
2024-07-19 01:06:18,476:INFO:Initializing Naive Bayes
2024-07-19 01:06:18,476:INFO:Total runtime is 0.0594262679417928 minutes
2024-07-19 01:06:18,478:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:18,478:INFO:Initializing create_model()
2024-07-19 01:06:18,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:18,478:INFO:Checking exceptions
2024-07-19 01:06:18,478:INFO:Importing libraries
2024-07-19 01:06:18,479:INFO:Copying training dataset
2024-07-19 01:06:18,493:INFO:Defining folds
2024-07-19 01:06:18,493:INFO:Declaring metric variables
2024-07-19 01:06:18,497:INFO:Importing untrained model
2024-07-19 01:06:18,499:INFO:Naive Bayes Imported successfully
2024-07-19 01:06:18,503:INFO:Starting cross validation
2024-07-19 01:06:18,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:18,859:INFO:Calculating mean and std
2024-07-19 01:06:18,860:INFO:Creating metrics dataframe
2024-07-19 01:06:18,861:INFO:Uploading results into container
2024-07-19 01:06:18,862:INFO:Uploading model into container now
2024-07-19 01:06:18,862:INFO:_master_model_container: 3
2024-07-19 01:06:18,862:INFO:_display_container: 2
2024-07-19 01:06:18,862:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:06:18,862:INFO:create_model() successfully completed......................................
2024-07-19 01:06:18,991:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:18,992:INFO:Creating metrics dataframe
2024-07-19 01:06:18,997:INFO:Initializing Decision Tree Classifier
2024-07-19 01:06:18,997:INFO:Total runtime is 0.06811124086380005 minutes
2024-07-19 01:06:19,000:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:19,000:INFO:Initializing create_model()
2024-07-19 01:06:19,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:19,000:INFO:Checking exceptions
2024-07-19 01:06:19,000:INFO:Importing libraries
2024-07-19 01:06:19,000:INFO:Copying training dataset
2024-07-19 01:06:19,014:INFO:Defining folds
2024-07-19 01:06:19,015:INFO:Declaring metric variables
2024-07-19 01:06:19,017:INFO:Importing untrained model
2024-07-19 01:06:19,020:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:06:19,025:INFO:Starting cross validation
2024-07-19 01:06:19,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:19,291:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,310:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,316:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,329:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,341:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,341:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,345:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,360:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,363:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,378:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:19,389:INFO:Calculating mean and std
2024-07-19 01:06:19,391:INFO:Creating metrics dataframe
2024-07-19 01:06:19,393:INFO:Uploading results into container
2024-07-19 01:06:19,394:INFO:Uploading model into container now
2024-07-19 01:06:19,394:INFO:_master_model_container: 4
2024-07-19 01:06:19,395:INFO:_display_container: 2
2024-07-19 01:06:19,395:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-19 01:06:19,395:INFO:create_model() successfully completed......................................
2024-07-19 01:06:19,520:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:19,520:INFO:Creating metrics dataframe
2024-07-19 01:06:19,525:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:06:19,526:INFO:Total runtime is 0.07692990303039551 minutes
2024-07-19 01:06:19,529:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:19,529:INFO:Initializing create_model()
2024-07-19 01:06:19,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:19,529:INFO:Checking exceptions
2024-07-19 01:06:19,529:INFO:Importing libraries
2024-07-19 01:06:19,529:INFO:Copying training dataset
2024-07-19 01:06:19,543:INFO:Defining folds
2024-07-19 01:06:19,543:INFO:Declaring metric variables
2024-07-19 01:06:19,546:INFO:Importing untrained model
2024-07-19 01:06:19,549:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:06:19,553:INFO:Starting cross validation
2024-07-19 01:06:19,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:19,932:INFO:Calculating mean and std
2024-07-19 01:06:19,935:INFO:Creating metrics dataframe
2024-07-19 01:06:19,937:INFO:Uploading results into container
2024-07-19 01:06:19,937:INFO:Uploading model into container now
2024-07-19 01:06:19,937:INFO:_master_model_container: 5
2024-07-19 01:06:19,938:INFO:_display_container: 2
2024-07-19 01:06:19,938:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:06:19,938:INFO:create_model() successfully completed......................................
2024-07-19 01:06:20,069:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:20,069:INFO:Creating metrics dataframe
2024-07-19 01:06:20,074:INFO:Initializing Ridge Classifier
2024-07-19 01:06:20,074:INFO:Total runtime is 0.08606249491373699 minutes
2024-07-19 01:06:20,077:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:20,077:INFO:Initializing create_model()
2024-07-19 01:06:20,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:20,077:INFO:Checking exceptions
2024-07-19 01:06:20,077:INFO:Importing libraries
2024-07-19 01:06:20,077:INFO:Copying training dataset
2024-07-19 01:06:20,091:INFO:Defining folds
2024-07-19 01:06:20,091:INFO:Declaring metric variables
2024-07-19 01:06:20,095:INFO:Importing untrained model
2024-07-19 01:06:20,097:INFO:Ridge Classifier Imported successfully
2024-07-19 01:06:20,101:INFO:Starting cross validation
2024-07-19 01:06:20,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:20,343:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95656e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,350:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95608e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,352:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95647e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,355:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.59335e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,361:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.47275e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,395:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.51911e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,397:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,402:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,406:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.77144e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,409:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,412:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,416:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,417:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95661e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,425:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95627e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,438:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.79374e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:06:20,441:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,448:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,453:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,461:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:20,477:INFO:Calculating mean and std
2024-07-19 01:06:20,479:INFO:Creating metrics dataframe
2024-07-19 01:06:20,480:INFO:Uploading results into container
2024-07-19 01:06:20,480:INFO:Uploading model into container now
2024-07-19 01:06:20,481:INFO:_master_model_container: 6
2024-07-19 01:06:20,481:INFO:_display_container: 2
2024-07-19 01:06:20,481:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-19 01:06:20,482:INFO:create_model() successfully completed......................................
2024-07-19 01:06:20,610:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:20,610:INFO:Creating metrics dataframe
2024-07-19 01:06:20,616:INFO:Initializing Random Forest Classifier
2024-07-19 01:06:20,616:INFO:Total runtime is 0.09509133895238242 minutes
2024-07-19 01:06:20,618:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:20,618:INFO:Initializing create_model()
2024-07-19 01:06:20,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:20,618:INFO:Checking exceptions
2024-07-19 01:06:20,618:INFO:Importing libraries
2024-07-19 01:06:20,618:INFO:Copying training dataset
2024-07-19 01:06:20,632:INFO:Defining folds
2024-07-19 01:06:20,632:INFO:Declaring metric variables
2024-07-19 01:06:20,635:INFO:Importing untrained model
2024-07-19 01:06:20,638:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:06:20,642:INFO:Starting cross validation
2024-07-19 01:06:20,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:21,595:INFO:Calculating mean and std
2024-07-19 01:06:21,596:INFO:Creating metrics dataframe
2024-07-19 01:06:21,598:INFO:Uploading results into container
2024-07-19 01:06:21,598:INFO:Uploading model into container now
2024-07-19 01:06:21,599:INFO:_master_model_container: 7
2024-07-19 01:06:21,599:INFO:_display_container: 2
2024-07-19 01:06:21,599:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:06:21,599:INFO:create_model() successfully completed......................................
2024-07-19 01:06:21,758:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:21,758:INFO:Creating metrics dataframe
2024-07-19 01:06:21,765:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:06:21,765:INFO:Total runtime is 0.11424090464909872 minutes
2024-07-19 01:06:21,767:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:21,767:INFO:Initializing create_model()
2024-07-19 01:06:21,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:21,767:INFO:Checking exceptions
2024-07-19 01:06:21,767:INFO:Importing libraries
2024-07-19 01:06:21,767:INFO:Copying training dataset
2024-07-19 01:06:21,783:INFO:Defining folds
2024-07-19 01:06:21,783:INFO:Declaring metric variables
2024-07-19 01:06:21,785:INFO:Importing untrained model
2024-07-19 01:06:21,788:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:06:21,792:INFO:Starting cross validation
2024-07-19 01:06:21,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:22,031:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,055:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,066:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,087:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,104:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,104:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,120:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,121:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,128:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,130:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,132:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,151:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,153:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:06:22,153:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,154:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,164:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,165:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,171:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,179:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,181:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,198:INFO:Calculating mean and std
2024-07-19 01:06:22,200:INFO:Creating metrics dataframe
2024-07-19 01:06:22,202:INFO:Uploading results into container
2024-07-19 01:06:22,202:INFO:Uploading model into container now
2024-07-19 01:06:22,202:INFO:_master_model_container: 8
2024-07-19 01:06:22,202:INFO:_display_container: 2
2024-07-19 01:06:22,203:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:06:22,203:INFO:create_model() successfully completed......................................
2024-07-19 01:06:22,332:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:22,332:INFO:Creating metrics dataframe
2024-07-19 01:06:22,338:INFO:Initializing Ada Boost Classifier
2024-07-19 01:06:22,338:INFO:Total runtime is 0.12379963397979737 minutes
2024-07-19 01:06:22,340:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:22,340:INFO:Initializing create_model()
2024-07-19 01:06:22,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:22,340:INFO:Checking exceptions
2024-07-19 01:06:22,340:INFO:Importing libraries
2024-07-19 01:06:22,342:INFO:Copying training dataset
2024-07-19 01:06:22,356:INFO:Defining folds
2024-07-19 01:06:22,356:INFO:Declaring metric variables
2024-07-19 01:06:22,360:INFO:Importing untrained model
2024-07-19 01:06:22,363:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:06:22,368:INFO:Starting cross validation
2024-07-19 01:06:22,369:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:22,584:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,601:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,610:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,638:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,680:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,687:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,688:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,701:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,728:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:06:22,764:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,770:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:22,791:INFO:Calculating mean and std
2024-07-19 01:06:22,793:INFO:Creating metrics dataframe
2024-07-19 01:06:22,795:INFO:Uploading results into container
2024-07-19 01:06:22,795:INFO:Uploading model into container now
2024-07-19 01:06:22,796:INFO:_master_model_container: 9
2024-07-19 01:06:22,796:INFO:_display_container: 2
2024-07-19 01:06:22,796:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-19 01:06:22,797:INFO:create_model() successfully completed......................................
2024-07-19 01:06:22,945:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:22,945:INFO:Creating metrics dataframe
2024-07-19 01:06:22,952:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:06:22,952:INFO:Total runtime is 0.13403049310048423 minutes
2024-07-19 01:06:22,957:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:22,957:INFO:Initializing create_model()
2024-07-19 01:06:22,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:22,957:INFO:Checking exceptions
2024-07-19 01:06:22,957:INFO:Importing libraries
2024-07-19 01:06:22,957:INFO:Copying training dataset
2024-07-19 01:06:22,973:INFO:Defining folds
2024-07-19 01:06:22,973:INFO:Declaring metric variables
2024-07-19 01:06:22,977:INFO:Importing untrained model
2024-07-19 01:06:22,981:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:06:22,987:INFO:Starting cross validation
2024-07-19 01:06:22,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:24,783:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,818:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,835:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,859:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,876:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,885:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,887:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,887:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,915:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,937:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:24,945:INFO:Calculating mean and std
2024-07-19 01:06:24,947:INFO:Creating metrics dataframe
2024-07-19 01:06:24,948:INFO:Uploading results into container
2024-07-19 01:06:24,950:INFO:Uploading model into container now
2024-07-19 01:06:24,950:INFO:_master_model_container: 10
2024-07-19 01:06:24,950:INFO:_display_container: 2
2024-07-19 01:06:24,951:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:06:24,951:INFO:create_model() successfully completed......................................
2024-07-19 01:06:25,082:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:25,082:INFO:Creating metrics dataframe
2024-07-19 01:06:25,089:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:06:25,089:INFO:Total runtime is 0.16964209477106731 minutes
2024-07-19 01:06:25,091:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:25,092:INFO:Initializing create_model()
2024-07-19 01:06:25,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:25,092:INFO:Checking exceptions
2024-07-19 01:06:25,092:INFO:Importing libraries
2024-07-19 01:06:25,092:INFO:Copying training dataset
2024-07-19 01:06:25,106:INFO:Defining folds
2024-07-19 01:06:25,106:INFO:Declaring metric variables
2024-07-19 01:06:25,109:INFO:Importing untrained model
2024-07-19 01:06:25,113:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:06:25,117:INFO:Starting cross validation
2024-07-19 01:06:25,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:25,441:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,460:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,471:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,501:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,511:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,513:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,517:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,520:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,544:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:25,552:INFO:Calculating mean and std
2024-07-19 01:06:25,553:INFO:Creating metrics dataframe
2024-07-19 01:06:25,555:INFO:Uploading results into container
2024-07-19 01:06:25,555:INFO:Uploading model into container now
2024-07-19 01:06:25,555:INFO:_master_model_container: 11
2024-07-19 01:06:25,555:INFO:_display_container: 2
2024-07-19 01:06:25,556:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:06:25,556:INFO:create_model() successfully completed......................................
2024-07-19 01:06:25,688:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:25,688:INFO:Creating metrics dataframe
2024-07-19 01:06:25,695:INFO:Initializing Extra Trees Classifier
2024-07-19 01:06:25,695:INFO:Total runtime is 0.17973693211873373 minutes
2024-07-19 01:06:25,698:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:25,699:INFO:Initializing create_model()
2024-07-19 01:06:25,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:25,699:INFO:Checking exceptions
2024-07-19 01:06:25,699:INFO:Importing libraries
2024-07-19 01:06:25,699:INFO:Copying training dataset
2024-07-19 01:06:25,714:INFO:Defining folds
2024-07-19 01:06:25,714:INFO:Declaring metric variables
2024-07-19 01:06:25,717:INFO:Importing untrained model
2024-07-19 01:06:25,720:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:06:25,726:INFO:Starting cross validation
2024-07-19 01:06:25,727:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:26,544:INFO:Calculating mean and std
2024-07-19 01:06:26,545:INFO:Creating metrics dataframe
2024-07-19 01:06:26,547:INFO:Uploading results into container
2024-07-19 01:06:26,547:INFO:Uploading model into container now
2024-07-19 01:06:26,548:INFO:_master_model_container: 12
2024-07-19 01:06:26,548:INFO:_display_container: 2
2024-07-19 01:06:26,548:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-19 01:06:26,548:INFO:create_model() successfully completed......................................
2024-07-19 01:06:26,675:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:26,675:INFO:Creating metrics dataframe
2024-07-19 01:06:26,682:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:06:26,682:INFO:Total runtime is 0.19619611899058026 minutes
2024-07-19 01:06:26,685:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:26,685:INFO:Initializing create_model()
2024-07-19 01:06:26,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:26,685:INFO:Checking exceptions
2024-07-19 01:06:26,685:INFO:Importing libraries
2024-07-19 01:06:26,685:INFO:Copying training dataset
2024-07-19 01:06:26,700:INFO:Defining folds
2024-07-19 01:06:26,701:INFO:Declaring metric variables
2024-07-19 01:06:26,703:INFO:Importing untrained model
2024-07-19 01:06:26,706:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:06:26,711:INFO:Starting cross validation
2024-07-19 01:06:26,712:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:27,202:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,205:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,208:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,210:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,218:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,220:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,221:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,239:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,242:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,249:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:27,269:INFO:Calculating mean and std
2024-07-19 01:06:27,271:INFO:Creating metrics dataframe
2024-07-19 01:06:27,273:INFO:Uploading results into container
2024-07-19 01:06:27,273:INFO:Uploading model into container now
2024-07-19 01:06:27,273:INFO:_master_model_container: 13
2024-07-19 01:06:27,274:INFO:_display_container: 2
2024-07-19 01:06:27,275:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:06:27,275:INFO:create_model() successfully completed......................................
2024-07-19 01:06:27,401:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:27,401:INFO:Creating metrics dataframe
2024-07-19 01:06:27,409:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:06:27,409:INFO:Total runtime is 0.20830744107564292 minutes
2024-07-19 01:06:27,412:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:27,412:INFO:Initializing create_model()
2024-07-19 01:06:27,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:27,412:INFO:Checking exceptions
2024-07-19 01:06:27,412:INFO:Importing libraries
2024-07-19 01:06:27,412:INFO:Copying training dataset
2024-07-19 01:06:27,426:INFO:Defining folds
2024-07-19 01:06:27,427:INFO:Declaring metric variables
2024-07-19 01:06:27,430:INFO:Importing untrained model
2024-07-19 01:06:27,433:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:06:27,437:INFO:Starting cross validation
2024-07-19 01:06:27,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:28,428:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,463:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,511:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,528:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,577:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,593:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,626:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,642:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:28,658:INFO:Calculating mean and std
2024-07-19 01:06:28,658:INFO:Creating metrics dataframe
2024-07-19 01:06:28,663:INFO:Uploading results into container
2024-07-19 01:06:28,663:INFO:Uploading model into container now
2024-07-19 01:06:28,663:INFO:_master_model_container: 14
2024-07-19 01:06:28,663:INFO:_display_container: 2
2024-07-19 01:06:28,663:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:06:28,663:INFO:create_model() successfully completed......................................
2024-07-19 01:06:28,830:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:28,830:INFO:Creating metrics dataframe
2024-07-19 01:06:28,838:INFO:Initializing CatBoost Classifier
2024-07-19 01:06:28,838:INFO:Total runtime is 0.23211892048517865 minutes
2024-07-19 01:06:28,840:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:28,841:INFO:Initializing create_model()
2024-07-19 01:06:28,841:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:28,841:INFO:Checking exceptions
2024-07-19 01:06:28,841:INFO:Importing libraries
2024-07-19 01:06:28,841:INFO:Copying training dataset
2024-07-19 01:06:28,855:INFO:Defining folds
2024-07-19 01:06:28,855:INFO:Declaring metric variables
2024-07-19 01:06:28,858:INFO:Importing untrained model
2024-07-19 01:06:28,861:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:06:28,867:INFO:Starting cross validation
2024-07-19 01:06:28,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:55,491:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:55,511:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:55,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:55,582:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:55,683:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:55,730:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:55,743:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:55,771:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:55,836:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,438:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,446:INFO:Calculating mean and std
2024-07-19 01:06:56,447:INFO:Creating metrics dataframe
2024-07-19 01:06:56,449:INFO:Uploading results into container
2024-07-19 01:06:56,449:INFO:Uploading model into container now
2024-07-19 01:06:56,450:INFO:_master_model_container: 15
2024-07-19 01:06:56,450:INFO:_display_container: 2
2024-07-19 01:06:56,450:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BB7B8070>
2024-07-19 01:06:56,450:INFO:create_model() successfully completed......................................
2024-07-19 01:06:56,582:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:56,582:INFO:Creating metrics dataframe
2024-07-19 01:06:56,590:INFO:Initializing Dummy Classifier
2024-07-19 01:06:56,590:INFO:Total runtime is 0.6946516990661621 minutes
2024-07-19 01:06:56,593:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:56,593:INFO:Initializing create_model()
2024-07-19 01:06:56,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191B4DB8400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:56,594:INFO:Checking exceptions
2024-07-19 01:06:56,594:INFO:Importing libraries
2024-07-19 01:06:56,594:INFO:Copying training dataset
2024-07-19 01:06:56,609:INFO:Defining folds
2024-07-19 01:06:56,609:INFO:Declaring metric variables
2024-07-19 01:06:56,612:INFO:Importing untrained model
2024-07-19 01:06:56,615:INFO:Dummy Classifier Imported successfully
2024-07-19 01:06:56,621:INFO:Starting cross validation
2024-07-19 01:06:56,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:56,887:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,905:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,922:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,934:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,941:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,945:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,947:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,950:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,962:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,962:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:56,976:INFO:Calculating mean and std
2024-07-19 01:06:56,977:INFO:Creating metrics dataframe
2024-07-19 01:06:56,979:INFO:Uploading results into container
2024-07-19 01:06:56,979:INFO:Uploading model into container now
2024-07-19 01:06:56,980:INFO:_master_model_container: 16
2024-07-19 01:06:56,980:INFO:_display_container: 2
2024-07-19 01:06:56,980:INFO:DummyClassifier(constant=None, random_state=85, strategy='prior')
2024-07-19 01:06:56,980:INFO:create_model() successfully completed......................................
2024-07-19 01:06:57,112:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:57,113:INFO:Creating metrics dataframe
2024-07-19 01:06:57,120:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-19 01:06:57,126:INFO:Initializing create_model()
2024-07-19 01:06:57,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB41D060>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:57,128:INFO:Checking exceptions
2024-07-19 01:06:57,129:INFO:Importing libraries
2024-07-19 01:06:57,129:INFO:Copying training dataset
2024-07-19 01:06:57,142:INFO:Defining folds
2024-07-19 01:06:57,142:INFO:Declaring metric variables
2024-07-19 01:06:57,142:INFO:Importing untrained model
2024-07-19 01:06:57,142:INFO:Declaring custom model
2024-07-19 01:06:57,142:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:06:57,144:INFO:Cross validation set to False
2024-07-19 01:06:57,144:INFO:Fitting Model
2024-07-19 01:06:57,363:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:06:57,363:INFO:create_model() successfully completed......................................
2024-07-19 01:06:57,513:INFO:_master_model_container: 16
2024-07-19 01:06:57,513:INFO:_display_container: 2
2024-07-19 01:06:57,513:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:06:57,513:INFO:compare_models() successfully completed......................................
2024-07-19 01:06:57,571:INFO:PyCaret ClassificationExperiment
2024-07-19 01:06:57,571:INFO:Logging name: clf-default-name
2024-07-19 01:06:57,571:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:06:57,571:INFO:version 3.3.2
2024-07-19 01:06:57,571:INFO:Initializing setup()
2024-07-19 01:06:57,571:INFO:self.USI: 4f70
2024-07-19 01:06:57,571:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:06:57,572:INFO:Checking environment
2024-07-19 01:06:57,572:INFO:python_version: 3.10.11
2024-07-19 01:06:57,572:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:06:57,572:INFO:machine: AMD64
2024-07-19 01:06:57,572:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:06:57,578:INFO:Memory: svmem(total=16516247552, available=1441157120, percent=91.3, used=15075090432, free=1441157120)
2024-07-19 01:06:57,578:INFO:Physical Core: 8
2024-07-19 01:06:57,578:INFO:Logical Core: 16
2024-07-19 01:06:57,578:INFO:Checking libraries
2024-07-19 01:06:57,578:INFO:System:
2024-07-19 01:06:57,579:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:06:57,579:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:06:57,579:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:06:57,579:INFO:PyCaret required dependencies:
2024-07-19 01:06:57,580:INFO:                 pip: 24.1.2
2024-07-19 01:06:57,580:INFO:          setuptools: 65.5.0
2024-07-19 01:06:57,580:INFO:             pycaret: 3.3.2
2024-07-19 01:06:57,580:INFO:             IPython: 8.21.0
2024-07-19 01:06:57,580:INFO:          ipywidgets: 8.1.3
2024-07-19 01:06:57,580:INFO:                tqdm: 4.66.4
2024-07-19 01:06:57,580:INFO:               numpy: 1.26.4
2024-07-19 01:06:57,580:INFO:              pandas: 2.1.4
2024-07-19 01:06:57,580:INFO:              jinja2: 3.1.2
2024-07-19 01:06:57,580:INFO:               scipy: 1.11.4
2024-07-19 01:06:57,580:INFO:              joblib: 1.3.2
2024-07-19 01:06:57,580:INFO:             sklearn: 1.4.2
2024-07-19 01:06:57,580:INFO:                pyod: 2.0.1
2024-07-19 01:06:57,580:INFO:            imblearn: 0.12.2
2024-07-19 01:06:57,580:INFO:   category_encoders: 2.6.3
2024-07-19 01:06:57,580:INFO:            lightgbm: 4.3.0
2024-07-19 01:06:57,580:INFO:               numba: 0.60.0
2024-07-19 01:06:57,580:INFO:            requests: 2.32.3
2024-07-19 01:06:57,580:INFO:          matplotlib: 3.8.3
2024-07-19 01:06:57,580:INFO:          scikitplot: 0.3.7
2024-07-19 01:06:57,580:INFO:         yellowbrick: 1.5
2024-07-19 01:06:57,580:INFO:              plotly: 5.20.0
2024-07-19 01:06:57,580:INFO:    plotly-resampler: Not installed
2024-07-19 01:06:57,580:INFO:             kaleido: 0.2.1
2024-07-19 01:06:57,580:INFO:           schemdraw: 0.15
2024-07-19 01:06:57,580:INFO:         statsmodels: 0.14.2
2024-07-19 01:06:57,580:INFO:              sktime: 0.26.0
2024-07-19 01:06:57,580:INFO:               tbats: 1.1.3
2024-07-19 01:06:57,580:INFO:            pmdarima: 2.0.4
2024-07-19 01:06:57,580:INFO:              psutil: 5.9.8
2024-07-19 01:06:57,580:INFO:          markupsafe: 2.1.3
2024-07-19 01:06:57,580:INFO:             pickle5: Not installed
2024-07-19 01:06:57,581:INFO:         cloudpickle: 3.0.0
2024-07-19 01:06:57,581:INFO:         deprecation: 2.1.0
2024-07-19 01:06:57,581:INFO:              xxhash: 3.4.1
2024-07-19 01:06:57,581:INFO:           wurlitzer: Not installed
2024-07-19 01:06:57,581:INFO:PyCaret optional dependencies:
2024-07-19 01:06:57,581:INFO:                shap: 0.44.1
2024-07-19 01:06:57,581:INFO:           interpret: 0.6.2
2024-07-19 01:06:57,581:INFO:                umap: 0.5.6
2024-07-19 01:06:57,581:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:06:57,581:INFO:  explainerdashboard: Not installed
2024-07-19 01:06:57,581:INFO:             autoviz: Not installed
2024-07-19 01:06:57,581:INFO:           fairlearn: 0.7.0
2024-07-19 01:06:57,581:INFO:          deepchecks: Not installed
2024-07-19 01:06:57,581:INFO:             xgboost: 2.0.3
2024-07-19 01:06:57,581:INFO:            catboost: 1.2.5
2024-07-19 01:06:57,581:INFO:              kmodes: 0.12.2
2024-07-19 01:06:57,581:INFO:             mlxtend: 0.23.1
2024-07-19 01:06:57,581:INFO:       statsforecast: Not installed
2024-07-19 01:06:57,581:INFO:        tune_sklearn: Not installed
2024-07-19 01:06:57,581:INFO:                 ray: Not installed
2024-07-19 01:06:57,581:INFO:            hyperopt: 0.2.7
2024-07-19 01:06:57,581:INFO:              optuna: 3.6.1
2024-07-19 01:06:57,581:INFO:               skopt: 0.10.2
2024-07-19 01:06:57,581:INFO:              mlflow: Not installed
2024-07-19 01:06:57,581:INFO:              gradio: Not installed
2024-07-19 01:06:57,581:INFO:             fastapi: Not installed
2024-07-19 01:06:57,581:INFO:             uvicorn: 0.30.1
2024-07-19 01:06:57,581:INFO:              m2cgen: 0.10.0
2024-07-19 01:06:57,581:INFO:           evidently: Not installed
2024-07-19 01:06:57,581:INFO:               fugue: Not installed
2024-07-19 01:06:57,581:INFO:           streamlit: Not installed
2024-07-19 01:06:57,581:INFO:             prophet: Not installed
2024-07-19 01:06:57,582:INFO:None
2024-07-19 01:06:57,582:INFO:Set up data.
2024-07-19 01:06:57,590:INFO:Set up folding strategy.
2024-07-19 01:06:57,590:INFO:Set up train/test split.
2024-07-19 01:06:57,602:INFO:Set up index.
2024-07-19 01:06:57,603:INFO:Assigning column types.
2024-07-19 01:06:57,609:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:06:57,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:06:57,643:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:06:57,663:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:57,665:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:57,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:06:57,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:06:57,719:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:57,721:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:57,721:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:06:57,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:06:57,773:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:57,775:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:57,808:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:06:57,828:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:57,830:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:57,830:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:06:57,881:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:57,883:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:57,937:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:57,939:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:57,940:INFO:Preparing preprocessing pipeline...
2024-07-19 01:06:57,941:INFO:Set up label encoding.
2024-07-19 01:06:57,941:INFO:Set up simple imputation.
2024-07-19 01:06:57,942:INFO:Set up column name cleaning.
2024-07-19 01:06:57,968:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:06:57,971:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Number of Cre...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:06:57,971:INFO:Creating final display dataframe.
2024-07-19 01:06:58,050:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3                Target mapping      NO: 0, SI: 1
4           Original data shape        (9816, 16)
5        Transformed data shape        (9816, 16)
6   Transformed train set shape        (6871, 16)
7    Transformed test set shape        (2945, 16)
8              Numeric features                15
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              4f70
2024-07-19 01:06:58,108:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:58,110:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:58,164:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:06:58,168:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:06:58,170:INFO:setup() successfully completed in 0.6s...............
2024-07-19 01:06:58,192:INFO:Initializing compare_models()
2024-07-19 01:06:58,193:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:06:58,193:INFO:Checking exceptions
2024-07-19 01:06:58,198:INFO:Preparing display monitor
2024-07-19 01:06:58,214:INFO:Initializing Logistic Regression
2024-07-19 01:06:58,214:INFO:Total runtime is 0.0 minutes
2024-07-19 01:06:58,216:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:58,216:INFO:Initializing create_model()
2024-07-19 01:06:58,216:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:58,216:INFO:Checking exceptions
2024-07-19 01:06:58,216:INFO:Importing libraries
2024-07-19 01:06:58,217:INFO:Copying training dataset
2024-07-19 01:06:58,223:INFO:Defining folds
2024-07-19 01:06:58,223:INFO:Declaring metric variables
2024-07-19 01:06:58,226:INFO:Importing untrained model
2024-07-19 01:06:58,230:INFO:Logistic Regression Imported successfully
2024-07-19 01:06:58,234:INFO:Starting cross validation
2024-07-19 01:06:58,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:58,781:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,788:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,802:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,804:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,809:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,809:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,816:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,819:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,823:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,838:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,844:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,846:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,849:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,855:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,860:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,865:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,869:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,870:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,874:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,880:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,881:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,884:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,887:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,894:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,897:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,899:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,900:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,902:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,903:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,903:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,904:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:06:58,905:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,906:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,909:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,915:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:06:58,915:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,919:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,922:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,925:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,929:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,932:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:58,948:INFO:Calculating mean and std
2024-07-19 01:06:58,949:INFO:Creating metrics dataframe
2024-07-19 01:06:58,950:INFO:Uploading results into container
2024-07-19 01:06:58,951:INFO:Uploading model into container now
2024-07-19 01:06:58,951:INFO:_master_model_container: 1
2024-07-19 01:06:58,951:INFO:_display_container: 2
2024-07-19 01:06:58,951:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:06:58,951:INFO:create_model() successfully completed......................................
2024-07-19 01:06:59,079:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:59,079:INFO:Creating metrics dataframe
2024-07-19 01:06:59,084:INFO:Initializing K Neighbors Classifier
2024-07-19 01:06:59,084:INFO:Total runtime is 0.014494001865386963 minutes
2024-07-19 01:06:59,085:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:59,086:INFO:Initializing create_model()
2024-07-19 01:06:59,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:59,086:INFO:Checking exceptions
2024-07-19 01:06:59,086:INFO:Importing libraries
2024-07-19 01:06:59,086:INFO:Copying training dataset
2024-07-19 01:06:59,092:INFO:Defining folds
2024-07-19 01:06:59,093:INFO:Declaring metric variables
2024-07-19 01:06:59,094:INFO:Importing untrained model
2024-07-19 01:06:59,096:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:06:59,101:INFO:Starting cross validation
2024-07-19 01:06:59,101:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:59,272:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,280:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,288:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,290:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,291:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,294:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,294:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,296:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,299:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,299:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,301:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,303:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,304:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,308:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,310:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,312:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,312:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,320:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,321:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,321:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,325:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,327:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,330:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,331:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,332:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,333:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,335:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,335:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,339:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,339:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,354:INFO:Calculating mean and std
2024-07-19 01:06:59,356:INFO:Creating metrics dataframe
2024-07-19 01:06:59,357:INFO:Uploading results into container
2024-07-19 01:06:59,358:INFO:Uploading model into container now
2024-07-19 01:06:59,359:INFO:_master_model_container: 2
2024-07-19 01:06:59,359:INFO:_display_container: 2
2024-07-19 01:06:59,359:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:06:59,359:INFO:create_model() successfully completed......................................
2024-07-19 01:06:59,489:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:59,489:INFO:Creating metrics dataframe
2024-07-19 01:06:59,494:INFO:Initializing Naive Bayes
2024-07-19 01:06:59,494:INFO:Total runtime is 0.021341292063395183 minutes
2024-07-19 01:06:59,497:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:59,497:INFO:Initializing create_model()
2024-07-19 01:06:59,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:59,497:INFO:Checking exceptions
2024-07-19 01:06:59,497:INFO:Importing libraries
2024-07-19 01:06:59,497:INFO:Copying training dataset
2024-07-19 01:06:59,504:INFO:Defining folds
2024-07-19 01:06:59,504:INFO:Declaring metric variables
2024-07-19 01:06:59,507:INFO:Importing untrained model
2024-07-19 01:06:59,510:INFO:Naive Bayes Imported successfully
2024-07-19 01:06:59,514:INFO:Starting cross validation
2024-07-19 01:06:59,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:59,563:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,569:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,572:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,573:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,573:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,574:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,574:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,578:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,579:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,579:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,580:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,581:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,583:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,583:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,584:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,584:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,584:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,585:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,589:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,590:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,591:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,591:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,593:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,593:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,594:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,597:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,598:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,599:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,602:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,606:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,619:INFO:Calculating mean and std
2024-07-19 01:06:59,621:INFO:Creating metrics dataframe
2024-07-19 01:06:59,623:INFO:Uploading results into container
2024-07-19 01:06:59,623:INFO:Uploading model into container now
2024-07-19 01:06:59,623:INFO:_master_model_container: 3
2024-07-19 01:06:59,623:INFO:_display_container: 2
2024-07-19 01:06:59,624:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:06:59,624:INFO:create_model() successfully completed......................................
2024-07-19 01:06:59,785:INFO:SubProcess create_model() end ==================================
2024-07-19 01:06:59,785:INFO:Creating metrics dataframe
2024-07-19 01:06:59,790:INFO:Initializing Decision Tree Classifier
2024-07-19 01:06:59,790:INFO:Total runtime is 0.02627206246058146 minutes
2024-07-19 01:06:59,794:INFO:SubProcess create_model() called ==================================
2024-07-19 01:06:59,794:INFO:Initializing create_model()
2024-07-19 01:06:59,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:06:59,794:INFO:Checking exceptions
2024-07-19 01:06:59,794:INFO:Importing libraries
2024-07-19 01:06:59,795:INFO:Copying training dataset
2024-07-19 01:06:59,800:INFO:Defining folds
2024-07-19 01:06:59,801:INFO:Declaring metric variables
2024-07-19 01:06:59,803:INFO:Importing untrained model
2024-07-19 01:06:59,806:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:06:59,810:INFO:Starting cross validation
2024-07-19 01:06:59,812:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:06:59,918:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,923:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,923:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,925:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,928:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,929:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,932:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,934:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,934:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,935:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,935:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,936:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,939:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,939:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,940:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,941:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,942:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,945:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,947:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,950:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,950:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,955:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,955:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,955:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,959:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,959:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,963:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:06:59,981:INFO:Calculating mean and std
2024-07-19 01:06:59,983:INFO:Creating metrics dataframe
2024-07-19 01:06:59,984:INFO:Uploading results into container
2024-07-19 01:06:59,985:INFO:Uploading model into container now
2024-07-19 01:06:59,985:INFO:_master_model_container: 4
2024-07-19 01:06:59,985:INFO:_display_container: 2
2024-07-19 01:06:59,986:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-19 01:06:59,986:INFO:create_model() successfully completed......................................
2024-07-19 01:07:00,122:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:00,122:INFO:Creating metrics dataframe
2024-07-19 01:07:00,127:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:07:00,127:INFO:Total runtime is 0.03189175923665365 minutes
2024-07-19 01:07:00,130:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:00,131:INFO:Initializing create_model()
2024-07-19 01:07:00,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:00,131:INFO:Checking exceptions
2024-07-19 01:07:00,131:INFO:Importing libraries
2024-07-19 01:07:00,131:INFO:Copying training dataset
2024-07-19 01:07:00,136:INFO:Defining folds
2024-07-19 01:07:00,136:INFO:Declaring metric variables
2024-07-19 01:07:00,140:INFO:Importing untrained model
2024-07-19 01:07:00,143:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:07:00,147:INFO:Starting cross validation
2024-07-19 01:07:00,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:00,208:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,212:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,212:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,217:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,218:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,219:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,223:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,223:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,225:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,225:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,225:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,226:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,227:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,229:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,232:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,232:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,234:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,234:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,238:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,238:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,239:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,240:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,240:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,243:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,247:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,250:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,251:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,254:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,256:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,261:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,278:INFO:Calculating mean and std
2024-07-19 01:07:00,279:INFO:Creating metrics dataframe
2024-07-19 01:07:00,281:INFO:Uploading results into container
2024-07-19 01:07:00,281:INFO:Uploading model into container now
2024-07-19 01:07:00,281:INFO:_master_model_container: 5
2024-07-19 01:07:00,281:INFO:_display_container: 2
2024-07-19 01:07:00,282:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:07:00,282:INFO:create_model() successfully completed......................................
2024-07-19 01:07:00,426:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:00,426:INFO:Creating metrics dataframe
2024-07-19 01:07:00,432:INFO:Initializing Ridge Classifier
2024-07-19 01:07:00,432:INFO:Total runtime is 0.03697296380996704 minutes
2024-07-19 01:07:00,434:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:00,435:INFO:Initializing create_model()
2024-07-19 01:07:00,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:00,435:INFO:Checking exceptions
2024-07-19 01:07:00,435:INFO:Importing libraries
2024-07-19 01:07:00,435:INFO:Copying training dataset
2024-07-19 01:07:00,443:INFO:Defining folds
2024-07-19 01:07:00,444:INFO:Declaring metric variables
2024-07-19 01:07:00,447:INFO:Importing untrained model
2024-07-19 01:07:00,450:INFO:Ridge Classifier Imported successfully
2024-07-19 01:07:00,455:INFO:Starting cross validation
2024-07-19 01:07:00,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:00,508:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,512:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,512:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,514:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,516:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,517:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,517:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,518:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,518:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,520:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:00,521:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:00,522:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,523:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,523:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,523:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,524:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,524:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,525:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:00,528:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:00,528:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,530:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,532:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,533:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,534:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,536:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,537:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,537:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,539:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,540:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:00,541:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,541:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,541:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:00,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:00,545:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:00,558:INFO:Calculating mean and std
2024-07-19 01:07:00,560:INFO:Creating metrics dataframe
2024-07-19 01:07:00,561:INFO:Uploading results into container
2024-07-19 01:07:00,562:INFO:Uploading model into container now
2024-07-19 01:07:00,562:INFO:_master_model_container: 6
2024-07-19 01:07:00,562:INFO:_display_container: 2
2024-07-19 01:07:00,562:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-19 01:07:00,562:INFO:create_model() successfully completed......................................
2024-07-19 01:07:00,697:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:00,697:INFO:Creating metrics dataframe
2024-07-19 01:07:00,703:INFO:Initializing Random Forest Classifier
2024-07-19 01:07:00,703:INFO:Total runtime is 0.04147854646046956 minutes
2024-07-19 01:07:00,706:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:00,706:INFO:Initializing create_model()
2024-07-19 01:07:00,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:00,706:INFO:Checking exceptions
2024-07-19 01:07:00,706:INFO:Importing libraries
2024-07-19 01:07:00,706:INFO:Copying training dataset
2024-07-19 01:07:00,713:INFO:Defining folds
2024-07-19 01:07:00,713:INFO:Declaring metric variables
2024-07-19 01:07:00,716:INFO:Importing untrained model
2024-07-19 01:07:00,719:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:07:00,723:INFO:Starting cross validation
2024-07-19 01:07:00,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:01,817:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,817:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,818:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,826:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,827:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,828:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,836:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,838:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,844:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,846:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,849:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,855:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,869:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,870:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,878:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,879:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,884:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,885:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,894:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,895:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,900:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,901:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,907:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,908:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,909:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,914:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,922:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,981:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,986:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:01,989:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,007:INFO:Calculating mean and std
2024-07-19 01:07:02,009:INFO:Creating metrics dataframe
2024-07-19 01:07:02,011:INFO:Uploading results into container
2024-07-19 01:07:02,011:INFO:Uploading model into container now
2024-07-19 01:07:02,011:INFO:_master_model_container: 7
2024-07-19 01:07:02,011:INFO:_display_container: 2
2024-07-19 01:07:02,012:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:07:02,012:INFO:create_model() successfully completed......................................
2024-07-19 01:07:02,139:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:02,139:INFO:Creating metrics dataframe
2024-07-19 01:07:02,145:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:07:02,145:INFO:Total runtime is 0.06551793018976848 minutes
2024-07-19 01:07:02,148:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:02,148:INFO:Initializing create_model()
2024-07-19 01:07:02,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:02,148:INFO:Checking exceptions
2024-07-19 01:07:02,148:INFO:Importing libraries
2024-07-19 01:07:02,148:INFO:Copying training dataset
2024-07-19 01:07:02,154:INFO:Defining folds
2024-07-19 01:07:02,154:INFO:Declaring metric variables
2024-07-19 01:07:02,157:INFO:Importing untrained model
2024-07-19 01:07:02,161:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:07:02,165:INFO:Starting cross validation
2024-07-19 01:07:02,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:02,215:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,222:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,225:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,226:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,228:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,228:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,230:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,232:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,232:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,236:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,237:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,237:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,239:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,239:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,240:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,244:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,245:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,247:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,248:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,249:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,250:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,253:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,253:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,255:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,256:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,259:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,261:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,263:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,264:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,268:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:02,286:INFO:Calculating mean and std
2024-07-19 01:07:02,287:INFO:Creating metrics dataframe
2024-07-19 01:07:02,290:INFO:Uploading results into container
2024-07-19 01:07:02,290:INFO:Uploading model into container now
2024-07-19 01:07:02,290:INFO:_master_model_container: 8
2024-07-19 01:07:02,290:INFO:_display_container: 2
2024-07-19 01:07:02,291:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:07:02,291:INFO:create_model() successfully completed......................................
2024-07-19 01:07:02,422:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:02,422:INFO:Creating metrics dataframe
2024-07-19 01:07:02,428:INFO:Initializing Ada Boost Classifier
2024-07-19 01:07:02,429:INFO:Total runtime is 0.07022811571757 minutes
2024-07-19 01:07:02,431:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:02,431:INFO:Initializing create_model()
2024-07-19 01:07:02,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:02,431:INFO:Checking exceptions
2024-07-19 01:07:02,431:INFO:Importing libraries
2024-07-19 01:07:02,431:INFO:Copying training dataset
2024-07-19 01:07:02,437:INFO:Defining folds
2024-07-19 01:07:02,438:INFO:Declaring metric variables
2024-07-19 01:07:02,440:INFO:Importing untrained model
2024-07-19 01:07:02,443:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:07:02,448:INFO:Starting cross validation
2024-07-19 01:07:02,449:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:02,479:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,484:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,485:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,489:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,490:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,491:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,493:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,500:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,502:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:02,507:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:07:03,063:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,068:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,071:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,071:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,074:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,075:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,078:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,079:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,080:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,081:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,085:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,086:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,087:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,090:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,091:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,091:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,096:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,097:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,101:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,102:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,102:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,106:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,107:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,113:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,117:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,121:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,137:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,141:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,145:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:03,156:INFO:Calculating mean and std
2024-07-19 01:07:03,158:INFO:Creating metrics dataframe
2024-07-19 01:07:03,159:INFO:Uploading results into container
2024-07-19 01:07:03,160:INFO:Uploading model into container now
2024-07-19 01:07:03,160:INFO:_master_model_container: 9
2024-07-19 01:07:03,160:INFO:_display_container: 2
2024-07-19 01:07:03,161:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-19 01:07:03,161:INFO:create_model() successfully completed......................................
2024-07-19 01:07:03,290:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:03,290:INFO:Creating metrics dataframe
2024-07-19 01:07:03,296:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:07:03,296:INFO:Total runtime is 0.08470633824666342 minutes
2024-07-19 01:07:03,300:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:03,300:INFO:Initializing create_model()
2024-07-19 01:07:03,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:03,300:INFO:Checking exceptions
2024-07-19 01:07:03,300:INFO:Importing libraries
2024-07-19 01:07:03,300:INFO:Copying training dataset
2024-07-19 01:07:03,306:INFO:Defining folds
2024-07-19 01:07:03,306:INFO:Declaring metric variables
2024-07-19 01:07:03,309:INFO:Importing untrained model
2024-07-19 01:07:03,312:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:07:03,316:INFO:Starting cross validation
2024-07-19 01:07:03,317:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:05,556:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,564:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,574:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,593:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,600:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,609:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,613:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,619:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,627:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,633:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,639:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,644:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,651:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,656:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,662:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,664:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,670:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,675:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,684:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,689:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,694:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,698:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,702:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,706:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,708:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,709:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,711:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,714:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,715:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,718:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,739:INFO:Calculating mean and std
2024-07-19 01:07:05,741:INFO:Creating metrics dataframe
2024-07-19 01:07:05,742:INFO:Uploading results into container
2024-07-19 01:07:05,743:INFO:Uploading model into container now
2024-07-19 01:07:05,743:INFO:_master_model_container: 10
2024-07-19 01:07:05,743:INFO:_display_container: 2
2024-07-19 01:07:05,743:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:07:05,744:INFO:create_model() successfully completed......................................
2024-07-19 01:07:05,876:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:05,876:INFO:Creating metrics dataframe
2024-07-19 01:07:05,883:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:07:05,883:INFO:Total runtime is 0.1278160611788432 minutes
2024-07-19 01:07:05,885:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:05,885:INFO:Initializing create_model()
2024-07-19 01:07:05,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:05,885:INFO:Checking exceptions
2024-07-19 01:07:05,885:INFO:Importing libraries
2024-07-19 01:07:05,885:INFO:Copying training dataset
2024-07-19 01:07:05,893:INFO:Defining folds
2024-07-19 01:07:05,893:INFO:Declaring metric variables
2024-07-19 01:07:05,896:INFO:Importing untrained model
2024-07-19 01:07:05,899:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:07:05,903:INFO:Starting cross validation
2024-07-19 01:07:05,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:05,961:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,962:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,964:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,965:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,967:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,968:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,969:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,970:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:05,971:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,971:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,972:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:05,973:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,973:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,974:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,974:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,976:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:05,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,979:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,981:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,982:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,984:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,985:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,985:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:05,986:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,987:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,988:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,988:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,992:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,994:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,995:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,997:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:05,997:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:05,999:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,021:INFO:Calculating mean and std
2024-07-19 01:07:06,022:INFO:Creating metrics dataframe
2024-07-19 01:07:06,023:INFO:Uploading results into container
2024-07-19 01:07:06,024:INFO:Uploading model into container now
2024-07-19 01:07:06,024:INFO:_master_model_container: 11
2024-07-19 01:07:06,025:INFO:_display_container: 2
2024-07-19 01:07:06,025:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:07:06,025:INFO:create_model() successfully completed......................................
2024-07-19 01:07:06,157:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:06,157:INFO:Creating metrics dataframe
2024-07-19 01:07:06,165:INFO:Initializing Extra Trees Classifier
2024-07-19 01:07:06,165:INFO:Total runtime is 0.13251099983851117 minutes
2024-07-19 01:07:06,167:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:06,167:INFO:Initializing create_model()
2024-07-19 01:07:06,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:06,167:INFO:Checking exceptions
2024-07-19 01:07:06,168:INFO:Importing libraries
2024-07-19 01:07:06,168:INFO:Copying training dataset
2024-07-19 01:07:06,173:INFO:Defining folds
2024-07-19 01:07:06,174:INFO:Declaring metric variables
2024-07-19 01:07:06,176:INFO:Importing untrained model
2024-07-19 01:07:06,179:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:07:06,185:INFO:Starting cross validation
2024-07-19 01:07:06,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:06,856:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,865:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,869:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,872:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,874:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,885:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,887:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,887:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,887:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,897:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,897:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,906:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,908:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,908:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,931:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,931:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,932:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,935:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,935:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,935:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,936:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,940:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,940:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,940:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,941:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,941:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,950:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:06,968:INFO:Calculating mean and std
2024-07-19 01:07:06,969:INFO:Creating metrics dataframe
2024-07-19 01:07:06,971:INFO:Uploading results into container
2024-07-19 01:07:06,971:INFO:Uploading model into container now
2024-07-19 01:07:06,972:INFO:_master_model_container: 12
2024-07-19 01:07:06,972:INFO:_display_container: 2
2024-07-19 01:07:06,972:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-19 01:07:06,972:INFO:create_model() successfully completed......................................
2024-07-19 01:07:07,106:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:07,106:INFO:Creating metrics dataframe
2024-07-19 01:07:07,112:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:07:07,112:INFO:Total runtime is 0.14829934438069664 minutes
2024-07-19 01:07:07,114:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:07,116:INFO:Initializing create_model()
2024-07-19 01:07:07,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:07,116:INFO:Checking exceptions
2024-07-19 01:07:07,116:INFO:Importing libraries
2024-07-19 01:07:07,116:INFO:Copying training dataset
2024-07-19 01:07:07,129:INFO:Defining folds
2024-07-19 01:07:07,129:INFO:Declaring metric variables
2024-07-19 01:07:07,142:INFO:Importing untrained model
2024-07-19 01:07:07,152:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:07:07,158:INFO:Starting cross validation
2024-07-19 01:07:07,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:07,503:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,505:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,505:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,509:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,513:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,514:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,514:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,514:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,518:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,519:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,522:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,522:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,524:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,526:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,529:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,530:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,532:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,538:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,542:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,547:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,547:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,552:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,552:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,553:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,556:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,558:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,563:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,667:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,671:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,674:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:07,684:INFO:Calculating mean and std
2024-07-19 01:07:07,686:INFO:Creating metrics dataframe
2024-07-19 01:07:07,688:INFO:Uploading results into container
2024-07-19 01:07:07,688:INFO:Uploading model into container now
2024-07-19 01:07:07,689:INFO:_master_model_container: 13
2024-07-19 01:07:07,689:INFO:_display_container: 2
2024-07-19 01:07:07,689:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:07:07,689:INFO:create_model() successfully completed......................................
2024-07-19 01:07:07,819:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:07,819:INFO:Creating metrics dataframe
2024-07-19 01:07:07,826:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:07:07,826:INFO:Total runtime is 0.1601991653442383 minutes
2024-07-19 01:07:07,828:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:07,828:INFO:Initializing create_model()
2024-07-19 01:07:07,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:07,828:INFO:Checking exceptions
2024-07-19 01:07:07,828:INFO:Importing libraries
2024-07-19 01:07:07,828:INFO:Copying training dataset
2024-07-19 01:07:07,835:INFO:Defining folds
2024-07-19 01:07:07,835:INFO:Declaring metric variables
2024-07-19 01:07:07,839:INFO:Importing untrained model
2024-07-19 01:07:07,841:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:07:07,846:INFO:Starting cross validation
2024-07-19 01:07:07,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:08,685:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,693:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,695:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,702:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,702:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,704:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,707:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,710:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,712:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,716:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,719:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,725:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,758:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,759:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,767:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,768:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,773:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,776:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,777:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,782:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,790:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,808:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,816:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,825:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,831:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,839:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,847:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,895:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,903:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,912:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:08,929:INFO:Calculating mean and std
2024-07-19 01:07:08,931:INFO:Creating metrics dataframe
2024-07-19 01:07:08,934:INFO:Uploading results into container
2024-07-19 01:07:08,935:INFO:Uploading model into container now
2024-07-19 01:07:08,935:INFO:_master_model_container: 14
2024-07-19 01:07:08,935:INFO:_display_container: 2
2024-07-19 01:07:08,936:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:07:08,936:INFO:create_model() successfully completed......................................
2024-07-19 01:07:09,089:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:09,090:INFO:Creating metrics dataframe
2024-07-19 01:07:09,098:INFO:Initializing CatBoost Classifier
2024-07-19 01:07:09,098:INFO:Total runtime is 0.1814063906669617 minutes
2024-07-19 01:07:09,101:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:09,101:INFO:Initializing create_model()
2024-07-19 01:07:09,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:09,101:INFO:Checking exceptions
2024-07-19 01:07:09,101:INFO:Importing libraries
2024-07-19 01:07:09,101:INFO:Copying training dataset
2024-07-19 01:07:09,108:INFO:Defining folds
2024-07-19 01:07:09,108:INFO:Declaring metric variables
2024-07-19 01:07:09,111:INFO:Importing untrained model
2024-07-19 01:07:09,114:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:07:09,119:INFO:Starting cross validation
2024-07-19 01:07:09,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:23,737:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:23,747:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:23,758:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:23,853:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:23,863:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:23,869:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,198:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,198:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,213:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,297:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,313:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,329:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,579:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,601:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,601:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,694:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,716:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,716:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,726:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,735:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,747:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,791:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,792:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,797:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,798:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,803:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,805:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,810:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,818:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,824:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:24,837:INFO:Calculating mean and std
2024-07-19 01:07:24,838:INFO:Creating metrics dataframe
2024-07-19 01:07:24,840:INFO:Uploading results into container
2024-07-19 01:07:24,840:INFO:Uploading model into container now
2024-07-19 01:07:24,841:INFO:_master_model_container: 15
2024-07-19 01:07:24,841:INFO:_display_container: 2
2024-07-19 01:07:24,841:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BB5EDB10>
2024-07-19 01:07:24,841:INFO:create_model() successfully completed......................................
2024-07-19 01:07:24,981:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:24,981:INFO:Creating metrics dataframe
2024-07-19 01:07:24,990:INFO:Initializing Dummy Classifier
2024-07-19 01:07:24,990:INFO:Total runtime is 0.4462680737177531 minutes
2024-07-19 01:07:24,993:INFO:SubProcess create_model() called ==================================
2024-07-19 01:07:24,993:INFO:Initializing create_model()
2024-07-19 01:07:24,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BAF968C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:24,993:INFO:Checking exceptions
2024-07-19 01:07:24,993:INFO:Importing libraries
2024-07-19 01:07:24,993:INFO:Copying training dataset
2024-07-19 01:07:25,001:INFO:Defining folds
2024-07-19 01:07:25,001:INFO:Declaring metric variables
2024-07-19 01:07:25,004:INFO:Importing untrained model
2024-07-19 01:07:25,008:INFO:Dummy Classifier Imported successfully
2024-07-19 01:07:25,014:INFO:Starting cross validation
2024-07-19 01:07:25,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:07:25,071:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,078:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,083:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,083:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,084:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,085:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,086:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,092:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,092:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,094:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,094:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,098:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,098:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,099:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,099:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,099:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,102:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,102:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,103:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,103:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,103:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,103:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,106:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,106:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,107:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,107:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,108:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,111:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,111:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,111:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,115:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:07:25,116:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,117:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,120:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'SI') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-19 01:07:25,132:INFO:Calculating mean and std
2024-07-19 01:07:25,133:INFO:Creating metrics dataframe
2024-07-19 01:07:25,135:INFO:Uploading results into container
2024-07-19 01:07:25,135:INFO:Uploading model into container now
2024-07-19 01:07:25,135:INFO:_master_model_container: 16
2024-07-19 01:07:25,136:INFO:_display_container: 2
2024-07-19 01:07:25,136:INFO:DummyClassifier(constant=None, random_state=85, strategy='prior')
2024-07-19 01:07:25,137:INFO:create_model() successfully completed......................................
2024-07-19 01:07:25,277:INFO:SubProcess create_model() end ==================================
2024-07-19 01:07:25,277:INFO:Creating metrics dataframe
2024-07-19 01:07:25,285:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-19 01:07:25,291:INFO:Initializing create_model()
2024-07-19 01:07:25,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB7BB820>, estimator=<catboost.core.CatBoostClassifier object at 0x00000191BB5EDB10>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:07:25,291:INFO:Checking exceptions
2024-07-19 01:07:25,294:INFO:Importing libraries
2024-07-19 01:07:25,294:INFO:Copying training dataset
2024-07-19 01:07:25,299:INFO:Defining folds
2024-07-19 01:07:25,299:INFO:Declaring metric variables
2024-07-19 01:07:25,299:INFO:Importing untrained model
2024-07-19 01:07:25,299:INFO:Declaring custom model
2024-07-19 01:07:25,300:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:07:25,300:INFO:Cross validation set to False
2024-07-19 01:07:25,300:INFO:Fitting Model
2024-07-19 01:07:28,679:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BB5EF490>
2024-07-19 01:07:28,679:INFO:create_model() successfully completed......................................
2024-07-19 01:07:28,836:INFO:_master_model_container: 16
2024-07-19 01:07:28,836:INFO:_display_container: 2
2024-07-19 01:07:28,837:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BB5EF490>
2024-07-19 01:07:28,837:INFO:compare_models() successfully completed......................................
2024-07-19 01:09:24,163:INFO:PyCaret ClassificationExperiment
2024-07-19 01:09:24,163:INFO:Logging name: clf-default-name
2024-07-19 01:09:24,164:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:09:24,164:INFO:version 3.3.2
2024-07-19 01:09:24,164:INFO:Initializing setup()
2024-07-19 01:09:24,164:INFO:self.USI: 507a
2024-07-19 01:09:24,164:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:09:24,164:INFO:Checking environment
2024-07-19 01:09:24,164:INFO:python_version: 3.10.11
2024-07-19 01:09:24,164:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:09:24,164:INFO:machine: AMD64
2024-07-19 01:09:24,164:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:09:24,170:INFO:Memory: svmem(total=16516247552, available=1207422976, percent=92.7, used=15308824576, free=1207422976)
2024-07-19 01:09:24,170:INFO:Physical Core: 8
2024-07-19 01:09:24,170:INFO:Logical Core: 16
2024-07-19 01:09:24,170:INFO:Checking libraries
2024-07-19 01:09:24,170:INFO:System:
2024-07-19 01:09:24,170:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:09:24,170:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:09:24,170:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:09:24,170:INFO:PyCaret required dependencies:
2024-07-19 01:09:24,171:INFO:                 pip: 24.1.2
2024-07-19 01:09:24,171:INFO:          setuptools: 65.5.0
2024-07-19 01:09:24,171:INFO:             pycaret: 3.3.2
2024-07-19 01:09:24,171:INFO:             IPython: 8.21.0
2024-07-19 01:09:24,171:INFO:          ipywidgets: 8.1.3
2024-07-19 01:09:24,171:INFO:                tqdm: 4.66.4
2024-07-19 01:09:24,171:INFO:               numpy: 1.26.4
2024-07-19 01:09:24,171:INFO:              pandas: 2.1.4
2024-07-19 01:09:24,171:INFO:              jinja2: 3.1.2
2024-07-19 01:09:24,171:INFO:               scipy: 1.11.4
2024-07-19 01:09:24,171:INFO:              joblib: 1.3.2
2024-07-19 01:09:24,171:INFO:             sklearn: 1.4.2
2024-07-19 01:09:24,171:INFO:                pyod: 2.0.1
2024-07-19 01:09:24,171:INFO:            imblearn: 0.12.2
2024-07-19 01:09:24,171:INFO:   category_encoders: 2.6.3
2024-07-19 01:09:24,171:INFO:            lightgbm: 4.3.0
2024-07-19 01:09:24,171:INFO:               numba: 0.60.0
2024-07-19 01:09:24,171:INFO:            requests: 2.32.3
2024-07-19 01:09:24,171:INFO:          matplotlib: 3.8.3
2024-07-19 01:09:24,171:INFO:          scikitplot: 0.3.7
2024-07-19 01:09:24,171:INFO:         yellowbrick: 1.5
2024-07-19 01:09:24,171:INFO:              plotly: 5.20.0
2024-07-19 01:09:24,171:INFO:    plotly-resampler: Not installed
2024-07-19 01:09:24,171:INFO:             kaleido: 0.2.1
2024-07-19 01:09:24,171:INFO:           schemdraw: 0.15
2024-07-19 01:09:24,171:INFO:         statsmodels: 0.14.2
2024-07-19 01:09:24,171:INFO:              sktime: 0.26.0
2024-07-19 01:09:24,171:INFO:               tbats: 1.1.3
2024-07-19 01:09:24,171:INFO:            pmdarima: 2.0.4
2024-07-19 01:09:24,171:INFO:              psutil: 5.9.8
2024-07-19 01:09:24,171:INFO:          markupsafe: 2.1.3
2024-07-19 01:09:24,171:INFO:             pickle5: Not installed
2024-07-19 01:09:24,172:INFO:         cloudpickle: 3.0.0
2024-07-19 01:09:24,172:INFO:         deprecation: 2.1.0
2024-07-19 01:09:24,172:INFO:              xxhash: 3.4.1
2024-07-19 01:09:24,172:INFO:           wurlitzer: Not installed
2024-07-19 01:09:24,172:INFO:PyCaret optional dependencies:
2024-07-19 01:09:24,172:INFO:                shap: 0.44.1
2024-07-19 01:09:24,172:INFO:           interpret: 0.6.2
2024-07-19 01:09:24,172:INFO:                umap: 0.5.6
2024-07-19 01:09:24,172:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:09:24,172:INFO:  explainerdashboard: Not installed
2024-07-19 01:09:24,172:INFO:             autoviz: Not installed
2024-07-19 01:09:24,172:INFO:           fairlearn: 0.7.0
2024-07-19 01:09:24,172:INFO:          deepchecks: Not installed
2024-07-19 01:09:24,172:INFO:             xgboost: 2.0.3
2024-07-19 01:09:24,172:INFO:            catboost: 1.2.5
2024-07-19 01:09:24,172:INFO:              kmodes: 0.12.2
2024-07-19 01:09:24,172:INFO:             mlxtend: 0.23.1
2024-07-19 01:09:24,172:INFO:       statsforecast: Not installed
2024-07-19 01:09:24,172:INFO:        tune_sklearn: Not installed
2024-07-19 01:09:24,172:INFO:                 ray: Not installed
2024-07-19 01:09:24,172:INFO:            hyperopt: 0.2.7
2024-07-19 01:09:24,172:INFO:              optuna: 3.6.1
2024-07-19 01:09:24,172:INFO:               skopt: 0.10.2
2024-07-19 01:09:24,172:INFO:              mlflow: Not installed
2024-07-19 01:09:24,172:INFO:              gradio: Not installed
2024-07-19 01:09:24,172:INFO:             fastapi: Not installed
2024-07-19 01:09:24,172:INFO:             uvicorn: 0.30.1
2024-07-19 01:09:24,172:INFO:              m2cgen: 0.10.0
2024-07-19 01:09:24,172:INFO:           evidently: Not installed
2024-07-19 01:09:24,172:INFO:               fugue: Not installed
2024-07-19 01:09:24,172:INFO:           streamlit: Not installed
2024-07-19 01:09:24,172:INFO:             prophet: Not installed
2024-07-19 01:09:24,172:INFO:None
2024-07-19 01:09:24,172:INFO:Set up data.
2024-07-19 01:09:24,193:INFO:Set up folding strategy.
2024-07-19 01:09:24,193:INFO:Set up train/test split.
2024-07-19 01:09:24,208:INFO:Set up index.
2024-07-19 01:09:24,208:INFO:Assigning column types.
2024-07-19 01:09:24,221:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:09:24,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:09:24,254:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:09:24,274:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:09:24,276:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:09:24,308:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:09:24,308:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:09:24,329:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:09:24,331:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:09:24,331:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:09:24,363:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:09:24,382:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:09:24,385:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:09:24,418:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:09:24,437:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:09:24,439:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:09:24,440:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:09:24,493:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:09:24,495:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:09:24,549:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:09:24,551:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:09:24,552:INFO:Preparing preprocessing pipeline...
2024-07-19 01:09:24,554:INFO:Set up simple imputation.
2024-07-19 01:09:24,560:INFO:Set up encoding of categorical features.
2024-07-19 01:09:24,561:INFO:Set up column name cleaning.
2024-07-19 01:09:24,699:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:09:24,704:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'Index',
                                             'Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Sent tnx', 'Received Tnx',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To A...
                                                                    'most sent '
                                                                    'token '
                                                                    'type',
                                                                    ' '
                                                                    'ERC20_most_rec_token_type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:09:24,704:INFO:Creating final display dataframe.
2024-07-19 01:09:25,090:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9841, 51)
4        Transformed data shape        (9841, 51)
5   Transformed train set shape        (6888, 51)
6    Transformed test set shape        (2953, 51)
7              Numeric features                47
8          Categorical features                 3
9      Rows with missing values             27.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              507a
2024-07-19 01:09:25,148:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:09:25,150:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:09:25,202:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:09:25,204:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:09:25,205:INFO:setup() successfully completed in 1.04s...............
2024-07-19 01:09:25,221:INFO:Initializing compare_models()
2024-07-19 01:09:25,221:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:09:25,221:INFO:Checking exceptions
2024-07-19 01:09:25,231:INFO:Preparing display monitor
2024-07-19 01:09:25,247:INFO:Initializing Logistic Regression
2024-07-19 01:09:25,247:INFO:Total runtime is 0.0 minutes
2024-07-19 01:09:25,250:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:25,251:INFO:Initializing create_model()
2024-07-19 01:09:25,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:25,251:INFO:Checking exceptions
2024-07-19 01:09:25,251:INFO:Importing libraries
2024-07-19 01:09:25,251:INFO:Copying training dataset
2024-07-19 01:09:25,266:INFO:Defining folds
2024-07-19 01:09:25,267:INFO:Declaring metric variables
2024-07-19 01:09:25,269:INFO:Importing untrained model
2024-07-19 01:09:25,273:INFO:Logistic Regression Imported successfully
2024-07-19 01:09:25,277:INFO:Starting cross validation
2024-07-19 01:09:25,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:27,518:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:27,676:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:27,692:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:27,829:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:27,917:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:27,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:27,994:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:28,027:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:28,052:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:28,093:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:09:28,142:INFO:Calculating mean and std
2024-07-19 01:09:28,144:INFO:Creating metrics dataframe
2024-07-19 01:09:28,146:INFO:Uploading results into container
2024-07-19 01:09:28,146:INFO:Uploading model into container now
2024-07-19 01:09:28,146:INFO:_master_model_container: 1
2024-07-19 01:09:28,146:INFO:_display_container: 2
2024-07-19 01:09:28,147:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:09:28,147:INFO:create_model() successfully completed......................................
2024-07-19 01:09:28,284:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:28,285:INFO:Creating metrics dataframe
2024-07-19 01:09:28,289:INFO:Initializing K Neighbors Classifier
2024-07-19 01:09:28,289:INFO:Total runtime is 0.05069947640101115 minutes
2024-07-19 01:09:28,292:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:28,292:INFO:Initializing create_model()
2024-07-19 01:09:28,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:28,292:INFO:Checking exceptions
2024-07-19 01:09:28,292:INFO:Importing libraries
2024-07-19 01:09:28,292:INFO:Copying training dataset
2024-07-19 01:09:28,307:INFO:Defining folds
2024-07-19 01:09:28,307:INFO:Declaring metric variables
2024-07-19 01:09:28,310:INFO:Importing untrained model
2024-07-19 01:09:28,314:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:09:28,318:INFO:Starting cross validation
2024-07-19 01:09:28,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:28,810:INFO:Calculating mean and std
2024-07-19 01:09:28,812:INFO:Creating metrics dataframe
2024-07-19 01:09:28,814:INFO:Uploading results into container
2024-07-19 01:09:28,815:INFO:Uploading model into container now
2024-07-19 01:09:28,815:INFO:_master_model_container: 2
2024-07-19 01:09:28,815:INFO:_display_container: 2
2024-07-19 01:09:28,816:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:09:28,816:INFO:create_model() successfully completed......................................
2024-07-19 01:09:28,962:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:28,962:INFO:Creating metrics dataframe
2024-07-19 01:09:28,967:INFO:Initializing Naive Bayes
2024-07-19 01:09:28,968:INFO:Total runtime is 0.062013908227284746 minutes
2024-07-19 01:09:28,970:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:28,970:INFO:Initializing create_model()
2024-07-19 01:09:28,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:28,970:INFO:Checking exceptions
2024-07-19 01:09:28,970:INFO:Importing libraries
2024-07-19 01:09:28,970:INFO:Copying training dataset
2024-07-19 01:09:28,990:INFO:Defining folds
2024-07-19 01:09:28,990:INFO:Declaring metric variables
2024-07-19 01:09:28,994:INFO:Importing untrained model
2024-07-19 01:09:28,999:INFO:Naive Bayes Imported successfully
2024-07-19 01:09:29,005:INFO:Starting cross validation
2024-07-19 01:09:29,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:29,417:INFO:Calculating mean and std
2024-07-19 01:09:29,418:INFO:Creating metrics dataframe
2024-07-19 01:09:29,420:INFO:Uploading results into container
2024-07-19 01:09:29,420:INFO:Uploading model into container now
2024-07-19 01:09:29,420:INFO:_master_model_container: 3
2024-07-19 01:09:29,420:INFO:_display_container: 2
2024-07-19 01:09:29,421:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:09:29,421:INFO:create_model() successfully completed......................................
2024-07-19 01:09:29,557:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:29,557:INFO:Creating metrics dataframe
2024-07-19 01:09:29,563:INFO:Initializing Decision Tree Classifier
2024-07-19 01:09:29,563:INFO:Total runtime is 0.0719303290049235 minutes
2024-07-19 01:09:29,566:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:29,566:INFO:Initializing create_model()
2024-07-19 01:09:29,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:29,566:INFO:Checking exceptions
2024-07-19 01:09:29,566:INFO:Importing libraries
2024-07-19 01:09:29,566:INFO:Copying training dataset
2024-07-19 01:09:29,581:INFO:Defining folds
2024-07-19 01:09:29,581:INFO:Declaring metric variables
2024-07-19 01:09:29,585:INFO:Importing untrained model
2024-07-19 01:09:29,586:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:09:29,592:INFO:Starting cross validation
2024-07-19 01:09:29,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:29,858:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:29,862:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:29,875:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:29,884:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:29,896:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:29,906:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:29,938:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:29,941:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:30,029:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:30,038:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:30,058:INFO:Calculating mean and std
2024-07-19 01:09:30,060:INFO:Creating metrics dataframe
2024-07-19 01:09:30,061:INFO:Uploading results into container
2024-07-19 01:09:30,062:INFO:Uploading model into container now
2024-07-19 01:09:30,062:INFO:_master_model_container: 4
2024-07-19 01:09:30,062:INFO:_display_container: 2
2024-07-19 01:09:30,063:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-19 01:09:30,063:INFO:create_model() successfully completed......................................
2024-07-19 01:09:30,200:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:30,200:INFO:Creating metrics dataframe
2024-07-19 01:09:30,206:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:09:30,206:INFO:Total runtime is 0.08263587951660155 minutes
2024-07-19 01:09:30,208:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:30,208:INFO:Initializing create_model()
2024-07-19 01:09:30,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:30,208:INFO:Checking exceptions
2024-07-19 01:09:30,208:INFO:Importing libraries
2024-07-19 01:09:30,208:INFO:Copying training dataset
2024-07-19 01:09:30,223:INFO:Defining folds
2024-07-19 01:09:30,223:INFO:Declaring metric variables
2024-07-19 01:09:30,227:INFO:Importing untrained model
2024-07-19 01:09:30,229:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:09:30,235:INFO:Starting cross validation
2024-07-19 01:09:30,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:30,602:INFO:Calculating mean and std
2024-07-19 01:09:30,603:INFO:Creating metrics dataframe
2024-07-19 01:09:30,605:INFO:Uploading results into container
2024-07-19 01:09:30,605:INFO:Uploading model into container now
2024-07-19 01:09:30,605:INFO:_master_model_container: 5
2024-07-19 01:09:30,606:INFO:_display_container: 2
2024-07-19 01:09:30,606:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:09:30,606:INFO:create_model() successfully completed......................................
2024-07-19 01:09:30,737:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:30,738:INFO:Creating metrics dataframe
2024-07-19 01:09:30,743:INFO:Initializing Ridge Classifier
2024-07-19 01:09:30,743:INFO:Total runtime is 0.0915909965833028 minutes
2024-07-19 01:09:30,745:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:30,746:INFO:Initializing create_model()
2024-07-19 01:09:30,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:30,746:INFO:Checking exceptions
2024-07-19 01:09:30,746:INFO:Importing libraries
2024-07-19 01:09:30,746:INFO:Copying training dataset
2024-07-19 01:09:30,763:INFO:Defining folds
2024-07-19 01:09:30,763:INFO:Declaring metric variables
2024-07-19 01:09:30,765:INFO:Importing untrained model
2024-07-19 01:09:30,768:INFO:Ridge Classifier Imported successfully
2024-07-19 01:09:30,772:INFO:Starting cross validation
2024-07-19 01:09:30,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:31,018:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.47275e-21): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,032:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95656e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,042:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=3.59335e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,053:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.51911e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,060:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=2.77144e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,073:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95608e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,078:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95661e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,084:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,086:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,086:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.95627e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,113:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,119:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=1.79374e-25): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2024-07-19 01:09:31,124:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,128:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,142:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:31,148:INFO:Calculating mean and std
2024-07-19 01:09:31,149:INFO:Creating metrics dataframe
2024-07-19 01:09:31,151:INFO:Uploading results into container
2024-07-19 01:09:31,151:INFO:Uploading model into container now
2024-07-19 01:09:31,152:INFO:_master_model_container: 6
2024-07-19 01:09:31,152:INFO:_display_container: 2
2024-07-19 01:09:31,152:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-19 01:09:31,152:INFO:create_model() successfully completed......................................
2024-07-19 01:09:31,293:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:31,293:INFO:Creating metrics dataframe
2024-07-19 01:09:31,300:INFO:Initializing Random Forest Classifier
2024-07-19 01:09:31,300:INFO:Total runtime is 0.10088242292404173 minutes
2024-07-19 01:09:31,303:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:31,304:INFO:Initializing create_model()
2024-07-19 01:09:31,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:31,304:INFO:Checking exceptions
2024-07-19 01:09:31,304:INFO:Importing libraries
2024-07-19 01:09:31,304:INFO:Copying training dataset
2024-07-19 01:09:31,318:INFO:Defining folds
2024-07-19 01:09:31,318:INFO:Declaring metric variables
2024-07-19 01:09:31,321:INFO:Importing untrained model
2024-07-19 01:09:31,323:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:09:31,327:INFO:Starting cross validation
2024-07-19 01:09:31,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:32,438:INFO:Calculating mean and std
2024-07-19 01:09:32,439:INFO:Creating metrics dataframe
2024-07-19 01:09:32,441:INFO:Uploading results into container
2024-07-19 01:09:32,441:INFO:Uploading model into container now
2024-07-19 01:09:32,441:INFO:_master_model_container: 7
2024-07-19 01:09:32,441:INFO:_display_container: 2
2024-07-19 01:09:32,442:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:09:32,442:INFO:create_model() successfully completed......................................
2024-07-19 01:09:32,578:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:32,578:INFO:Creating metrics dataframe
2024-07-19 01:09:32,584:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:09:32,584:INFO:Total runtime is 0.12227321465810138 minutes
2024-07-19 01:09:32,586:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:32,587:INFO:Initializing create_model()
2024-07-19 01:09:32,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:32,587:INFO:Checking exceptions
2024-07-19 01:09:32,587:INFO:Importing libraries
2024-07-19 01:09:32,587:INFO:Copying training dataset
2024-07-19 01:09:32,602:INFO:Defining folds
2024-07-19 01:09:32,602:INFO:Declaring metric variables
2024-07-19 01:09:32,605:INFO:Importing untrained model
2024-07-19 01:09:32,608:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:09:32,613:INFO:Starting cross validation
2024-07-19 01:09:32,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:32,853:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,865:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,900:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,911:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:32,932:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,934:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,938:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:32,966:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,972:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:32,978:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,985:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:32,990:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:32,993:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:32,996:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:33,000:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:09:33,017:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:33,017:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:33,022:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:33,028:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:33,045:INFO:Calculating mean and std
2024-07-19 01:09:33,047:INFO:Creating metrics dataframe
2024-07-19 01:09:33,049:INFO:Uploading results into container
2024-07-19 01:09:33,049:INFO:Uploading model into container now
2024-07-19 01:09:33,050:INFO:_master_model_container: 8
2024-07-19 01:09:33,050:INFO:_display_container: 2
2024-07-19 01:09:33,050:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:09:33,050:INFO:create_model() successfully completed......................................
2024-07-19 01:09:33,188:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:33,189:INFO:Creating metrics dataframe
2024-07-19 01:09:33,194:INFO:Initializing Ada Boost Classifier
2024-07-19 01:09:33,194:INFO:Total runtime is 0.13244648377100626 minutes
2024-07-19 01:09:33,198:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:33,198:INFO:Initializing create_model()
2024-07-19 01:09:33,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:33,198:INFO:Checking exceptions
2024-07-19 01:09:33,198:INFO:Importing libraries
2024-07-19 01:09:33,198:INFO:Copying training dataset
2024-07-19 01:09:33,213:INFO:Defining folds
2024-07-19 01:09:33,213:INFO:Declaring metric variables
2024-07-19 01:09:33,216:INFO:Importing untrained model
2024-07-19 01:09:33,219:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:09:33,224:INFO:Starting cross validation
2024-07-19 01:09:33,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:33,417:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,439:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,452:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,457:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,464:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,496:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,528:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,550:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,553:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,560:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:09:33,604:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:33,613:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:33,624:INFO:Calculating mean and std
2024-07-19 01:09:33,625:INFO:Creating metrics dataframe
2024-07-19 01:09:33,626:INFO:Uploading results into container
2024-07-19 01:09:33,628:INFO:Uploading model into container now
2024-07-19 01:09:33,628:INFO:_master_model_container: 9
2024-07-19 01:09:33,628:INFO:_display_container: 2
2024-07-19 01:09:33,629:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-19 01:09:33,629:INFO:create_model() successfully completed......................................
2024-07-19 01:09:33,767:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:33,767:INFO:Creating metrics dataframe
2024-07-19 01:09:33,773:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:09:33,773:INFO:Total runtime is 0.14209241867065428 minutes
2024-07-19 01:09:33,776:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:33,776:INFO:Initializing create_model()
2024-07-19 01:09:33,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:33,776:INFO:Checking exceptions
2024-07-19 01:09:33,776:INFO:Importing libraries
2024-07-19 01:09:33,776:INFO:Copying training dataset
2024-07-19 01:09:33,791:INFO:Defining folds
2024-07-19 01:09:33,791:INFO:Declaring metric variables
2024-07-19 01:09:33,795:INFO:Importing untrained model
2024-07-19 01:09:33,798:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:09:33,803:INFO:Starting cross validation
2024-07-19 01:09:33,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:35,643:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,657:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,658:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,687:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,728:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,736:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,747:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,756:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,760:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,770:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:35,785:INFO:Calculating mean and std
2024-07-19 01:09:35,786:INFO:Creating metrics dataframe
2024-07-19 01:09:35,788:INFO:Uploading results into container
2024-07-19 01:09:35,789:INFO:Uploading model into container now
2024-07-19 01:09:35,790:INFO:_master_model_container: 10
2024-07-19 01:09:35,790:INFO:_display_container: 2
2024-07-19 01:09:35,790:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:09:35,790:INFO:create_model() successfully completed......................................
2024-07-19 01:09:35,936:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:35,937:INFO:Creating metrics dataframe
2024-07-19 01:09:35,943:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:09:35,943:INFO:Total runtime is 0.1782659331957499 minutes
2024-07-19 01:09:35,945:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:35,945:INFO:Initializing create_model()
2024-07-19 01:09:35,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:35,945:INFO:Checking exceptions
2024-07-19 01:09:35,945:INFO:Importing libraries
2024-07-19 01:09:35,945:INFO:Copying training dataset
2024-07-19 01:09:35,975:INFO:Defining folds
2024-07-19 01:09:35,976:INFO:Declaring metric variables
2024-07-19 01:09:35,981:INFO:Importing untrained model
2024-07-19 01:09:35,986:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:09:35,994:INFO:Starting cross validation
2024-07-19 01:09:35,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:36,333:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,351:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,353:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,359:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,374:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,396:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,399:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,403:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,413:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,432:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:36,445:INFO:Calculating mean and std
2024-07-19 01:09:36,448:INFO:Creating metrics dataframe
2024-07-19 01:09:36,449:INFO:Uploading results into container
2024-07-19 01:09:36,450:INFO:Uploading model into container now
2024-07-19 01:09:36,450:INFO:_master_model_container: 11
2024-07-19 01:09:36,450:INFO:_display_container: 2
2024-07-19 01:09:36,450:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:09:36,451:INFO:create_model() successfully completed......................................
2024-07-19 01:09:36,585:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:36,585:INFO:Creating metrics dataframe
2024-07-19 01:09:36,591:INFO:Initializing Extra Trees Classifier
2024-07-19 01:09:36,591:INFO:Total runtime is 0.18905919392903645 minutes
2024-07-19 01:09:36,595:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:36,595:INFO:Initializing create_model()
2024-07-19 01:09:36,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:36,595:INFO:Checking exceptions
2024-07-19 01:09:36,595:INFO:Importing libraries
2024-07-19 01:09:36,595:INFO:Copying training dataset
2024-07-19 01:09:36,609:INFO:Defining folds
2024-07-19 01:09:36,609:INFO:Declaring metric variables
2024-07-19 01:09:36,612:INFO:Importing untrained model
2024-07-19 01:09:36,615:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:09:36,620:INFO:Starting cross validation
2024-07-19 01:09:36,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:37,486:INFO:Calculating mean and std
2024-07-19 01:09:37,488:INFO:Creating metrics dataframe
2024-07-19 01:09:37,489:INFO:Uploading results into container
2024-07-19 01:09:37,489:INFO:Uploading model into container now
2024-07-19 01:09:37,490:INFO:_master_model_container: 12
2024-07-19 01:09:37,490:INFO:_display_container: 2
2024-07-19 01:09:37,490:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-19 01:09:37,490:INFO:create_model() successfully completed......................................
2024-07-19 01:09:37,627:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:37,627:INFO:Creating metrics dataframe
2024-07-19 01:09:37,635:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:09:37,635:INFO:Total runtime is 0.20645455519358316 minutes
2024-07-19 01:09:37,637:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:37,638:INFO:Initializing create_model()
2024-07-19 01:09:37,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:37,638:INFO:Checking exceptions
2024-07-19 01:09:37,638:INFO:Importing libraries
2024-07-19 01:09:37,638:INFO:Copying training dataset
2024-07-19 01:09:37,654:INFO:Defining folds
2024-07-19 01:09:37,654:INFO:Declaring metric variables
2024-07-19 01:09:37,657:INFO:Importing untrained model
2024-07-19 01:09:37,659:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:09:37,663:INFO:Starting cross validation
2024-07-19 01:09:37,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:38,117:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,123:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,129:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,137:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,145:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,160:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,170:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,172:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,291:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,300:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:38,312:INFO:Calculating mean and std
2024-07-19 01:09:38,314:INFO:Creating metrics dataframe
2024-07-19 01:09:38,316:INFO:Uploading results into container
2024-07-19 01:09:38,318:INFO:Uploading model into container now
2024-07-19 01:09:38,318:INFO:_master_model_container: 13
2024-07-19 01:09:38,318:INFO:_display_container: 2
2024-07-19 01:09:38,319:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:09:38,319:INFO:create_model() successfully completed......................................
2024-07-19 01:09:38,451:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:38,452:INFO:Creating metrics dataframe
2024-07-19 01:09:38,459:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:09:38,459:INFO:Total runtime is 0.2201950470606486 minutes
2024-07-19 01:09:38,462:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:38,462:INFO:Initializing create_model()
2024-07-19 01:09:38,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:38,463:INFO:Checking exceptions
2024-07-19 01:09:38,463:INFO:Importing libraries
2024-07-19 01:09:38,463:INFO:Copying training dataset
2024-07-19 01:09:38,478:INFO:Defining folds
2024-07-19 01:09:38,478:INFO:Declaring metric variables
2024-07-19 01:09:38,482:INFO:Importing untrained model
2024-07-19 01:09:38,485:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:09:38,490:INFO:Starting cross validation
2024-07-19 01:09:38,491:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:09:39,209:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,235:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,252:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,282:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,291:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,313:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,337:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,363:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,367:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,459:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:09:39,476:INFO:Calculating mean and std
2024-07-19 01:09:39,478:INFO:Creating metrics dataframe
2024-07-19 01:09:39,481:INFO:Uploading results into container
2024-07-19 01:09:39,481:INFO:Uploading model into container now
2024-07-19 01:09:39,482:INFO:_master_model_container: 14
2024-07-19 01:09:39,482:INFO:_display_container: 2
2024-07-19 01:09:39,483:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:09:39,483:INFO:create_model() successfully completed......................................
2024-07-19 01:09:39,634:INFO:SubProcess create_model() end ==================================
2024-07-19 01:09:39,634:INFO:Creating metrics dataframe
2024-07-19 01:09:39,642:INFO:Initializing CatBoost Classifier
2024-07-19 01:09:39,642:INFO:Total runtime is 0.23990130027135215 minutes
2024-07-19 01:09:39,644:INFO:SubProcess create_model() called ==================================
2024-07-19 01:09:39,644:INFO:Initializing create_model()
2024-07-19 01:09:39,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:09:39,644:INFO:Checking exceptions
2024-07-19 01:09:39,644:INFO:Importing libraries
2024-07-19 01:09:39,644:INFO:Copying training dataset
2024-07-19 01:09:39,659:INFO:Defining folds
2024-07-19 01:09:39,659:INFO:Declaring metric variables
2024-07-19 01:09:39,663:INFO:Importing untrained model
2024-07-19 01:09:39,665:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:09:39,671:INFO:Starting cross validation
2024-07-19 01:09:39,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:06,299:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:06,606:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:06,622:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:06,675:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:06,721:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:06,760:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:06,790:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:06,974:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,098:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,122:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,130:INFO:Calculating mean and std
2024-07-19 01:10:07,131:INFO:Creating metrics dataframe
2024-07-19 01:10:07,133:INFO:Uploading results into container
2024-07-19 01:10:07,133:INFO:Uploading model into container now
2024-07-19 01:10:07,134:INFO:_master_model_container: 15
2024-07-19 01:10:07,134:INFO:_display_container: 2
2024-07-19 01:10:07,134:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BB85C970>
2024-07-19 01:10:07,134:INFO:create_model() successfully completed......................................
2024-07-19 01:10:07,282:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:07,282:INFO:Creating metrics dataframe
2024-07-19 01:10:07,290:INFO:Initializing Dummy Classifier
2024-07-19 01:10:07,290:INFO:Total runtime is 0.700701916217804 minutes
2024-07-19 01:10:07,293:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:07,293:INFO:Initializing create_model()
2024-07-19 01:10:07,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCCEDD80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:07,293:INFO:Checking exceptions
2024-07-19 01:10:07,293:INFO:Importing libraries
2024-07-19 01:10:07,293:INFO:Copying training dataset
2024-07-19 01:10:07,309:INFO:Defining folds
2024-07-19 01:10:07,309:INFO:Declaring metric variables
2024-07-19 01:10:07,312:INFO:Importing untrained model
2024-07-19 01:10:07,317:INFO:Dummy Classifier Imported successfully
2024-07-19 01:10:07,323:INFO:Starting cross validation
2024-07-19 01:10:07,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:07,605:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,624:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,626:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,644:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,645:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,668:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,673:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,677:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,692:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,697:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:07,705:INFO:Calculating mean and std
2024-07-19 01:10:07,706:INFO:Creating metrics dataframe
2024-07-19 01:10:07,709:INFO:Uploading results into container
2024-07-19 01:10:07,709:INFO:Uploading model into container now
2024-07-19 01:10:07,709:INFO:_master_model_container: 16
2024-07-19 01:10:07,710:INFO:_display_container: 2
2024-07-19 01:10:07,710:INFO:DummyClassifier(constant=None, random_state=85, strategy='prior')
2024-07-19 01:10:07,710:INFO:create_model() successfully completed......................................
2024-07-19 01:10:07,848:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:07,848:INFO:Creating metrics dataframe
2024-07-19 01:10:07,857:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-19 01:10:07,866:INFO:Initializing create_model()
2024-07-19 01:10:07,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BCCEDB40>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:07,866:INFO:Checking exceptions
2024-07-19 01:10:07,868:INFO:Importing libraries
2024-07-19 01:10:07,868:INFO:Copying training dataset
2024-07-19 01:10:07,885:INFO:Defining folds
2024-07-19 01:10:07,885:INFO:Declaring metric variables
2024-07-19 01:10:07,885:INFO:Importing untrained model
2024-07-19 01:10:07,885:INFO:Declaring custom model
2024-07-19 01:10:07,885:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:10:07,886:INFO:Cross validation set to False
2024-07-19 01:10:07,886:INFO:Fitting Model
2024-07-19 01:10:08,130:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:10:08,132:INFO:create_model() successfully completed......................................
2024-07-19 01:10:08,283:INFO:_master_model_container: 16
2024-07-19 01:10:08,284:INFO:_display_container: 2
2024-07-19 01:10:08,284:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:10:08,284:INFO:compare_models() successfully completed......................................
2024-07-19 01:10:08,365:INFO:PyCaret ClassificationExperiment
2024-07-19 01:10:08,365:INFO:Logging name: clf-default-name
2024-07-19 01:10:08,365:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:10:08,365:INFO:version 3.3.2
2024-07-19 01:10:08,365:INFO:Initializing setup()
2024-07-19 01:10:08,365:INFO:self.USI: 73e0
2024-07-19 01:10:08,365:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:10:08,365:INFO:Checking environment
2024-07-19 01:10:08,365:INFO:python_version: 3.10.11
2024-07-19 01:10:08,365:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:10:08,365:INFO:machine: AMD64
2024-07-19 01:10:08,365:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:10:08,378:INFO:Memory: svmem(total=16516247552, available=1250021376, percent=92.4, used=15266226176, free=1250021376)
2024-07-19 01:10:08,378:INFO:Physical Core: 8
2024-07-19 01:10:08,378:INFO:Logical Core: 16
2024-07-19 01:10:08,378:INFO:Checking libraries
2024-07-19 01:10:08,378:INFO:System:
2024-07-19 01:10:08,378:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:10:08,378:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:10:08,379:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:10:08,379:INFO:PyCaret required dependencies:
2024-07-19 01:10:08,379:INFO:                 pip: 24.1.2
2024-07-19 01:10:08,379:INFO:          setuptools: 65.5.0
2024-07-19 01:10:08,379:INFO:             pycaret: 3.3.2
2024-07-19 01:10:08,379:INFO:             IPython: 8.21.0
2024-07-19 01:10:08,379:INFO:          ipywidgets: 8.1.3
2024-07-19 01:10:08,379:INFO:                tqdm: 4.66.4
2024-07-19 01:10:08,379:INFO:               numpy: 1.26.4
2024-07-19 01:10:08,379:INFO:              pandas: 2.1.4
2024-07-19 01:10:08,379:INFO:              jinja2: 3.1.2
2024-07-19 01:10:08,379:INFO:               scipy: 1.11.4
2024-07-19 01:10:08,379:INFO:              joblib: 1.3.2
2024-07-19 01:10:08,379:INFO:             sklearn: 1.4.2
2024-07-19 01:10:08,379:INFO:                pyod: 2.0.1
2024-07-19 01:10:08,379:INFO:            imblearn: 0.12.2
2024-07-19 01:10:08,379:INFO:   category_encoders: 2.6.3
2024-07-19 01:10:08,379:INFO:            lightgbm: 4.3.0
2024-07-19 01:10:08,380:INFO:               numba: 0.60.0
2024-07-19 01:10:08,380:INFO:            requests: 2.32.3
2024-07-19 01:10:08,380:INFO:          matplotlib: 3.8.3
2024-07-19 01:10:08,380:INFO:          scikitplot: 0.3.7
2024-07-19 01:10:08,380:INFO:         yellowbrick: 1.5
2024-07-19 01:10:08,380:INFO:              plotly: 5.20.0
2024-07-19 01:10:08,380:INFO:    plotly-resampler: Not installed
2024-07-19 01:10:08,380:INFO:             kaleido: 0.2.1
2024-07-19 01:10:08,380:INFO:           schemdraw: 0.15
2024-07-19 01:10:08,380:INFO:         statsmodels: 0.14.2
2024-07-19 01:10:08,380:INFO:              sktime: 0.26.0
2024-07-19 01:10:08,380:INFO:               tbats: 1.1.3
2024-07-19 01:10:08,380:INFO:            pmdarima: 2.0.4
2024-07-19 01:10:08,380:INFO:              psutil: 5.9.8
2024-07-19 01:10:08,380:INFO:          markupsafe: 2.1.3
2024-07-19 01:10:08,380:INFO:             pickle5: Not installed
2024-07-19 01:10:08,380:INFO:         cloudpickle: 3.0.0
2024-07-19 01:10:08,380:INFO:         deprecation: 2.1.0
2024-07-19 01:10:08,380:INFO:              xxhash: 3.4.1
2024-07-19 01:10:08,380:INFO:           wurlitzer: Not installed
2024-07-19 01:10:08,380:INFO:PyCaret optional dependencies:
2024-07-19 01:10:08,380:INFO:                shap: 0.44.1
2024-07-19 01:10:08,380:INFO:           interpret: 0.6.2
2024-07-19 01:10:08,380:INFO:                umap: 0.5.6
2024-07-19 01:10:08,380:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:10:08,381:INFO:  explainerdashboard: Not installed
2024-07-19 01:10:08,381:INFO:             autoviz: Not installed
2024-07-19 01:10:08,381:INFO:           fairlearn: 0.7.0
2024-07-19 01:10:08,381:INFO:          deepchecks: Not installed
2024-07-19 01:10:08,381:INFO:             xgboost: 2.0.3
2024-07-19 01:10:08,381:INFO:            catboost: 1.2.5
2024-07-19 01:10:08,381:INFO:              kmodes: 0.12.2
2024-07-19 01:10:08,381:INFO:             mlxtend: 0.23.1
2024-07-19 01:10:08,381:INFO:       statsforecast: Not installed
2024-07-19 01:10:08,381:INFO:        tune_sklearn: Not installed
2024-07-19 01:10:08,381:INFO:                 ray: Not installed
2024-07-19 01:10:08,381:INFO:            hyperopt: 0.2.7
2024-07-19 01:10:08,381:INFO:              optuna: 3.6.1
2024-07-19 01:10:08,381:INFO:               skopt: 0.10.2
2024-07-19 01:10:08,381:INFO:              mlflow: Not installed
2024-07-19 01:10:08,381:INFO:              gradio: Not installed
2024-07-19 01:10:08,381:INFO:             fastapi: Not installed
2024-07-19 01:10:08,381:INFO:             uvicorn: 0.30.1
2024-07-19 01:10:08,381:INFO:              m2cgen: 0.10.0
2024-07-19 01:10:08,381:INFO:           evidently: Not installed
2024-07-19 01:10:08,381:INFO:               fugue: Not installed
2024-07-19 01:10:08,381:INFO:           streamlit: Not installed
2024-07-19 01:10:08,382:INFO:             prophet: Not installed
2024-07-19 01:10:08,382:INFO:None
2024-07-19 01:10:08,382:INFO:Set up data.
2024-07-19 01:10:08,395:INFO:Set up folding strategy.
2024-07-19 01:10:08,395:INFO:Set up train/test split.
2024-07-19 01:10:08,408:INFO:Set up index.
2024-07-19 01:10:08,409:INFO:Assigning column types.
2024-07-19 01:10:08,417:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:10:08,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:10:08,468:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:10:08,489:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:10:08,491:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:10:08,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:10:08,528:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:10:08,549:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:10:08,551:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:10:08,551:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:10:08,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:10:08,604:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:10:08,606:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:10:08,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:10:08,661:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:10:08,663:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:10:08,663:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:10:08,720:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:10:08,721:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:10:08,775:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:10:08,777:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:10:08,778:INFO:Preparing preprocessing pipeline...
2024-07-19 01:10:08,779:INFO:Set up simple imputation.
2024-07-19 01:10:08,780:INFO:Set up column name cleaning.
2024-07-19 01:10:08,804:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:10:08,807:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To Addresses',
                                             'min value received',
                                             'max value receiv...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:10:08,808:INFO:Creating final display dataframe.
2024-07-19 01:10:08,874:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9816, 16)
4        Transformed data shape        (9816, 16)
5   Transformed train set shape        (6871, 16)
6    Transformed test set shape        (2945, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              73e0
2024-07-19 01:10:08,935:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:10:08,937:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:10:08,989:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:10:08,991:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:10:08,992:INFO:setup() successfully completed in 0.63s...............
2024-07-19 01:10:09,021:INFO:Initializing compare_models()
2024-07-19 01:10:09,021:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:10:09,021:INFO:Checking exceptions
2024-07-19 01:10:09,028:INFO:Preparing display monitor
2024-07-19 01:10:09,048:INFO:Initializing Logistic Regression
2024-07-19 01:10:09,049:INFO:Total runtime is 1.7182032267252603e-05 minutes
2024-07-19 01:10:09,051:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:09,051:INFO:Initializing create_model()
2024-07-19 01:10:09,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:09,052:INFO:Checking exceptions
2024-07-19 01:10:09,052:INFO:Importing libraries
2024-07-19 01:10:09,052:INFO:Copying training dataset
2024-07-19 01:10:09,061:INFO:Defining folds
2024-07-19 01:10:09,061:INFO:Declaring metric variables
2024-07-19 01:10:09,064:INFO:Importing untrained model
2024-07-19 01:10:09,068:INFO:Logistic Regression Imported successfully
2024-07-19 01:10:09,074:INFO:Starting cross validation
2024-07-19 01:10:09,075:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:09,716:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,730:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,733:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,749:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,756:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,768:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:09,783:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,790:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,793:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,807:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:10:09,837:INFO:Calculating mean and std
2024-07-19 01:10:09,838:INFO:Creating metrics dataframe
2024-07-19 01:10:09,839:INFO:Uploading results into container
2024-07-19 01:10:09,840:INFO:Uploading model into container now
2024-07-19 01:10:09,840:INFO:_master_model_container: 1
2024-07-19 01:10:09,840:INFO:_display_container: 2
2024-07-19 01:10:09,840:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=85, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:10:09,840:INFO:create_model() successfully completed......................................
2024-07-19 01:10:09,970:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:09,970:INFO:Creating metrics dataframe
2024-07-19 01:10:09,975:INFO:Initializing K Neighbors Classifier
2024-07-19 01:10:09,975:INFO:Total runtime is 0.015442387262980143 minutes
2024-07-19 01:10:09,978:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:09,978:INFO:Initializing create_model()
2024-07-19 01:10:09,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:09,978:INFO:Checking exceptions
2024-07-19 01:10:09,978:INFO:Importing libraries
2024-07-19 01:10:09,978:INFO:Copying training dataset
2024-07-19 01:10:09,984:INFO:Defining folds
2024-07-19 01:10:09,984:INFO:Declaring metric variables
2024-07-19 01:10:09,987:INFO:Importing untrained model
2024-07-19 01:10:09,989:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:10:09,995:INFO:Starting cross validation
2024-07-19 01:10:09,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:10,235:INFO:Calculating mean and std
2024-07-19 01:10:10,237:INFO:Creating metrics dataframe
2024-07-19 01:10:10,238:INFO:Uploading results into container
2024-07-19 01:10:10,238:INFO:Uploading model into container now
2024-07-19 01:10:10,239:INFO:_master_model_container: 2
2024-07-19 01:10:10,239:INFO:_display_container: 2
2024-07-19 01:10:10,239:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:10:10,240:INFO:create_model() successfully completed......................................
2024-07-19 01:10:10,370:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:10,370:INFO:Creating metrics dataframe
2024-07-19 01:10:10,375:INFO:Initializing Naive Bayes
2024-07-19 01:10:10,375:INFO:Total runtime is 0.022115131219228108 minutes
2024-07-19 01:10:10,378:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:10,379:INFO:Initializing create_model()
2024-07-19 01:10:10,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:10,379:INFO:Checking exceptions
2024-07-19 01:10:10,379:INFO:Importing libraries
2024-07-19 01:10:10,379:INFO:Copying training dataset
2024-07-19 01:10:10,385:INFO:Defining folds
2024-07-19 01:10:10,385:INFO:Declaring metric variables
2024-07-19 01:10:10,389:INFO:Importing untrained model
2024-07-19 01:10:10,391:INFO:Naive Bayes Imported successfully
2024-07-19 01:10:10,396:INFO:Starting cross validation
2024-07-19 01:10:10,397:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:10,487:INFO:Calculating mean and std
2024-07-19 01:10:10,488:INFO:Creating metrics dataframe
2024-07-19 01:10:10,490:INFO:Uploading results into container
2024-07-19 01:10:10,491:INFO:Uploading model into container now
2024-07-19 01:10:10,491:INFO:_master_model_container: 3
2024-07-19 01:10:10,491:INFO:_display_container: 2
2024-07-19 01:10:10,491:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:10:10,491:INFO:create_model() successfully completed......................................
2024-07-19 01:10:10,626:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:10,626:INFO:Creating metrics dataframe
2024-07-19 01:10:10,631:INFO:Initializing Decision Tree Classifier
2024-07-19 01:10:10,631:INFO:Total runtime is 0.02637776533762614 minutes
2024-07-19 01:10:10,633:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:10,634:INFO:Initializing create_model()
2024-07-19 01:10:10,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:10,634:INFO:Checking exceptions
2024-07-19 01:10:10,634:INFO:Importing libraries
2024-07-19 01:10:10,634:INFO:Copying training dataset
2024-07-19 01:10:10,641:INFO:Defining folds
2024-07-19 01:10:10,641:INFO:Declaring metric variables
2024-07-19 01:10:10,644:INFO:Importing untrained model
2024-07-19 01:10:10,649:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:10:10,653:INFO:Starting cross validation
2024-07-19 01:10:10,654:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:10,799:INFO:Calculating mean and std
2024-07-19 01:10:10,800:INFO:Creating metrics dataframe
2024-07-19 01:10:10,802:INFO:Uploading results into container
2024-07-19 01:10:10,802:INFO:Uploading model into container now
2024-07-19 01:10:10,802:INFO:_master_model_container: 4
2024-07-19 01:10:10,802:INFO:_display_container: 2
2024-07-19 01:10:10,803:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=85, splitter='best')
2024-07-19 01:10:10,803:INFO:create_model() successfully completed......................................
2024-07-19 01:10:10,931:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:10,931:INFO:Creating metrics dataframe
2024-07-19 01:10:10,938:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:10:10,938:INFO:Total runtime is 0.031499783198038735 minutes
2024-07-19 01:10:10,940:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:10,941:INFO:Initializing create_model()
2024-07-19 01:10:10,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:10,941:INFO:Checking exceptions
2024-07-19 01:10:10,941:INFO:Importing libraries
2024-07-19 01:10:10,941:INFO:Copying training dataset
2024-07-19 01:10:10,948:INFO:Defining folds
2024-07-19 01:10:10,949:INFO:Declaring metric variables
2024-07-19 01:10:10,951:INFO:Importing untrained model
2024-07-19 01:10:10,954:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:10:10,960:INFO:Starting cross validation
2024-07-19 01:10:10,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:11,064:INFO:Calculating mean and std
2024-07-19 01:10:11,066:INFO:Creating metrics dataframe
2024-07-19 01:10:11,067:INFO:Uploading results into container
2024-07-19 01:10:11,068:INFO:Uploading model into container now
2024-07-19 01:10:11,068:INFO:_master_model_container: 5
2024-07-19 01:10:11,068:INFO:_display_container: 2
2024-07-19 01:10:11,069:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=85, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:10:11,069:INFO:create_model() successfully completed......................................
2024-07-19 01:10:11,197:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:11,198:INFO:Creating metrics dataframe
2024-07-19 01:10:11,203:INFO:Initializing Ridge Classifier
2024-07-19 01:10:11,203:INFO:Total runtime is 0.035920333862304685 minutes
2024-07-19 01:10:11,205:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:11,206:INFO:Initializing create_model()
2024-07-19 01:10:11,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:11,206:INFO:Checking exceptions
2024-07-19 01:10:11,206:INFO:Importing libraries
2024-07-19 01:10:11,206:INFO:Copying training dataset
2024-07-19 01:10:11,212:INFO:Defining folds
2024-07-19 01:10:11,212:INFO:Declaring metric variables
2024-07-19 01:10:11,231:INFO:Importing untrained model
2024-07-19 01:10:11,240:INFO:Ridge Classifier Imported successfully
2024-07-19 01:10:11,249:INFO:Starting cross validation
2024-07-19 01:10:11,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:11,316:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:11,318:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:11,321:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:11,324:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:11,326:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:11,333:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:11,339:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:11,353:INFO:Calculating mean and std
2024-07-19 01:10:11,355:INFO:Creating metrics dataframe
2024-07-19 01:10:11,357:INFO:Uploading results into container
2024-07-19 01:10:11,357:INFO:Uploading model into container now
2024-07-19 01:10:11,358:INFO:_master_model_container: 6
2024-07-19 01:10:11,358:INFO:_display_container: 2
2024-07-19 01:10:11,358:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=85, solver='auto',
                tol=0.0001)
2024-07-19 01:10:11,359:INFO:create_model() successfully completed......................................
2024-07-19 01:10:11,490:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:11,490:INFO:Creating metrics dataframe
2024-07-19 01:10:11,495:INFO:Initializing Random Forest Classifier
2024-07-19 01:10:11,496:INFO:Total runtime is 0.04080117543538411 minutes
2024-07-19 01:10:11,499:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:11,499:INFO:Initializing create_model()
2024-07-19 01:10:11,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:11,500:INFO:Checking exceptions
2024-07-19 01:10:11,500:INFO:Importing libraries
2024-07-19 01:10:11,500:INFO:Copying training dataset
2024-07-19 01:10:11,506:INFO:Defining folds
2024-07-19 01:10:11,506:INFO:Declaring metric variables
2024-07-19 01:10:11,509:INFO:Importing untrained model
2024-07-19 01:10:11,512:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:10:11,518:INFO:Starting cross validation
2024-07-19 01:10:11,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:12,634:INFO:Calculating mean and std
2024-07-19 01:10:12,636:INFO:Creating metrics dataframe
2024-07-19 01:10:12,637:INFO:Uploading results into container
2024-07-19 01:10:12,638:INFO:Uploading model into container now
2024-07-19 01:10:12,638:INFO:_master_model_container: 7
2024-07-19 01:10:12,638:INFO:_display_container: 2
2024-07-19 01:10:12,639:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=85, verbose=0,
                       warm_start=False)
2024-07-19 01:10:12,639:INFO:create_model() successfully completed......................................
2024-07-19 01:10:12,773:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:12,773:INFO:Creating metrics dataframe
2024-07-19 01:10:12,779:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:10:12,779:INFO:Total runtime is 0.06218345959981282 minutes
2024-07-19 01:10:12,781:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:12,781:INFO:Initializing create_model()
2024-07-19 01:10:12,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:12,782:INFO:Checking exceptions
2024-07-19 01:10:12,782:INFO:Importing libraries
2024-07-19 01:10:12,782:INFO:Copying training dataset
2024-07-19 01:10:12,789:INFO:Defining folds
2024-07-19 01:10:12,789:INFO:Declaring metric variables
2024-07-19 01:10:12,792:INFO:Importing untrained model
2024-07-19 01:10:12,795:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:10:12,800:INFO:Starting cross validation
2024-07-19 01:10:12,801:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:12,904:INFO:Calculating mean and std
2024-07-19 01:10:12,905:INFO:Creating metrics dataframe
2024-07-19 01:10:12,907:INFO:Uploading results into container
2024-07-19 01:10:12,908:INFO:Uploading model into container now
2024-07-19 01:10:12,908:INFO:_master_model_container: 8
2024-07-19 01:10:12,908:INFO:_display_container: 2
2024-07-19 01:10:12,909:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:10:12,909:INFO:create_model() successfully completed......................................
2024-07-19 01:10:13,039:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:13,039:INFO:Creating metrics dataframe
2024-07-19 01:10:13,045:INFO:Initializing Ada Boost Classifier
2024-07-19 01:10:13,045:INFO:Total runtime is 0.06661033630371094 minutes
2024-07-19 01:10:13,048:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:13,048:INFO:Initializing create_model()
2024-07-19 01:10:13,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:13,048:INFO:Checking exceptions
2024-07-19 01:10:13,049:INFO:Importing libraries
2024-07-19 01:10:13,049:INFO:Copying training dataset
2024-07-19 01:10:13,055:INFO:Defining folds
2024-07-19 01:10:13,055:INFO:Declaring metric variables
2024-07-19 01:10:13,058:INFO:Importing untrained model
2024-07-19 01:10:13,062:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:10:13,066:INFO:Starting cross validation
2024-07-19 01:10:13,067:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:13,093:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,096:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,103:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,109:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,110:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,111:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,112:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,116:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,119:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,121:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:10:13,774:INFO:Calculating mean and std
2024-07-19 01:10:13,776:INFO:Creating metrics dataframe
2024-07-19 01:10:13,777:INFO:Uploading results into container
2024-07-19 01:10:13,778:INFO:Uploading model into container now
2024-07-19 01:10:13,778:INFO:_master_model_container: 9
2024-07-19 01:10:13,778:INFO:_display_container: 2
2024-07-19 01:10:13,779:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=85)
2024-07-19 01:10:13,779:INFO:create_model() successfully completed......................................
2024-07-19 01:10:13,922:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:13,923:INFO:Creating metrics dataframe
2024-07-19 01:10:13,929:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:10:13,929:INFO:Total runtime is 0.08135864337285359 minutes
2024-07-19 01:10:13,932:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:13,932:INFO:Initializing create_model()
2024-07-19 01:10:13,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:13,934:INFO:Checking exceptions
2024-07-19 01:10:13,934:INFO:Importing libraries
2024-07-19 01:10:13,934:INFO:Copying training dataset
2024-07-19 01:10:13,940:INFO:Defining folds
2024-07-19 01:10:13,940:INFO:Declaring metric variables
2024-07-19 01:10:13,942:INFO:Importing untrained model
2024-07-19 01:10:13,946:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:10:13,951:INFO:Starting cross validation
2024-07-19 01:10:13,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:16,349:INFO:Calculating mean and std
2024-07-19 01:10:16,350:INFO:Creating metrics dataframe
2024-07-19 01:10:16,352:INFO:Uploading results into container
2024-07-19 01:10:16,352:INFO:Uploading model into container now
2024-07-19 01:10:16,352:INFO:_master_model_container: 10
2024-07-19 01:10:16,352:INFO:_display_container: 2
2024-07-19 01:10:16,353:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=85, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:10:16,353:INFO:create_model() successfully completed......................................
2024-07-19 01:10:16,486:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:16,486:INFO:Creating metrics dataframe
2024-07-19 01:10:16,493:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:10:16,493:INFO:Total runtime is 0.12408476670583088 minutes
2024-07-19 01:10:16,496:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:16,497:INFO:Initializing create_model()
2024-07-19 01:10:16,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:16,497:INFO:Checking exceptions
2024-07-19 01:10:16,497:INFO:Importing libraries
2024-07-19 01:10:16,497:INFO:Copying training dataset
2024-07-19 01:10:16,504:INFO:Defining folds
2024-07-19 01:10:16,504:INFO:Declaring metric variables
2024-07-19 01:10:16,507:INFO:Importing untrained model
2024-07-19 01:10:16,511:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:10:16,516:INFO:Starting cross validation
2024-07-19 01:10:16,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:16,578:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:16,580:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:16,583:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:16,584:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:16,591:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:16,592:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:16,615:INFO:Calculating mean and std
2024-07-19 01:10:16,616:INFO:Creating metrics dataframe
2024-07-19 01:10:16,618:INFO:Uploading results into container
2024-07-19 01:10:16,618:INFO:Uploading model into container now
2024-07-19 01:10:16,619:INFO:_master_model_container: 11
2024-07-19 01:10:16,619:INFO:_display_container: 2
2024-07-19 01:10:16,619:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:10:16,619:INFO:create_model() successfully completed......................................
2024-07-19 01:10:16,751:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:16,751:INFO:Creating metrics dataframe
2024-07-19 01:10:16,758:INFO:Initializing Extra Trees Classifier
2024-07-19 01:10:16,758:INFO:Total runtime is 0.12849722305933634 minutes
2024-07-19 01:10:16,761:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:16,761:INFO:Initializing create_model()
2024-07-19 01:10:16,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:16,761:INFO:Checking exceptions
2024-07-19 01:10:16,761:INFO:Importing libraries
2024-07-19 01:10:16,761:INFO:Copying training dataset
2024-07-19 01:10:16,768:INFO:Defining folds
2024-07-19 01:10:16,768:INFO:Declaring metric variables
2024-07-19 01:10:16,771:INFO:Importing untrained model
2024-07-19 01:10:16,775:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:10:16,779:INFO:Starting cross validation
2024-07-19 01:10:16,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:17,582:INFO:Calculating mean and std
2024-07-19 01:10:17,583:INFO:Creating metrics dataframe
2024-07-19 01:10:17,585:INFO:Uploading results into container
2024-07-19 01:10:17,585:INFO:Uploading model into container now
2024-07-19 01:10:17,586:INFO:_master_model_container: 12
2024-07-19 01:10:17,586:INFO:_display_container: 2
2024-07-19 01:10:17,586:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=85, verbose=0,
                     warm_start=False)
2024-07-19 01:10:17,587:INFO:create_model() successfully completed......................................
2024-07-19 01:10:17,718:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:17,718:INFO:Creating metrics dataframe
2024-07-19 01:10:17,724:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:10:17,724:INFO:Total runtime is 0.14460259278615314 minutes
2024-07-19 01:10:17,726:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:17,726:INFO:Initializing create_model()
2024-07-19 01:10:17,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:17,726:INFO:Checking exceptions
2024-07-19 01:10:17,726:INFO:Importing libraries
2024-07-19 01:10:17,726:INFO:Copying training dataset
2024-07-19 01:10:17,734:INFO:Defining folds
2024-07-19 01:10:17,734:INFO:Declaring metric variables
2024-07-19 01:10:17,736:INFO:Importing untrained model
2024-07-19 01:10:17,741:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:10:17,745:INFO:Starting cross validation
2024-07-19 01:10:17,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:18,157:INFO:Calculating mean and std
2024-07-19 01:10:18,158:INFO:Creating metrics dataframe
2024-07-19 01:10:18,160:INFO:Uploading results into container
2024-07-19 01:10:18,160:INFO:Uploading model into container now
2024-07-19 01:10:18,161:INFO:_master_model_container: 13
2024-07-19 01:10:18,161:INFO:_display_container: 2
2024-07-19 01:10:18,162:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:10:18,162:INFO:create_model() successfully completed......................................
2024-07-19 01:10:18,295:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:18,295:INFO:Creating metrics dataframe
2024-07-19 01:10:18,302:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:10:18,302:INFO:Total runtime is 0.1542372624079386 minutes
2024-07-19 01:10:18,306:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:18,306:INFO:Initializing create_model()
2024-07-19 01:10:18,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:18,306:INFO:Checking exceptions
2024-07-19 01:10:18,306:INFO:Importing libraries
2024-07-19 01:10:18,306:INFO:Copying training dataset
2024-07-19 01:10:18,313:INFO:Defining folds
2024-07-19 01:10:18,313:INFO:Declaring metric variables
2024-07-19 01:10:18,316:INFO:Importing untrained model
2024-07-19 01:10:18,332:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:10:18,344:INFO:Starting cross validation
2024-07-19 01:10:18,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:19,247:INFO:Calculating mean and std
2024-07-19 01:10:19,249:INFO:Creating metrics dataframe
2024-07-19 01:10:19,252:INFO:Uploading results into container
2024-07-19 01:10:19,252:INFO:Uploading model into container now
2024-07-19 01:10:19,253:INFO:_master_model_container: 14
2024-07-19 01:10:19,253:INFO:_display_container: 2
2024-07-19 01:10:19,254:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=85, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:10:19,254:INFO:create_model() successfully completed......................................
2024-07-19 01:10:19,402:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:19,402:INFO:Creating metrics dataframe
2024-07-19 01:10:19,414:INFO:Initializing CatBoost Classifier
2024-07-19 01:10:19,414:INFO:Total runtime is 0.17276128927866616 minutes
2024-07-19 01:10:19,418:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:19,419:INFO:Initializing create_model()
2024-07-19 01:10:19,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:19,419:INFO:Checking exceptions
2024-07-19 01:10:19,419:INFO:Importing libraries
2024-07-19 01:10:19,419:INFO:Copying training dataset
2024-07-19 01:10:19,428:INFO:Defining folds
2024-07-19 01:10:19,428:INFO:Declaring metric variables
2024-07-19 01:10:19,433:INFO:Importing untrained model
2024-07-19 01:10:19,439:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:10:19,445:INFO:Starting cross validation
2024-07-19 01:10:19,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:35,304:INFO:Calculating mean and std
2024-07-19 01:10:35,306:INFO:Creating metrics dataframe
2024-07-19 01:10:35,308:INFO:Uploading results into container
2024-07-19 01:10:35,309:INFO:Uploading model into container now
2024-07-19 01:10:35,309:INFO:_master_model_container: 15
2024-07-19 01:10:35,309:INFO:_display_container: 2
2024-07-19 01:10:35,309:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BCEAEA40>
2024-07-19 01:10:35,309:INFO:create_model() successfully completed......................................
2024-07-19 01:10:35,454:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:35,454:INFO:Creating metrics dataframe
2024-07-19 01:10:35,461:INFO:Initializing Dummy Classifier
2024-07-19 01:10:35,461:INFO:Total runtime is 0.4402126948038737 minutes
2024-07-19 01:10:35,464:INFO:SubProcess create_model() called ==================================
2024-07-19 01:10:35,464:INFO:Initializing create_model()
2024-07-19 01:10:35,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB5EF940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:35,464:INFO:Checking exceptions
2024-07-19 01:10:35,465:INFO:Importing libraries
2024-07-19 01:10:35,465:INFO:Copying training dataset
2024-07-19 01:10:35,471:INFO:Defining folds
2024-07-19 01:10:35,472:INFO:Declaring metric variables
2024-07-19 01:10:35,474:INFO:Importing untrained model
2024-07-19 01:10:35,477:INFO:Dummy Classifier Imported successfully
2024-07-19 01:10:35,483:INFO:Starting cross validation
2024-07-19 01:10:35,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:10:35,527:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,528:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,536:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,540:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,540:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,550:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,553:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,554:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:10:35,570:INFO:Calculating mean and std
2024-07-19 01:10:35,571:INFO:Creating metrics dataframe
2024-07-19 01:10:35,573:INFO:Uploading results into container
2024-07-19 01:10:35,573:INFO:Uploading model into container now
2024-07-19 01:10:35,574:INFO:_master_model_container: 16
2024-07-19 01:10:35,574:INFO:_display_container: 2
2024-07-19 01:10:35,574:INFO:DummyClassifier(constant=None, random_state=85, strategy='prior')
2024-07-19 01:10:35,574:INFO:create_model() successfully completed......................................
2024-07-19 01:10:35,704:INFO:SubProcess create_model() end ==================================
2024-07-19 01:10:35,704:INFO:Creating metrics dataframe
2024-07-19 01:10:35,711:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-19 01:10:35,719:INFO:Initializing create_model()
2024-07-19 01:10:35,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BB5EF850>, estimator=<catboost.core.CatBoostClassifier object at 0x00000191BCEAEA40>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:10:35,719:INFO:Checking exceptions
2024-07-19 01:10:35,721:INFO:Importing libraries
2024-07-19 01:10:35,721:INFO:Copying training dataset
2024-07-19 01:10:35,726:INFO:Defining folds
2024-07-19 01:10:35,726:INFO:Declaring metric variables
2024-07-19 01:10:35,726:INFO:Importing untrained model
2024-07-19 01:10:35,726:INFO:Declaring custom model
2024-07-19 01:10:35,726:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:10:35,727:INFO:Cross validation set to False
2024-07-19 01:10:35,727:INFO:Fitting Model
2024-07-19 01:10:38,877:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BCEAE770>
2024-07-19 01:10:38,877:INFO:create_model() successfully completed......................................
2024-07-19 01:10:39,033:INFO:_master_model_container: 16
2024-07-19 01:10:39,033:INFO:_display_container: 2
2024-07-19 01:10:39,033:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BCEAE770>
2024-07-19 01:10:39,033:INFO:compare_models() successfully completed......................................
2024-07-19 01:27:13,308:INFO:PyCaret ClassificationExperiment
2024-07-19 01:27:13,309:INFO:Logging name: clf-default-name
2024-07-19 01:27:13,309:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:27:13,309:INFO:version 3.3.2
2024-07-19 01:27:13,309:INFO:Initializing setup()
2024-07-19 01:27:13,309:INFO:self.USI: e35e
2024-07-19 01:27:13,309:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:27:13,309:INFO:Checking environment
2024-07-19 01:27:13,309:INFO:python_version: 3.10.11
2024-07-19 01:27:13,309:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:27:13,309:INFO:machine: AMD64
2024-07-19 01:27:13,309:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:27:13,314:INFO:Memory: svmem(total=16516247552, available=4608024576, percent=72.1, used=11908222976, free=4608024576)
2024-07-19 01:27:13,314:INFO:Physical Core: 8
2024-07-19 01:27:13,314:INFO:Logical Core: 16
2024-07-19 01:27:13,314:INFO:Checking libraries
2024-07-19 01:27:13,314:INFO:System:
2024-07-19 01:27:13,314:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:27:13,314:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:27:13,314:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:27:13,314:INFO:PyCaret required dependencies:
2024-07-19 01:27:13,316:INFO:                 pip: 24.1.2
2024-07-19 01:27:13,316:INFO:          setuptools: 65.5.0
2024-07-19 01:27:13,316:INFO:             pycaret: 3.3.2
2024-07-19 01:27:13,316:INFO:             IPython: 8.21.0
2024-07-19 01:27:13,316:INFO:          ipywidgets: 8.1.3
2024-07-19 01:27:13,316:INFO:                tqdm: 4.66.4
2024-07-19 01:27:13,316:INFO:               numpy: 1.26.4
2024-07-19 01:27:13,316:INFO:              pandas: 2.1.4
2024-07-19 01:27:13,316:INFO:              jinja2: 3.1.2
2024-07-19 01:27:13,316:INFO:               scipy: 1.11.4
2024-07-19 01:27:13,316:INFO:              joblib: 1.3.2
2024-07-19 01:27:13,316:INFO:             sklearn: 1.4.2
2024-07-19 01:27:13,316:INFO:                pyod: 2.0.1
2024-07-19 01:27:13,316:INFO:            imblearn: 0.12.2
2024-07-19 01:27:13,316:INFO:   category_encoders: 2.6.3
2024-07-19 01:27:13,316:INFO:            lightgbm: 4.3.0
2024-07-19 01:27:13,316:INFO:               numba: 0.60.0
2024-07-19 01:27:13,316:INFO:            requests: 2.32.3
2024-07-19 01:27:13,316:INFO:          matplotlib: 3.8.3
2024-07-19 01:27:13,316:INFO:          scikitplot: 0.3.7
2024-07-19 01:27:13,316:INFO:         yellowbrick: 1.5
2024-07-19 01:27:13,316:INFO:              plotly: 5.20.0
2024-07-19 01:27:13,316:INFO:    plotly-resampler: Not installed
2024-07-19 01:27:13,316:INFO:             kaleido: 0.2.1
2024-07-19 01:27:13,316:INFO:           schemdraw: 0.15
2024-07-19 01:27:13,316:INFO:         statsmodels: 0.14.2
2024-07-19 01:27:13,316:INFO:              sktime: 0.26.0
2024-07-19 01:27:13,316:INFO:               tbats: 1.1.3
2024-07-19 01:27:13,316:INFO:            pmdarima: 2.0.4
2024-07-19 01:27:13,316:INFO:              psutil: 5.9.8
2024-07-19 01:27:13,316:INFO:          markupsafe: 2.1.3
2024-07-19 01:27:13,316:INFO:             pickle5: Not installed
2024-07-19 01:27:13,316:INFO:         cloudpickle: 3.0.0
2024-07-19 01:27:13,316:INFO:         deprecation: 2.1.0
2024-07-19 01:27:13,316:INFO:              xxhash: 3.4.1
2024-07-19 01:27:13,316:INFO:           wurlitzer: Not installed
2024-07-19 01:27:13,316:INFO:PyCaret optional dependencies:
2024-07-19 01:27:13,316:INFO:                shap: 0.44.1
2024-07-19 01:27:13,316:INFO:           interpret: 0.6.2
2024-07-19 01:27:13,317:INFO:                umap: 0.5.6
2024-07-19 01:27:13,317:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:27:13,317:INFO:  explainerdashboard: Not installed
2024-07-19 01:27:13,317:INFO:             autoviz: Not installed
2024-07-19 01:27:13,317:INFO:           fairlearn: 0.7.0
2024-07-19 01:27:13,317:INFO:          deepchecks: Not installed
2024-07-19 01:27:13,317:INFO:             xgboost: 2.0.3
2024-07-19 01:27:13,317:INFO:            catboost: 1.2.5
2024-07-19 01:27:13,317:INFO:              kmodes: 0.12.2
2024-07-19 01:27:13,317:INFO:             mlxtend: 0.23.1
2024-07-19 01:27:13,317:INFO:       statsforecast: Not installed
2024-07-19 01:27:13,317:INFO:        tune_sklearn: Not installed
2024-07-19 01:27:13,317:INFO:                 ray: Not installed
2024-07-19 01:27:13,317:INFO:            hyperopt: 0.2.7
2024-07-19 01:27:13,317:INFO:              optuna: 3.6.1
2024-07-19 01:27:13,317:INFO:               skopt: 0.10.2
2024-07-19 01:27:13,317:INFO:              mlflow: Not installed
2024-07-19 01:27:13,317:INFO:              gradio: Not installed
2024-07-19 01:27:13,317:INFO:             fastapi: Not installed
2024-07-19 01:27:13,317:INFO:             uvicorn: 0.30.1
2024-07-19 01:27:13,317:INFO:              m2cgen: 0.10.0
2024-07-19 01:27:13,317:INFO:           evidently: Not installed
2024-07-19 01:27:13,317:INFO:               fugue: Not installed
2024-07-19 01:27:13,317:INFO:           streamlit: Not installed
2024-07-19 01:27:13,317:INFO:             prophet: Not installed
2024-07-19 01:27:13,317:INFO:None
2024-07-19 01:27:13,317:INFO:Set up data.
2024-07-19 01:27:13,322:INFO:Set up folding strategy.
2024-07-19 01:27:13,322:INFO:Set up train/test split.
2024-07-19 01:27:13,330:INFO:Set up index.
2024-07-19 01:27:13,330:INFO:Assigning column types.
2024-07-19 01:27:13,335:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:27:13,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:27:13,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:27:13,390:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:27:13,392:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:27:13,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:27:13,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:27:13,447:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:27:13,449:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:27:13,449:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:27:13,482:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:27:13,501:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:27:13,503:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:27:13,536:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:27:13,555:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:27:13,558:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:27:13,559:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:27:13,611:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:27:13,613:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:27:13,665:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:27:13,667:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:27:13,668:INFO:Preparing preprocessing pipeline...
2024-07-19 01:27:13,669:INFO:Set up simple imputation.
2024-07-19 01:27:13,669:INFO:Set up column name cleaning.
2024-07-19 01:27:13,689:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:27:13,692:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To Addresses',
                                             'min value received',
                                             'max value receiv...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:27:13,692:INFO:Creating final display dataframe.
2024-07-19 01:27:13,758:INFO:Setup _display_container:                     Description             Value
0                    Session id                55
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9816, 16)
4        Transformed data shape        (9816, 16)
5   Transformed train set shape        (6871, 16)
6    Transformed test set shape        (2945, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              e35e
2024-07-19 01:27:13,816:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:27:13,818:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:27:13,871:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:27:13,873:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:27:13,875:INFO:setup() successfully completed in 0.57s...............
2024-07-19 01:27:17,597:INFO:Initializing compare_models()
2024-07-19 01:27:17,597:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:27:17,597:INFO:Checking exceptions
2024-07-19 01:27:17,603:INFO:Preparing display monitor
2024-07-19 01:27:17,620:INFO:Initializing Logistic Regression
2024-07-19 01:27:17,620:INFO:Total runtime is 0.0 minutes
2024-07-19 01:27:17,623:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:17,624:INFO:Initializing create_model()
2024-07-19 01:27:17,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:17,624:INFO:Checking exceptions
2024-07-19 01:27:17,624:INFO:Importing libraries
2024-07-19 01:27:17,624:INFO:Copying training dataset
2024-07-19 01:27:17,632:INFO:Defining folds
2024-07-19 01:27:17,632:INFO:Declaring metric variables
2024-07-19 01:27:17,636:INFO:Importing untrained model
2024-07-19 01:27:17,639:INFO:Logistic Regression Imported successfully
2024-07-19 01:27:17,645:INFO:Starting cross validation
2024-07-19 01:27:17,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:23,366:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,400:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,410:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,433:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,433:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,491:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,516:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,550:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,560:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,565:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:27:23,598:INFO:Calculating mean and std
2024-07-19 01:27:23,600:INFO:Creating metrics dataframe
2024-07-19 01:27:23,605:INFO:Uploading results into container
2024-07-19 01:27:23,605:INFO:Uploading model into container now
2024-07-19 01:27:23,606:INFO:_master_model_container: 1
2024-07-19 01:27:23,606:INFO:_display_container: 2
2024-07-19 01:27:23,607:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=55, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:27:23,607:INFO:create_model() successfully completed......................................
2024-07-19 01:27:23,796:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:23,796:INFO:Creating metrics dataframe
2024-07-19 01:27:23,801:INFO:Initializing K Neighbors Classifier
2024-07-19 01:27:23,801:INFO:Total runtime is 0.103012748559316 minutes
2024-07-19 01:27:23,803:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:23,803:INFO:Initializing create_model()
2024-07-19 01:27:23,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:23,804:INFO:Checking exceptions
2024-07-19 01:27:23,804:INFO:Importing libraries
2024-07-19 01:27:23,804:INFO:Copying training dataset
2024-07-19 01:27:23,811:INFO:Defining folds
2024-07-19 01:27:23,811:INFO:Declaring metric variables
2024-07-19 01:27:23,815:INFO:Importing untrained model
2024-07-19 01:27:23,818:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:27:23,823:INFO:Starting cross validation
2024-07-19 01:27:23,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:27,558:INFO:Calculating mean and std
2024-07-19 01:27:27,560:INFO:Creating metrics dataframe
2024-07-19 01:27:27,563:INFO:Uploading results into container
2024-07-19 01:27:27,564:INFO:Uploading model into container now
2024-07-19 01:27:27,564:INFO:_master_model_container: 2
2024-07-19 01:27:27,564:INFO:_display_container: 2
2024-07-19 01:27:27,565:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:27:27,565:INFO:create_model() successfully completed......................................
2024-07-19 01:27:27,749:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:27,749:INFO:Creating metrics dataframe
2024-07-19 01:27:27,754:INFO:Initializing Naive Bayes
2024-07-19 01:27:27,754:INFO:Total runtime is 0.168891712029775 minutes
2024-07-19 01:27:27,756:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:27,757:INFO:Initializing create_model()
2024-07-19 01:27:27,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:27,757:INFO:Checking exceptions
2024-07-19 01:27:27,757:INFO:Importing libraries
2024-07-19 01:27:27,757:INFO:Copying training dataset
2024-07-19 01:27:27,764:INFO:Defining folds
2024-07-19 01:27:27,764:INFO:Declaring metric variables
2024-07-19 01:27:27,767:INFO:Importing untrained model
2024-07-19 01:27:27,769:INFO:Naive Bayes Imported successfully
2024-07-19 01:27:27,774:INFO:Starting cross validation
2024-07-19 01:27:27,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:27,872:INFO:Calculating mean and std
2024-07-19 01:27:27,873:INFO:Creating metrics dataframe
2024-07-19 01:27:27,876:INFO:Uploading results into container
2024-07-19 01:27:27,876:INFO:Uploading model into container now
2024-07-19 01:27:27,876:INFO:_master_model_container: 3
2024-07-19 01:27:27,876:INFO:_display_container: 2
2024-07-19 01:27:27,877:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:27:27,877:INFO:create_model() successfully completed......................................
2024-07-19 01:27:28,011:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:28,011:INFO:Creating metrics dataframe
2024-07-19 01:27:28,017:INFO:Initializing Decision Tree Classifier
2024-07-19 01:27:28,017:INFO:Total runtime is 0.17327476342519124 minutes
2024-07-19 01:27:28,019:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:28,019:INFO:Initializing create_model()
2024-07-19 01:27:28,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:28,020:INFO:Checking exceptions
2024-07-19 01:27:28,020:INFO:Importing libraries
2024-07-19 01:27:28,020:INFO:Copying training dataset
2024-07-19 01:27:28,027:INFO:Defining folds
2024-07-19 01:27:28,027:INFO:Declaring metric variables
2024-07-19 01:27:28,030:INFO:Importing untrained model
2024-07-19 01:27:28,033:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:27:28,037:INFO:Starting cross validation
2024-07-19 01:27:28,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:28,180:INFO:Calculating mean and std
2024-07-19 01:27:28,181:INFO:Creating metrics dataframe
2024-07-19 01:27:28,183:INFO:Uploading results into container
2024-07-19 01:27:28,183:INFO:Uploading model into container now
2024-07-19 01:27:28,183:INFO:_master_model_container: 4
2024-07-19 01:27:28,183:INFO:_display_container: 2
2024-07-19 01:27:28,184:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=55, splitter='best')
2024-07-19 01:27:28,184:INFO:create_model() successfully completed......................................
2024-07-19 01:27:28,334:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:28,335:INFO:Creating metrics dataframe
2024-07-19 01:27:28,340:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:27:28,340:INFO:Total runtime is 0.17866528034210205 minutes
2024-07-19 01:27:28,344:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:28,344:INFO:Initializing create_model()
2024-07-19 01:27:28,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:28,344:INFO:Checking exceptions
2024-07-19 01:27:28,344:INFO:Importing libraries
2024-07-19 01:27:28,344:INFO:Copying training dataset
2024-07-19 01:27:28,350:INFO:Defining folds
2024-07-19 01:27:28,350:INFO:Declaring metric variables
2024-07-19 01:27:28,353:INFO:Importing untrained model
2024-07-19 01:27:28,356:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:27:28,361:INFO:Starting cross validation
2024-07-19 01:27:28,361:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:28,460:INFO:Calculating mean and std
2024-07-19 01:27:28,461:INFO:Creating metrics dataframe
2024-07-19 01:27:28,464:INFO:Uploading results into container
2024-07-19 01:27:28,464:INFO:Uploading model into container now
2024-07-19 01:27:28,465:INFO:_master_model_container: 5
2024-07-19 01:27:28,465:INFO:_display_container: 2
2024-07-19 01:27:28,465:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=55, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:27:28,465:INFO:create_model() successfully completed......................................
2024-07-19 01:27:28,599:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:28,599:INFO:Creating metrics dataframe
2024-07-19 01:27:28,604:INFO:Initializing Ridge Classifier
2024-07-19 01:27:28,604:INFO:Total runtime is 0.1830680251121521 minutes
2024-07-19 01:27:28,607:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:28,607:INFO:Initializing create_model()
2024-07-19 01:27:28,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:28,608:INFO:Checking exceptions
2024-07-19 01:27:28,609:INFO:Importing libraries
2024-07-19 01:27:28,609:INFO:Copying training dataset
2024-07-19 01:27:28,615:INFO:Defining folds
2024-07-19 01:27:28,616:INFO:Declaring metric variables
2024-07-19 01:27:28,618:INFO:Importing untrained model
2024-07-19 01:27:28,621:INFO:Ridge Classifier Imported successfully
2024-07-19 01:27:28,626:INFO:Starting cross validation
2024-07-19 01:27:28,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:28,686:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:28,689:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:28,694:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:28,699:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:28,703:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:28,703:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:28,726:INFO:Calculating mean and std
2024-07-19 01:27:28,727:INFO:Creating metrics dataframe
2024-07-19 01:27:28,729:INFO:Uploading results into container
2024-07-19 01:27:28,730:INFO:Uploading model into container now
2024-07-19 01:27:28,730:INFO:_master_model_container: 6
2024-07-19 01:27:28,730:INFO:_display_container: 2
2024-07-19 01:27:28,730:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=55, solver='auto',
                tol=0.0001)
2024-07-19 01:27:28,730:INFO:create_model() successfully completed......................................
2024-07-19 01:27:28,865:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:28,865:INFO:Creating metrics dataframe
2024-07-19 01:27:28,871:INFO:Initializing Random Forest Classifier
2024-07-19 01:27:28,871:INFO:Total runtime is 0.18750817775726317 minutes
2024-07-19 01:27:28,874:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:28,874:INFO:Initializing create_model()
2024-07-19 01:27:28,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:28,874:INFO:Checking exceptions
2024-07-19 01:27:28,874:INFO:Importing libraries
2024-07-19 01:27:28,874:INFO:Copying training dataset
2024-07-19 01:27:28,881:INFO:Defining folds
2024-07-19 01:27:28,881:INFO:Declaring metric variables
2024-07-19 01:27:28,884:INFO:Importing untrained model
2024-07-19 01:27:28,886:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:27:28,891:INFO:Starting cross validation
2024-07-19 01:27:28,892:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:30,049:INFO:Calculating mean and std
2024-07-19 01:27:30,051:INFO:Creating metrics dataframe
2024-07-19 01:27:30,052:INFO:Uploading results into container
2024-07-19 01:27:30,053:INFO:Uploading model into container now
2024-07-19 01:27:30,053:INFO:_master_model_container: 7
2024-07-19 01:27:30,053:INFO:_display_container: 2
2024-07-19 01:27:30,053:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=55, verbose=0,
                       warm_start=False)
2024-07-19 01:27:30,053:INFO:create_model() successfully completed......................................
2024-07-19 01:27:30,186:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:30,186:INFO:Creating metrics dataframe
2024-07-19 01:27:30,192:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:27:30,192:INFO:Total runtime is 0.20952059825261432 minutes
2024-07-19 01:27:30,195:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:30,195:INFO:Initializing create_model()
2024-07-19 01:27:30,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:30,195:INFO:Checking exceptions
2024-07-19 01:27:30,195:INFO:Importing libraries
2024-07-19 01:27:30,195:INFO:Copying training dataset
2024-07-19 01:27:30,202:INFO:Defining folds
2024-07-19 01:27:30,202:INFO:Declaring metric variables
2024-07-19 01:27:30,204:INFO:Importing untrained model
2024-07-19 01:27:30,207:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:27:30,212:INFO:Starting cross validation
2024-07-19 01:27:30,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:30,258:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:27:30,299:INFO:Calculating mean and std
2024-07-19 01:27:30,299:INFO:Creating metrics dataframe
2024-07-19 01:27:30,301:INFO:Uploading results into container
2024-07-19 01:27:30,302:INFO:Uploading model into container now
2024-07-19 01:27:30,302:INFO:_master_model_container: 8
2024-07-19 01:27:30,302:INFO:_display_container: 2
2024-07-19 01:27:30,302:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:27:30,302:INFO:create_model() successfully completed......................................
2024-07-19 01:27:30,438:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:30,438:INFO:Creating metrics dataframe
2024-07-19 01:27:30,445:INFO:Initializing Ada Boost Classifier
2024-07-19 01:27:30,445:INFO:Total runtime is 0.21374255021413166 minutes
2024-07-19 01:27:30,448:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:30,448:INFO:Initializing create_model()
2024-07-19 01:27:30,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:30,448:INFO:Checking exceptions
2024-07-19 01:27:30,448:INFO:Importing libraries
2024-07-19 01:27:30,448:INFO:Copying training dataset
2024-07-19 01:27:30,454:INFO:Defining folds
2024-07-19 01:27:30,454:INFO:Declaring metric variables
2024-07-19 01:27:30,457:INFO:Importing untrained model
2024-07-19 01:27:30,460:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:27:30,466:INFO:Starting cross validation
2024-07-19 01:27:30,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:30,492:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,494:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,498:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,499:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,501:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,503:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,504:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,509:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,510:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:30,517:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:27:31,141:INFO:Calculating mean and std
2024-07-19 01:27:31,142:INFO:Creating metrics dataframe
2024-07-19 01:27:31,144:INFO:Uploading results into container
2024-07-19 01:27:31,144:INFO:Uploading model into container now
2024-07-19 01:27:31,145:INFO:_master_model_container: 9
2024-07-19 01:27:31,145:INFO:_display_container: 2
2024-07-19 01:27:31,145:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=55)
2024-07-19 01:27:31,145:INFO:create_model() successfully completed......................................
2024-07-19 01:27:31,282:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:31,282:INFO:Creating metrics dataframe
2024-07-19 01:27:31,288:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:27:31,288:INFO:Total runtime is 0.22779229482014973 minutes
2024-07-19 01:27:31,291:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:31,291:INFO:Initializing create_model()
2024-07-19 01:27:31,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:31,292:INFO:Checking exceptions
2024-07-19 01:27:31,292:INFO:Importing libraries
2024-07-19 01:27:31,292:INFO:Copying training dataset
2024-07-19 01:27:31,298:INFO:Defining folds
2024-07-19 01:27:31,298:INFO:Declaring metric variables
2024-07-19 01:27:31,300:INFO:Importing untrained model
2024-07-19 01:27:31,303:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:27:31,310:INFO:Starting cross validation
2024-07-19 01:27:31,311:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:33,697:INFO:Calculating mean and std
2024-07-19 01:27:33,698:INFO:Creating metrics dataframe
2024-07-19 01:27:33,700:INFO:Uploading results into container
2024-07-19 01:27:33,700:INFO:Uploading model into container now
2024-07-19 01:27:33,700:INFO:_master_model_container: 10
2024-07-19 01:27:33,701:INFO:_display_container: 2
2024-07-19 01:27:33,701:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=55, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:27:33,701:INFO:create_model() successfully completed......................................
2024-07-19 01:27:33,840:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:33,841:INFO:Creating metrics dataframe
2024-07-19 01:27:33,847:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:27:33,848:INFO:Total runtime is 0.270468533039093 minutes
2024-07-19 01:27:33,851:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:33,851:INFO:Initializing create_model()
2024-07-19 01:27:33,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:33,851:INFO:Checking exceptions
2024-07-19 01:27:33,851:INFO:Importing libraries
2024-07-19 01:27:33,851:INFO:Copying training dataset
2024-07-19 01:27:33,858:INFO:Defining folds
2024-07-19 01:27:33,858:INFO:Declaring metric variables
2024-07-19 01:27:33,861:INFO:Importing untrained model
2024-07-19 01:27:33,864:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:27:33,869:INFO:Starting cross validation
2024-07-19 01:27:33,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:33,922:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:33,928:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:33,930:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:33,933:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:33,935:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:33,947:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:33,960:INFO:Calculating mean and std
2024-07-19 01:27:33,961:INFO:Creating metrics dataframe
2024-07-19 01:27:33,963:INFO:Uploading results into container
2024-07-19 01:27:33,963:INFO:Uploading model into container now
2024-07-19 01:27:33,963:INFO:_master_model_container: 11
2024-07-19 01:27:33,964:INFO:_display_container: 2
2024-07-19 01:27:33,964:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:27:33,964:INFO:create_model() successfully completed......................................
2024-07-19 01:27:34,097:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:34,097:INFO:Creating metrics dataframe
2024-07-19 01:27:34,104:INFO:Initializing Extra Trees Classifier
2024-07-19 01:27:34,104:INFO:Total runtime is 0.27472165822982786 minutes
2024-07-19 01:27:34,107:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:34,107:INFO:Initializing create_model()
2024-07-19 01:27:34,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:34,108:INFO:Checking exceptions
2024-07-19 01:27:34,108:INFO:Importing libraries
2024-07-19 01:27:34,108:INFO:Copying training dataset
2024-07-19 01:27:34,113:INFO:Defining folds
2024-07-19 01:27:34,114:INFO:Declaring metric variables
2024-07-19 01:27:34,116:INFO:Importing untrained model
2024-07-19 01:27:34,120:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:27:34,124:INFO:Starting cross validation
2024-07-19 01:27:34,125:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:34,942:INFO:Calculating mean and std
2024-07-19 01:27:34,943:INFO:Creating metrics dataframe
2024-07-19 01:27:34,945:INFO:Uploading results into container
2024-07-19 01:27:34,945:INFO:Uploading model into container now
2024-07-19 01:27:34,946:INFO:_master_model_container: 12
2024-07-19 01:27:34,946:INFO:_display_container: 2
2024-07-19 01:27:34,946:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=55, verbose=0,
                     warm_start=False)
2024-07-19 01:27:34,946:INFO:create_model() successfully completed......................................
2024-07-19 01:27:35,081:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:35,081:INFO:Creating metrics dataframe
2024-07-19 01:27:35,088:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:27:35,088:INFO:Total runtime is 0.29112716515858966 minutes
2024-07-19 01:27:35,091:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:35,092:INFO:Initializing create_model()
2024-07-19 01:27:35,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:35,092:INFO:Checking exceptions
2024-07-19 01:27:35,092:INFO:Importing libraries
2024-07-19 01:27:35,092:INFO:Copying training dataset
2024-07-19 01:27:35,098:INFO:Defining folds
2024-07-19 01:27:35,098:INFO:Declaring metric variables
2024-07-19 01:27:35,102:INFO:Importing untrained model
2024-07-19 01:27:35,104:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:27:35,110:INFO:Starting cross validation
2024-07-19 01:27:35,110:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:35,531:INFO:Calculating mean and std
2024-07-19 01:27:35,533:INFO:Creating metrics dataframe
2024-07-19 01:27:35,534:INFO:Uploading results into container
2024-07-19 01:27:35,535:INFO:Uploading model into container now
2024-07-19 01:27:35,535:INFO:_master_model_container: 13
2024-07-19 01:27:35,535:INFO:_display_container: 2
2024-07-19 01:27:35,536:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:27:35,536:INFO:create_model() successfully completed......................................
2024-07-19 01:27:35,671:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:35,671:INFO:Creating metrics dataframe
2024-07-19 01:27:35,678:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:27:35,679:INFO:Total runtime is 0.3009828209877014 minutes
2024-07-19 01:27:35,682:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:35,682:INFO:Initializing create_model()
2024-07-19 01:27:35,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:35,682:INFO:Checking exceptions
2024-07-19 01:27:35,682:INFO:Importing libraries
2024-07-19 01:27:35,682:INFO:Copying training dataset
2024-07-19 01:27:35,688:INFO:Defining folds
2024-07-19 01:27:35,691:INFO:Declaring metric variables
2024-07-19 01:27:35,694:INFO:Importing untrained model
2024-07-19 01:27:35,697:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:27:35,701:INFO:Starting cross validation
2024-07-19 01:27:35,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:36,837:INFO:Calculating mean and std
2024-07-19 01:27:36,837:INFO:Creating metrics dataframe
2024-07-19 01:27:36,843:INFO:Uploading results into container
2024-07-19 01:27:36,843:INFO:Uploading model into container now
2024-07-19 01:27:36,843:INFO:_master_model_container: 14
2024-07-19 01:27:36,843:INFO:_display_container: 2
2024-07-19 01:27:36,843:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=55, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:27:36,843:INFO:create_model() successfully completed......................................
2024-07-19 01:27:37,001:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:37,001:INFO:Creating metrics dataframe
2024-07-19 01:27:37,009:INFO:Initializing CatBoost Classifier
2024-07-19 01:27:37,009:INFO:Total runtime is 0.3231412172317505 minutes
2024-07-19 01:27:37,012:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:37,012:INFO:Initializing create_model()
2024-07-19 01:27:37,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:37,012:INFO:Checking exceptions
2024-07-19 01:27:37,012:INFO:Importing libraries
2024-07-19 01:27:37,012:INFO:Copying training dataset
2024-07-19 01:27:37,019:INFO:Defining folds
2024-07-19 01:27:37,019:INFO:Declaring metric variables
2024-07-19 01:27:37,021:INFO:Importing untrained model
2024-07-19 01:27:37,024:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:27:37,029:INFO:Starting cross validation
2024-07-19 01:27:37,030:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:54,369:INFO:Calculating mean and std
2024-07-19 01:27:54,370:INFO:Creating metrics dataframe
2024-07-19 01:27:54,372:INFO:Uploading results into container
2024-07-19 01:27:54,373:INFO:Uploading model into container now
2024-07-19 01:27:54,373:INFO:_master_model_container: 15
2024-07-19 01:27:54,373:INFO:_display_container: 2
2024-07-19 01:27:54,373:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BEBB13F0>
2024-07-19 01:27:54,373:INFO:create_model() successfully completed......................................
2024-07-19 01:27:54,525:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:54,525:INFO:Creating metrics dataframe
2024-07-19 01:27:54,533:INFO:Initializing Dummy Classifier
2024-07-19 01:27:54,533:INFO:Total runtime is 0.6152072429656983 minutes
2024-07-19 01:27:54,536:INFO:SubProcess create_model() called ==================================
2024-07-19 01:27:54,536:INFO:Initializing create_model()
2024-07-19 01:27:54,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BEBB39A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:54,536:INFO:Checking exceptions
2024-07-19 01:27:54,536:INFO:Importing libraries
2024-07-19 01:27:54,536:INFO:Copying training dataset
2024-07-19 01:27:54,544:INFO:Defining folds
2024-07-19 01:27:54,544:INFO:Declaring metric variables
2024-07-19 01:27:54,547:INFO:Importing untrained model
2024-07-19 01:27:54,550:INFO:Dummy Classifier Imported successfully
2024-07-19 01:27:54,554:INFO:Starting cross validation
2024-07-19 01:27:54,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:27:54,590:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,592:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,599:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,601:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,606:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,608:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,613:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,614:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,616:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,618:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:27:54,632:INFO:Calculating mean and std
2024-07-19 01:27:54,633:INFO:Creating metrics dataframe
2024-07-19 01:27:54,634:INFO:Uploading results into container
2024-07-19 01:27:54,635:INFO:Uploading model into container now
2024-07-19 01:27:54,635:INFO:_master_model_container: 16
2024-07-19 01:27:54,635:INFO:_display_container: 2
2024-07-19 01:27:54,635:INFO:DummyClassifier(constant=None, random_state=55, strategy='prior')
2024-07-19 01:27:54,635:INFO:create_model() successfully completed......................................
2024-07-19 01:27:54,768:INFO:SubProcess create_model() end ==================================
2024-07-19 01:27:54,768:INFO:Creating metrics dataframe
2024-07-19 01:27:54,783:INFO:Initializing create_model()
2024-07-19 01:27:54,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BD8B7DF0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=55, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:27:54,783:INFO:Checking exceptions
2024-07-19 01:27:54,784:INFO:Importing libraries
2024-07-19 01:27:54,785:INFO:Copying training dataset
2024-07-19 01:27:54,790:INFO:Defining folds
2024-07-19 01:27:54,791:INFO:Declaring metric variables
2024-07-19 01:27:54,791:INFO:Importing untrained model
2024-07-19 01:27:54,791:INFO:Declaring custom model
2024-07-19 01:27:54,791:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:27:54,792:INFO:Cross validation set to False
2024-07-19 01:27:54,792:INFO:Fitting Model
2024-07-19 01:27:54,806:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-19 01:27:54,806:INFO:[LightGBM] [Info] Number of positive: 1525, number of negative: 5346
2024-07-19 01:27:54,807:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000520 seconds.
2024-07-19 01:27:54,807:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-19 01:27:54,807:INFO:[LightGBM] [Info] Total Bins 3050
2024-07-19 01:27:54,807:INFO:[LightGBM] [Info] Number of data points in the train set: 6871, number of used features: 15
2024-07-19 01:27:54,808:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.221947 -> initscore=-1.254354
2024-07-19 01:27:54,808:INFO:[LightGBM] [Info] Start training from score -1.254354
2024-07-19 01:27:54,868:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=55, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:27:54,868:INFO:create_model() successfully completed......................................
2024-07-19 01:27:55,042:INFO:_master_model_container: 16
2024-07-19 01:27:55,043:INFO:_display_container: 2
2024-07-19 01:27:55,043:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=55, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:27:55,043:INFO:compare_models() successfully completed......................................
2024-07-19 01:31:46,460:INFO:PyCaret ClassificationExperiment
2024-07-19 01:31:46,460:INFO:Logging name: clf-default-name
2024-07-19 01:31:46,460:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:31:46,460:INFO:version 3.3.2
2024-07-19 01:31:46,460:INFO:Initializing setup()
2024-07-19 01:31:46,460:INFO:self.USI: 5c1c
2024-07-19 01:31:46,460:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:31:46,460:INFO:Checking environment
2024-07-19 01:31:46,460:INFO:python_version: 3.10.11
2024-07-19 01:31:46,460:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:31:46,460:INFO:machine: AMD64
2024-07-19 01:31:46,460:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:31:46,467:INFO:Memory: svmem(total=16516247552, available=1913618432, percent=88.4, used=14602629120, free=1913618432)
2024-07-19 01:31:46,467:INFO:Physical Core: 8
2024-07-19 01:31:46,467:INFO:Logical Core: 16
2024-07-19 01:31:46,467:INFO:Checking libraries
2024-07-19 01:31:46,467:INFO:System:
2024-07-19 01:31:46,467:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:31:46,467:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:31:46,467:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:31:46,467:INFO:PyCaret required dependencies:
2024-07-19 01:31:46,467:INFO:                 pip: 24.1.2
2024-07-19 01:31:46,467:INFO:          setuptools: 65.5.0
2024-07-19 01:31:46,467:INFO:             pycaret: 3.3.2
2024-07-19 01:31:46,468:INFO:             IPython: 8.21.0
2024-07-19 01:31:46,468:INFO:          ipywidgets: 8.1.3
2024-07-19 01:31:46,468:INFO:                tqdm: 4.66.4
2024-07-19 01:31:46,468:INFO:               numpy: 1.26.4
2024-07-19 01:31:46,468:INFO:              pandas: 2.1.4
2024-07-19 01:31:46,468:INFO:              jinja2: 3.1.2
2024-07-19 01:31:46,468:INFO:               scipy: 1.11.4
2024-07-19 01:31:46,468:INFO:              joblib: 1.3.2
2024-07-19 01:31:46,468:INFO:             sklearn: 1.4.2
2024-07-19 01:31:46,468:INFO:                pyod: 2.0.1
2024-07-19 01:31:46,468:INFO:            imblearn: 0.12.2
2024-07-19 01:31:46,468:INFO:   category_encoders: 2.6.3
2024-07-19 01:31:46,468:INFO:            lightgbm: 4.3.0
2024-07-19 01:31:46,468:INFO:               numba: 0.60.0
2024-07-19 01:31:46,468:INFO:            requests: 2.32.3
2024-07-19 01:31:46,468:INFO:          matplotlib: 3.8.3
2024-07-19 01:31:46,468:INFO:          scikitplot: 0.3.7
2024-07-19 01:31:46,468:INFO:         yellowbrick: 1.5
2024-07-19 01:31:46,468:INFO:              plotly: 5.20.0
2024-07-19 01:31:46,468:INFO:    plotly-resampler: Not installed
2024-07-19 01:31:46,468:INFO:             kaleido: 0.2.1
2024-07-19 01:31:46,468:INFO:           schemdraw: 0.15
2024-07-19 01:31:46,468:INFO:         statsmodels: 0.14.2
2024-07-19 01:31:46,468:INFO:              sktime: 0.26.0
2024-07-19 01:31:46,468:INFO:               tbats: 1.1.3
2024-07-19 01:31:46,468:INFO:            pmdarima: 2.0.4
2024-07-19 01:31:46,468:INFO:              psutil: 5.9.8
2024-07-19 01:31:46,468:INFO:          markupsafe: 2.1.3
2024-07-19 01:31:46,468:INFO:             pickle5: Not installed
2024-07-19 01:31:46,468:INFO:         cloudpickle: 3.0.0
2024-07-19 01:31:46,468:INFO:         deprecation: 2.1.0
2024-07-19 01:31:46,468:INFO:              xxhash: 3.4.1
2024-07-19 01:31:46,468:INFO:           wurlitzer: Not installed
2024-07-19 01:31:46,468:INFO:PyCaret optional dependencies:
2024-07-19 01:31:46,468:INFO:                shap: 0.44.1
2024-07-19 01:31:46,468:INFO:           interpret: 0.6.2
2024-07-19 01:31:46,468:INFO:                umap: 0.5.6
2024-07-19 01:31:46,468:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:31:46,468:INFO:  explainerdashboard: Not installed
2024-07-19 01:31:46,469:INFO:             autoviz: Not installed
2024-07-19 01:31:46,469:INFO:           fairlearn: 0.7.0
2024-07-19 01:31:46,469:INFO:          deepchecks: Not installed
2024-07-19 01:31:46,469:INFO:             xgboost: 2.0.3
2024-07-19 01:31:46,469:INFO:            catboost: 1.2.5
2024-07-19 01:31:46,469:INFO:              kmodes: 0.12.2
2024-07-19 01:31:46,469:INFO:             mlxtend: 0.23.1
2024-07-19 01:31:46,469:INFO:       statsforecast: Not installed
2024-07-19 01:31:46,469:INFO:        tune_sklearn: Not installed
2024-07-19 01:31:46,469:INFO:                 ray: Not installed
2024-07-19 01:31:46,469:INFO:            hyperopt: 0.2.7
2024-07-19 01:31:46,469:INFO:              optuna: 3.6.1
2024-07-19 01:31:46,469:INFO:               skopt: 0.10.2
2024-07-19 01:31:46,469:INFO:              mlflow: Not installed
2024-07-19 01:31:46,469:INFO:              gradio: Not installed
2024-07-19 01:31:46,469:INFO:             fastapi: Not installed
2024-07-19 01:31:46,469:INFO:             uvicorn: 0.30.1
2024-07-19 01:31:46,469:INFO:              m2cgen: 0.10.0
2024-07-19 01:31:46,469:INFO:           evidently: Not installed
2024-07-19 01:31:46,469:INFO:               fugue: Not installed
2024-07-19 01:31:46,469:INFO:           streamlit: Not installed
2024-07-19 01:31:46,469:INFO:             prophet: Not installed
2024-07-19 01:31:46,469:INFO:None
2024-07-19 01:31:46,469:INFO:Set up data.
2024-07-19 01:31:46,488:INFO:Set up folding strategy.
2024-07-19 01:31:46,488:INFO:Set up train/test split.
2024-07-19 01:31:46,503:INFO:Set up index.
2024-07-19 01:31:46,503:INFO:Assigning column types.
2024-07-19 01:31:46,515:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:31:46,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:31:46,548:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:46,567:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:46,569:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:46,601:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:31:46,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:46,621:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:46,623:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:46,624:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:31:46,656:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:46,675:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:46,677:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:46,710:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:46,729:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:46,731:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:46,732:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:31:46,785:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:46,786:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:46,850:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:46,854:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:46,855:INFO:Preparing preprocessing pipeline...
2024-07-19 01:31:46,858:INFO:Set up simple imputation.
2024-07-19 01:31:46,864:INFO:Set up encoding of categorical features.
2024-07-19 01:31:46,866:INFO:Set up column name cleaning.
2024-07-19 01:31:47,029:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:31:47,034:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'Index',
                                             'Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Sent tnx', 'Received Tnx',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To A...
                                                                    'most sent '
                                                                    'token '
                                                                    'type',
                                                                    ' '
                                                                    'ERC20_most_rec_token_type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:31:47,034:INFO:Creating final display dataframe.
2024-07-19 01:31:47,416:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9841, 51)
4        Transformed data shape        (9841, 51)
5   Transformed train set shape        (6888, 51)
6    Transformed test set shape        (2953, 51)
7              Numeric features                47
8          Categorical features                 3
9      Rows with missing values             27.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              5c1c
2024-07-19 01:31:47,473:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:47,475:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:47,527:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:47,529:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:47,530:INFO:setup() successfully completed in 1.07s...............
2024-07-19 01:31:47,554:INFO:Initializing compare_models()
2024-07-19 01:31:47,555:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BEBA4850>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BEBA4850>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:31:47,555:INFO:Checking exceptions
2024-07-19 01:31:47,565:INFO:Preparing display monitor
2024-07-19 01:31:47,581:INFO:Initializing Logistic Regression
2024-07-19 01:31:47,581:INFO:Total runtime is 0.0 minutes
2024-07-19 01:31:47,584:INFO:SubProcess create_model() called ==================================
2024-07-19 01:31:47,584:INFO:Initializing create_model()
2024-07-19 01:31:47,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BEBA4850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BCF3AA70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:31:47,584:INFO:Checking exceptions
2024-07-19 01:31:47,585:INFO:Importing libraries
2024-07-19 01:31:47,585:INFO:Copying training dataset
2024-07-19 01:31:47,600:INFO:Defining folds
2024-07-19 01:31:47,600:INFO:Declaring metric variables
2024-07-19 01:31:47,603:INFO:Importing untrained model
2024-07-19 01:31:47,606:INFO:Logistic Regression Imported successfully
2024-07-19 01:31:47,611:INFO:Starting cross validation
2024-07-19 01:31:47,612:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:31:49,939:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:31:49,995:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:31:58,162:INFO:PyCaret ClassificationExperiment
2024-07-19 01:31:58,162:INFO:Logging name: clf-default-name
2024-07-19 01:31:58,162:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:31:58,162:INFO:version 3.3.2
2024-07-19 01:31:58,162:INFO:Initializing setup()
2024-07-19 01:31:58,162:INFO:self.USI: 3103
2024-07-19 01:31:58,162:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:31:58,162:INFO:Checking environment
2024-07-19 01:31:58,162:INFO:python_version: 3.10.11
2024-07-19 01:31:58,162:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:31:58,162:INFO:machine: AMD64
2024-07-19 01:31:58,162:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:31:58,167:INFO:Memory: svmem(total=16516247552, available=4869849088, percent=70.5, used=11646398464, free=4869849088)
2024-07-19 01:31:58,168:INFO:Physical Core: 8
2024-07-19 01:31:58,168:INFO:Logical Core: 16
2024-07-19 01:31:58,168:INFO:Checking libraries
2024-07-19 01:31:58,168:INFO:System:
2024-07-19 01:31:58,168:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:31:58,168:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:31:58,168:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:31:58,168:INFO:PyCaret required dependencies:
2024-07-19 01:31:58,168:INFO:                 pip: 24.1.2
2024-07-19 01:31:58,168:INFO:          setuptools: 65.5.0
2024-07-19 01:31:58,168:INFO:             pycaret: 3.3.2
2024-07-19 01:31:58,168:INFO:             IPython: 8.21.0
2024-07-19 01:31:58,168:INFO:          ipywidgets: 8.1.3
2024-07-19 01:31:58,168:INFO:                tqdm: 4.66.4
2024-07-19 01:31:58,168:INFO:               numpy: 1.26.4
2024-07-19 01:31:58,168:INFO:              pandas: 2.1.4
2024-07-19 01:31:58,168:INFO:              jinja2: 3.1.2
2024-07-19 01:31:58,168:INFO:               scipy: 1.11.4
2024-07-19 01:31:58,168:INFO:              joblib: 1.3.2
2024-07-19 01:31:58,168:INFO:             sklearn: 1.4.2
2024-07-19 01:31:58,168:INFO:                pyod: 2.0.1
2024-07-19 01:31:58,169:INFO:            imblearn: 0.12.2
2024-07-19 01:31:58,169:INFO:   category_encoders: 2.6.3
2024-07-19 01:31:58,169:INFO:            lightgbm: 4.3.0
2024-07-19 01:31:58,169:INFO:               numba: 0.60.0
2024-07-19 01:31:58,169:INFO:            requests: 2.32.3
2024-07-19 01:31:58,169:INFO:          matplotlib: 3.8.3
2024-07-19 01:31:58,169:INFO:          scikitplot: 0.3.7
2024-07-19 01:31:58,169:INFO:         yellowbrick: 1.5
2024-07-19 01:31:58,169:INFO:              plotly: 5.20.0
2024-07-19 01:31:58,169:INFO:    plotly-resampler: Not installed
2024-07-19 01:31:58,169:INFO:             kaleido: 0.2.1
2024-07-19 01:31:58,169:INFO:           schemdraw: 0.15
2024-07-19 01:31:58,169:INFO:         statsmodels: 0.14.2
2024-07-19 01:31:58,169:INFO:              sktime: 0.26.0
2024-07-19 01:31:58,169:INFO:               tbats: 1.1.3
2024-07-19 01:31:58,169:INFO:            pmdarima: 2.0.4
2024-07-19 01:31:58,169:INFO:              psutil: 5.9.8
2024-07-19 01:31:58,169:INFO:          markupsafe: 2.1.3
2024-07-19 01:31:58,169:INFO:             pickle5: Not installed
2024-07-19 01:31:58,169:INFO:         cloudpickle: 3.0.0
2024-07-19 01:31:58,169:INFO:         deprecation: 2.1.0
2024-07-19 01:31:58,169:INFO:              xxhash: 3.4.1
2024-07-19 01:31:58,169:INFO:           wurlitzer: Not installed
2024-07-19 01:31:58,169:INFO:PyCaret optional dependencies:
2024-07-19 01:31:58,169:INFO:                shap: 0.44.1
2024-07-19 01:31:58,169:INFO:           interpret: 0.6.2
2024-07-19 01:31:58,169:INFO:                umap: 0.5.6
2024-07-19 01:31:58,169:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:31:58,169:INFO:  explainerdashboard: Not installed
2024-07-19 01:31:58,169:INFO:             autoviz: Not installed
2024-07-19 01:31:58,169:INFO:           fairlearn: 0.7.0
2024-07-19 01:31:58,169:INFO:          deepchecks: Not installed
2024-07-19 01:31:58,169:INFO:             xgboost: 2.0.3
2024-07-19 01:31:58,169:INFO:            catboost: 1.2.5
2024-07-19 01:31:58,170:INFO:              kmodes: 0.12.2
2024-07-19 01:31:58,170:INFO:             mlxtend: 0.23.1
2024-07-19 01:31:58,170:INFO:       statsforecast: Not installed
2024-07-19 01:31:58,170:INFO:        tune_sklearn: Not installed
2024-07-19 01:31:58,170:INFO:                 ray: Not installed
2024-07-19 01:31:58,170:INFO:            hyperopt: 0.2.7
2024-07-19 01:31:58,170:INFO:              optuna: 3.6.1
2024-07-19 01:31:58,170:INFO:               skopt: 0.10.2
2024-07-19 01:31:58,170:INFO:              mlflow: Not installed
2024-07-19 01:31:58,170:INFO:              gradio: Not installed
2024-07-19 01:31:58,170:INFO:             fastapi: Not installed
2024-07-19 01:31:58,170:INFO:             uvicorn: 0.30.1
2024-07-19 01:31:58,170:INFO:              m2cgen: 0.10.0
2024-07-19 01:31:58,170:INFO:           evidently: Not installed
2024-07-19 01:31:58,170:INFO:               fugue: Not installed
2024-07-19 01:31:58,170:INFO:           streamlit: Not installed
2024-07-19 01:31:58,170:INFO:             prophet: Not installed
2024-07-19 01:31:58,170:INFO:None
2024-07-19 01:31:58,170:INFO:Set up data.
2024-07-19 01:31:58,192:INFO:Set up folding strategy.
2024-07-19 01:31:58,192:INFO:Set up train/test split.
2024-07-19 01:31:58,208:INFO:Set up index.
2024-07-19 01:31:58,208:INFO:Assigning column types.
2024-07-19 01:31:58,220:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:31:58,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:31:58,252:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:58,272:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:58,274:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:58,307:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:31:58,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:58,327:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:58,329:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:58,330:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:31:58,362:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:58,382:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:58,383:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:58,417:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:58,438:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:58,440:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:58,440:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:31:58,493:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:58,496:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:58,555:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:58,557:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:58,558:INFO:Preparing preprocessing pipeline...
2024-07-19 01:31:58,560:INFO:Set up simple imputation.
2024-07-19 01:31:58,566:INFO:Set up encoding of categorical features.
2024-07-19 01:31:58,567:INFO:Set up column name cleaning.
2024-07-19 01:31:58,701:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:31:58,705:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'Index',
                                             'Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Sent tnx', 'Received Tnx',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To A...
                                                                    'most sent '
                                                                    'token '
                                                                    'type',
                                                                    ' '
                                                                    'ERC20_most_rec_token_type'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:31:58,705:INFO:Creating final display dataframe.
2024-07-19 01:31:59,077:INFO:Setup _display_container:                     Description             Value
0                    Session id                85
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9841, 51)
4        Transformed data shape        (9841, 51)
5   Transformed train set shape        (6888, 51)
6    Transformed test set shape        (2953, 51)
7              Numeric features                47
8          Categorical features                 3
9      Rows with missing values             27.6%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              3103
2024-07-19 01:31:59,136:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,138:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,196:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,198:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,199:INFO:setup() successfully completed in 1.04s...............
2024-07-19 01:31:59,241:INFO:PyCaret ClassificationExperiment
2024-07-19 01:31:59,241:INFO:Logging name: clf-default-name
2024-07-19 01:31:59,241:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:31:59,241:INFO:version 3.3.2
2024-07-19 01:31:59,241:INFO:Initializing setup()
2024-07-19 01:31:59,241:INFO:self.USI: c1c5
2024-07-19 01:31:59,241:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:31:59,241:INFO:Checking environment
2024-07-19 01:31:59,241:INFO:python_version: 3.10.11
2024-07-19 01:31:59,241:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:31:59,241:INFO:machine: AMD64
2024-07-19 01:31:59,243:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:31:59,248:INFO:Memory: svmem(total=16516247552, available=4883767296, percent=70.4, used=11632480256, free=4883767296)
2024-07-19 01:31:59,248:INFO:Physical Core: 8
2024-07-19 01:31:59,248:INFO:Logical Core: 16
2024-07-19 01:31:59,248:INFO:Checking libraries
2024-07-19 01:31:59,248:INFO:System:
2024-07-19 01:31:59,248:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:31:59,248:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:31:59,248:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:31:59,248:INFO:PyCaret required dependencies:
2024-07-19 01:31:59,248:INFO:                 pip: 24.1.2
2024-07-19 01:31:59,248:INFO:          setuptools: 65.5.0
2024-07-19 01:31:59,248:INFO:             pycaret: 3.3.2
2024-07-19 01:31:59,248:INFO:             IPython: 8.21.0
2024-07-19 01:31:59,248:INFO:          ipywidgets: 8.1.3
2024-07-19 01:31:59,248:INFO:                tqdm: 4.66.4
2024-07-19 01:31:59,248:INFO:               numpy: 1.26.4
2024-07-19 01:31:59,248:INFO:              pandas: 2.1.4
2024-07-19 01:31:59,249:INFO:              jinja2: 3.1.2
2024-07-19 01:31:59,249:INFO:               scipy: 1.11.4
2024-07-19 01:31:59,249:INFO:              joblib: 1.3.2
2024-07-19 01:31:59,249:INFO:             sklearn: 1.4.2
2024-07-19 01:31:59,249:INFO:                pyod: 2.0.1
2024-07-19 01:31:59,249:INFO:            imblearn: 0.12.2
2024-07-19 01:31:59,249:INFO:   category_encoders: 2.6.3
2024-07-19 01:31:59,249:INFO:            lightgbm: 4.3.0
2024-07-19 01:31:59,249:INFO:               numba: 0.60.0
2024-07-19 01:31:59,249:INFO:            requests: 2.32.3
2024-07-19 01:31:59,249:INFO:          matplotlib: 3.8.3
2024-07-19 01:31:59,249:INFO:          scikitplot: 0.3.7
2024-07-19 01:31:59,249:INFO:         yellowbrick: 1.5
2024-07-19 01:31:59,249:INFO:              plotly: 5.20.0
2024-07-19 01:31:59,249:INFO:    plotly-resampler: Not installed
2024-07-19 01:31:59,249:INFO:             kaleido: 0.2.1
2024-07-19 01:31:59,249:INFO:           schemdraw: 0.15
2024-07-19 01:31:59,249:INFO:         statsmodels: 0.14.2
2024-07-19 01:31:59,249:INFO:              sktime: 0.26.0
2024-07-19 01:31:59,249:INFO:               tbats: 1.1.3
2024-07-19 01:31:59,249:INFO:            pmdarima: 2.0.4
2024-07-19 01:31:59,249:INFO:              psutil: 5.9.8
2024-07-19 01:31:59,249:INFO:          markupsafe: 2.1.3
2024-07-19 01:31:59,249:INFO:             pickle5: Not installed
2024-07-19 01:31:59,249:INFO:         cloudpickle: 3.0.0
2024-07-19 01:31:59,249:INFO:         deprecation: 2.1.0
2024-07-19 01:31:59,249:INFO:              xxhash: 3.4.1
2024-07-19 01:31:59,249:INFO:           wurlitzer: Not installed
2024-07-19 01:31:59,249:INFO:PyCaret optional dependencies:
2024-07-19 01:31:59,249:INFO:                shap: 0.44.1
2024-07-19 01:31:59,249:INFO:           interpret: 0.6.2
2024-07-19 01:31:59,249:INFO:                umap: 0.5.6
2024-07-19 01:31:59,249:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:31:59,249:INFO:  explainerdashboard: Not installed
2024-07-19 01:31:59,249:INFO:             autoviz: Not installed
2024-07-19 01:31:59,249:INFO:           fairlearn: 0.7.0
2024-07-19 01:31:59,250:INFO:          deepchecks: Not installed
2024-07-19 01:31:59,250:INFO:             xgboost: 2.0.3
2024-07-19 01:31:59,250:INFO:            catboost: 1.2.5
2024-07-19 01:31:59,250:INFO:              kmodes: 0.12.2
2024-07-19 01:31:59,250:INFO:             mlxtend: 0.23.1
2024-07-19 01:31:59,250:INFO:       statsforecast: Not installed
2024-07-19 01:31:59,250:INFO:        tune_sklearn: Not installed
2024-07-19 01:31:59,250:INFO:                 ray: Not installed
2024-07-19 01:31:59,250:INFO:            hyperopt: 0.2.7
2024-07-19 01:31:59,250:INFO:              optuna: 3.6.1
2024-07-19 01:31:59,250:INFO:               skopt: 0.10.2
2024-07-19 01:31:59,250:INFO:              mlflow: Not installed
2024-07-19 01:31:59,250:INFO:              gradio: Not installed
2024-07-19 01:31:59,250:INFO:             fastapi: Not installed
2024-07-19 01:31:59,250:INFO:             uvicorn: 0.30.1
2024-07-19 01:31:59,250:INFO:              m2cgen: 0.10.0
2024-07-19 01:31:59,250:INFO:           evidently: Not installed
2024-07-19 01:31:59,250:INFO:               fugue: Not installed
2024-07-19 01:31:59,250:INFO:           streamlit: Not installed
2024-07-19 01:31:59,250:INFO:             prophet: Not installed
2024-07-19 01:31:59,250:INFO:None
2024-07-19 01:31:59,250:INFO:Set up data.
2024-07-19 01:31:59,255:INFO:Set up folding strategy.
2024-07-19 01:31:59,255:INFO:Set up train/test split.
2024-07-19 01:31:59,261:INFO:Set up index.
2024-07-19 01:31:59,261:INFO:Assigning column types.
2024-07-19 01:31:59,265:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:31:59,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:31:59,298:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:59,318:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,319:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,352:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:31:59,352:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:59,373:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,375:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,375:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:31:59,407:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:59,427:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,430:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,467:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:31:59,488:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,490:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,490:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:31:59,572:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,574:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,627:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,630:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,631:INFO:Preparing preprocessing pipeline...
2024-07-19 01:31:59,632:INFO:Set up simple imputation.
2024-07-19 01:31:59,633:INFO:Set up column name cleaning.
2024-07-19 01:31:59,655:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:31:59,658:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To Addresses',
                                             'min value received',
                                             'max value receiv...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:31:59,658:INFO:Creating final display dataframe.
2024-07-19 01:31:59,727:INFO:Setup _display_container:                     Description             Value
0                    Session id                55
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9816, 16)
4        Transformed data shape        (9816, 16)
5   Transformed train set shape        (6871, 16)
6    Transformed test set shape        (2945, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c1c5
2024-07-19 01:31:59,784:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,787:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,841:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:31:59,843:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:31:59,844:INFO:setup() successfully completed in 0.6s...............
2024-07-19 01:31:59,867:INFO:Initializing compare_models()
2024-07-19 01:31:59,867:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:31:59,867:INFO:Checking exceptions
2024-07-19 01:31:59,873:INFO:Preparing display monitor
2024-07-19 01:31:59,890:INFO:Initializing Logistic Regression
2024-07-19 01:31:59,890:INFO:Total runtime is 0.0 minutes
2024-07-19 01:31:59,893:INFO:SubProcess create_model() called ==================================
2024-07-19 01:31:59,893:INFO:Initializing create_model()
2024-07-19 01:31:59,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:31:59,894:INFO:Checking exceptions
2024-07-19 01:31:59,894:INFO:Importing libraries
2024-07-19 01:31:59,894:INFO:Copying training dataset
2024-07-19 01:31:59,900:INFO:Defining folds
2024-07-19 01:31:59,901:INFO:Declaring metric variables
2024-07-19 01:31:59,904:INFO:Importing untrained model
2024-07-19 01:31:59,907:INFO:Logistic Regression Imported successfully
2024-07-19 01:31:59,912:INFO:Starting cross validation
2024-07-19 01:31:59,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:05,525:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,608:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,633:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,634:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,637:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,663:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,663:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,724:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,729:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,747:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:32:05,774:INFO:Calculating mean and std
2024-07-19 01:32:05,777:INFO:Creating metrics dataframe
2024-07-19 01:32:05,781:INFO:Uploading results into container
2024-07-19 01:32:05,782:INFO:Uploading model into container now
2024-07-19 01:32:05,782:INFO:_master_model_container: 1
2024-07-19 01:32:05,783:INFO:_display_container: 2
2024-07-19 01:32:05,783:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=55, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:32:05,783:INFO:create_model() successfully completed......................................
2024-07-19 01:32:05,955:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:05,955:INFO:Creating metrics dataframe
2024-07-19 01:32:05,960:INFO:Initializing K Neighbors Classifier
2024-07-19 01:32:05,960:INFO:Total runtime is 0.10116981665293376 minutes
2024-07-19 01:32:05,962:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:05,963:INFO:Initializing create_model()
2024-07-19 01:32:05,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:05,963:INFO:Checking exceptions
2024-07-19 01:32:05,963:INFO:Importing libraries
2024-07-19 01:32:05,963:INFO:Copying training dataset
2024-07-19 01:32:05,970:INFO:Defining folds
2024-07-19 01:32:05,970:INFO:Declaring metric variables
2024-07-19 01:32:05,974:INFO:Importing untrained model
2024-07-19 01:32:05,976:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:32:05,981:INFO:Starting cross validation
2024-07-19 01:32:05,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:09,625:INFO:Calculating mean and std
2024-07-19 01:32:09,627:INFO:Creating metrics dataframe
2024-07-19 01:32:09,629:INFO:Uploading results into container
2024-07-19 01:32:09,630:INFO:Uploading model into container now
2024-07-19 01:32:09,631:INFO:_master_model_container: 2
2024-07-19 01:32:09,631:INFO:_display_container: 2
2024-07-19 01:32:09,631:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:32:09,632:INFO:create_model() successfully completed......................................
2024-07-19 01:32:09,809:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:09,809:INFO:Creating metrics dataframe
2024-07-19 01:32:09,814:INFO:Initializing Naive Bayes
2024-07-19 01:32:09,815:INFO:Total runtime is 0.1654223839441935 minutes
2024-07-19 01:32:09,817:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:09,817:INFO:Initializing create_model()
2024-07-19 01:32:09,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:09,818:INFO:Checking exceptions
2024-07-19 01:32:09,818:INFO:Importing libraries
2024-07-19 01:32:09,818:INFO:Copying training dataset
2024-07-19 01:32:09,824:INFO:Defining folds
2024-07-19 01:32:09,824:INFO:Declaring metric variables
2024-07-19 01:32:09,827:INFO:Importing untrained model
2024-07-19 01:32:09,829:INFO:Naive Bayes Imported successfully
2024-07-19 01:32:09,835:INFO:Starting cross validation
2024-07-19 01:32:09,836:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:09,918:INFO:Calculating mean and std
2024-07-19 01:32:09,918:INFO:Creating metrics dataframe
2024-07-19 01:32:09,920:INFO:Uploading results into container
2024-07-19 01:32:09,920:INFO:Uploading model into container now
2024-07-19 01:32:09,920:INFO:_master_model_container: 3
2024-07-19 01:32:09,920:INFO:_display_container: 2
2024-07-19 01:32:09,921:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:32:09,921:INFO:create_model() successfully completed......................................
2024-07-19 01:32:10,056:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:10,057:INFO:Creating metrics dataframe
2024-07-19 01:32:10,061:INFO:Initializing Decision Tree Classifier
2024-07-19 01:32:10,061:INFO:Total runtime is 0.16952472130457558 minutes
2024-07-19 01:32:10,064:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:10,064:INFO:Initializing create_model()
2024-07-19 01:32:10,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:10,065:INFO:Checking exceptions
2024-07-19 01:32:10,065:INFO:Importing libraries
2024-07-19 01:32:10,065:INFO:Copying training dataset
2024-07-19 01:32:10,071:INFO:Defining folds
2024-07-19 01:32:10,071:INFO:Declaring metric variables
2024-07-19 01:32:10,074:INFO:Importing untrained model
2024-07-19 01:32:10,077:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:32:10,081:INFO:Starting cross validation
2024-07-19 01:32:10,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:10,228:INFO:Calculating mean and std
2024-07-19 01:32:10,229:INFO:Creating metrics dataframe
2024-07-19 01:32:10,231:INFO:Uploading results into container
2024-07-19 01:32:10,231:INFO:Uploading model into container now
2024-07-19 01:32:10,232:INFO:_master_model_container: 4
2024-07-19 01:32:10,232:INFO:_display_container: 2
2024-07-19 01:32:10,232:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=55, splitter='best')
2024-07-19 01:32:10,232:INFO:create_model() successfully completed......................................
2024-07-19 01:32:10,368:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:10,368:INFO:Creating metrics dataframe
2024-07-19 01:32:10,372:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:32:10,373:INFO:Total runtime is 0.1747248848279317 minutes
2024-07-19 01:32:10,374:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:10,376:INFO:Initializing create_model()
2024-07-19 01:32:10,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:10,376:INFO:Checking exceptions
2024-07-19 01:32:10,376:INFO:Importing libraries
2024-07-19 01:32:10,376:INFO:Copying training dataset
2024-07-19 01:32:10,382:INFO:Defining folds
2024-07-19 01:32:10,383:INFO:Declaring metric variables
2024-07-19 01:32:10,385:INFO:Importing untrained model
2024-07-19 01:32:10,389:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:32:10,393:INFO:Starting cross validation
2024-07-19 01:32:10,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:10,491:INFO:Calculating mean and std
2024-07-19 01:32:10,493:INFO:Creating metrics dataframe
2024-07-19 01:32:10,495:INFO:Uploading results into container
2024-07-19 01:32:10,495:INFO:Uploading model into container now
2024-07-19 01:32:10,496:INFO:_master_model_container: 5
2024-07-19 01:32:10,496:INFO:_display_container: 2
2024-07-19 01:32:10,496:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=55, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:32:10,497:INFO:create_model() successfully completed......................................
2024-07-19 01:32:10,634:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:10,634:INFO:Creating metrics dataframe
2024-07-19 01:32:10,640:INFO:Initializing Ridge Classifier
2024-07-19 01:32:10,640:INFO:Total runtime is 0.17917482852935787 minutes
2024-07-19 01:32:10,643:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:10,643:INFO:Initializing create_model()
2024-07-19 01:32:10,643:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:10,643:INFO:Checking exceptions
2024-07-19 01:32:10,643:INFO:Importing libraries
2024-07-19 01:32:10,643:INFO:Copying training dataset
2024-07-19 01:32:10,650:INFO:Defining folds
2024-07-19 01:32:10,650:INFO:Declaring metric variables
2024-07-19 01:32:10,653:INFO:Importing untrained model
2024-07-19 01:32:10,657:INFO:Ridge Classifier Imported successfully
2024-07-19 01:32:10,661:INFO:Starting cross validation
2024-07-19 01:32:10,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:10,740:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:10,742:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:10,750:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:10,762:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:10,764:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:10,767:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:10,785:INFO:Calculating mean and std
2024-07-19 01:32:10,786:INFO:Creating metrics dataframe
2024-07-19 01:32:10,788:INFO:Uploading results into container
2024-07-19 01:32:10,788:INFO:Uploading model into container now
2024-07-19 01:32:10,788:INFO:_master_model_container: 6
2024-07-19 01:32:10,789:INFO:_display_container: 2
2024-07-19 01:32:10,789:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=55, solver='auto',
                tol=0.0001)
2024-07-19 01:32:10,789:INFO:create_model() successfully completed......................................
2024-07-19 01:32:10,932:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:10,932:INFO:Creating metrics dataframe
2024-07-19 01:32:10,939:INFO:Initializing Random Forest Classifier
2024-07-19 01:32:10,939:INFO:Total runtime is 0.1841471711794535 minutes
2024-07-19 01:32:10,942:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:10,942:INFO:Initializing create_model()
2024-07-19 01:32:10,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:10,942:INFO:Checking exceptions
2024-07-19 01:32:10,942:INFO:Importing libraries
2024-07-19 01:32:10,942:INFO:Copying training dataset
2024-07-19 01:32:10,949:INFO:Defining folds
2024-07-19 01:32:10,949:INFO:Declaring metric variables
2024-07-19 01:32:10,952:INFO:Importing untrained model
2024-07-19 01:32:10,955:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:32:10,961:INFO:Starting cross validation
2024-07-19 01:32:10,962:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:12,063:INFO:Calculating mean and std
2024-07-19 01:32:12,064:INFO:Creating metrics dataframe
2024-07-19 01:32:12,066:INFO:Uploading results into container
2024-07-19 01:32:12,067:INFO:Uploading model into container now
2024-07-19 01:32:12,067:INFO:_master_model_container: 7
2024-07-19 01:32:12,067:INFO:_display_container: 2
2024-07-19 01:32:12,067:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=55, verbose=0,
                       warm_start=False)
2024-07-19 01:32:12,067:INFO:create_model() successfully completed......................................
2024-07-19 01:32:12,209:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:12,209:INFO:Creating metrics dataframe
2024-07-19 01:32:12,215:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:32:12,215:INFO:Total runtime is 0.20542038679122923 minutes
2024-07-19 01:32:12,218:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:12,218:INFO:Initializing create_model()
2024-07-19 01:32:12,218:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:12,218:INFO:Checking exceptions
2024-07-19 01:32:12,218:INFO:Importing libraries
2024-07-19 01:32:12,218:INFO:Copying training dataset
2024-07-19 01:32:12,224:INFO:Defining folds
2024-07-19 01:32:12,225:INFO:Declaring metric variables
2024-07-19 01:32:12,227:INFO:Importing untrained model
2024-07-19 01:32:12,231:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:32:12,235:INFO:Starting cross validation
2024-07-19 01:32:12,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:12,283:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-19 01:32:12,327:INFO:Calculating mean and std
2024-07-19 01:32:12,328:INFO:Creating metrics dataframe
2024-07-19 01:32:12,330:INFO:Uploading results into container
2024-07-19 01:32:12,331:INFO:Uploading model into container now
2024-07-19 01:32:12,331:INFO:_master_model_container: 8
2024-07-19 01:32:12,331:INFO:_display_container: 2
2024-07-19 01:32:12,331:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:32:12,331:INFO:create_model() successfully completed......................................
2024-07-19 01:32:12,468:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:12,469:INFO:Creating metrics dataframe
2024-07-19 01:32:12,474:INFO:Initializing Ada Boost Classifier
2024-07-19 01:32:12,474:INFO:Total runtime is 0.20973728497823077 minutes
2024-07-19 01:32:12,476:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:12,477:INFO:Initializing create_model()
2024-07-19 01:32:12,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:12,477:INFO:Checking exceptions
2024-07-19 01:32:12,477:INFO:Importing libraries
2024-07-19 01:32:12,477:INFO:Copying training dataset
2024-07-19 01:32:12,484:INFO:Defining folds
2024-07-19 01:32:12,484:INFO:Declaring metric variables
2024-07-19 01:32:12,487:INFO:Importing untrained model
2024-07-19 01:32:12,490:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:32:12,494:INFO:Starting cross validation
2024-07-19 01:32:12,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:12,523:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,526:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,528:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,530:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,532:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,539:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,542:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,543:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,546:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:12,552:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:32:13,184:INFO:Calculating mean and std
2024-07-19 01:32:13,185:INFO:Creating metrics dataframe
2024-07-19 01:32:13,187:INFO:Uploading results into container
2024-07-19 01:32:13,187:INFO:Uploading model into container now
2024-07-19 01:32:13,187:INFO:_master_model_container: 9
2024-07-19 01:32:13,187:INFO:_display_container: 2
2024-07-19 01:32:13,188:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=55)
2024-07-19 01:32:13,188:INFO:create_model() successfully completed......................................
2024-07-19 01:32:13,324:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:13,325:INFO:Creating metrics dataframe
2024-07-19 01:32:13,331:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:32:13,331:INFO:Total runtime is 0.22401763200759886 minutes
2024-07-19 01:32:13,334:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:13,334:INFO:Initializing create_model()
2024-07-19 01:32:13,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:13,334:INFO:Checking exceptions
2024-07-19 01:32:13,334:INFO:Importing libraries
2024-07-19 01:32:13,334:INFO:Copying training dataset
2024-07-19 01:32:13,342:INFO:Defining folds
2024-07-19 01:32:13,342:INFO:Declaring metric variables
2024-07-19 01:32:13,346:INFO:Importing untrained model
2024-07-19 01:32:13,352:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:32:13,360:INFO:Starting cross validation
2024-07-19 01:32:13,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:15,779:INFO:Calculating mean and std
2024-07-19 01:32:15,781:INFO:Creating metrics dataframe
2024-07-19 01:32:15,783:INFO:Uploading results into container
2024-07-19 01:32:15,783:INFO:Uploading model into container now
2024-07-19 01:32:15,784:INFO:_master_model_container: 10
2024-07-19 01:32:15,784:INFO:_display_container: 2
2024-07-19 01:32:15,784:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=55, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:32:15,784:INFO:create_model() successfully completed......................................
2024-07-19 01:32:15,922:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:15,922:INFO:Creating metrics dataframe
2024-07-19 01:32:15,928:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:32:15,928:INFO:Total runtime is 0.2672988971074422 minutes
2024-07-19 01:32:15,931:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:15,931:INFO:Initializing create_model()
2024-07-19 01:32:15,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:15,932:INFO:Checking exceptions
2024-07-19 01:32:15,932:INFO:Importing libraries
2024-07-19 01:32:15,932:INFO:Copying training dataset
2024-07-19 01:32:15,938:INFO:Defining folds
2024-07-19 01:32:15,938:INFO:Declaring metric variables
2024-07-19 01:32:15,941:INFO:Importing untrained model
2024-07-19 01:32:15,944:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:32:15,949:INFO:Starting cross validation
2024-07-19 01:32:15,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:16,009:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:16,011:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:16,013:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:16,023:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:16,025:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:16,033:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:16,042:INFO:Calculating mean and std
2024-07-19 01:32:16,043:INFO:Creating metrics dataframe
2024-07-19 01:32:16,044:INFO:Uploading results into container
2024-07-19 01:32:16,045:INFO:Uploading model into container now
2024-07-19 01:32:16,045:INFO:_master_model_container: 11
2024-07-19 01:32:16,045:INFO:_display_container: 2
2024-07-19 01:32:16,046:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:32:16,046:INFO:create_model() successfully completed......................................
2024-07-19 01:32:16,182:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:16,182:INFO:Creating metrics dataframe
2024-07-19 01:32:16,188:INFO:Initializing Extra Trees Classifier
2024-07-19 01:32:16,188:INFO:Total runtime is 0.27162710030873616 minutes
2024-07-19 01:32:16,191:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:16,191:INFO:Initializing create_model()
2024-07-19 01:32:16,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:16,191:INFO:Checking exceptions
2024-07-19 01:32:16,191:INFO:Importing libraries
2024-07-19 01:32:16,191:INFO:Copying training dataset
2024-07-19 01:32:16,198:INFO:Defining folds
2024-07-19 01:32:16,198:INFO:Declaring metric variables
2024-07-19 01:32:16,201:INFO:Importing untrained model
2024-07-19 01:32:16,203:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:32:16,208:INFO:Starting cross validation
2024-07-19 01:32:16,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:16,941:INFO:Calculating mean and std
2024-07-19 01:32:16,942:INFO:Creating metrics dataframe
2024-07-19 01:32:16,944:INFO:Uploading results into container
2024-07-19 01:32:16,945:INFO:Uploading model into container now
2024-07-19 01:32:16,945:INFO:_master_model_container: 12
2024-07-19 01:32:16,945:INFO:_display_container: 2
2024-07-19 01:32:16,945:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=55, verbose=0,
                     warm_start=False)
2024-07-19 01:32:16,945:INFO:create_model() successfully completed......................................
2024-07-19 01:32:17,089:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:17,089:INFO:Creating metrics dataframe
2024-07-19 01:32:17,095:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:32:17,095:INFO:Total runtime is 0.28675334056218466 minutes
2024-07-19 01:32:17,098:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:17,098:INFO:Initializing create_model()
2024-07-19 01:32:17,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:17,098:INFO:Checking exceptions
2024-07-19 01:32:17,098:INFO:Importing libraries
2024-07-19 01:32:17,099:INFO:Copying training dataset
2024-07-19 01:32:17,104:INFO:Defining folds
2024-07-19 01:32:17,104:INFO:Declaring metric variables
2024-07-19 01:32:17,107:INFO:Importing untrained model
2024-07-19 01:32:17,127:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:32:17,136:INFO:Starting cross validation
2024-07-19 01:32:17,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:17,626:INFO:Calculating mean and std
2024-07-19 01:32:17,628:INFO:Creating metrics dataframe
2024-07-19 01:32:17,630:INFO:Uploading results into container
2024-07-19 01:32:17,630:INFO:Uploading model into container now
2024-07-19 01:32:17,631:INFO:_master_model_container: 13
2024-07-19 01:32:17,631:INFO:_display_container: 2
2024-07-19 01:32:17,632:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:32:17,632:INFO:create_model() successfully completed......................................
2024-07-19 01:32:17,769:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:17,769:INFO:Creating metrics dataframe
2024-07-19 01:32:17,776:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:32:17,776:INFO:Total runtime is 0.2981017430623372 minutes
2024-07-19 01:32:17,780:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:17,780:INFO:Initializing create_model()
2024-07-19 01:32:17,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:17,781:INFO:Checking exceptions
2024-07-19 01:32:17,781:INFO:Importing libraries
2024-07-19 01:32:17,781:INFO:Copying training dataset
2024-07-19 01:32:17,787:INFO:Defining folds
2024-07-19 01:32:17,787:INFO:Declaring metric variables
2024-07-19 01:32:17,790:INFO:Importing untrained model
2024-07-19 01:32:17,794:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:32:17,799:INFO:Starting cross validation
2024-07-19 01:32:17,799:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:18,939:INFO:Calculating mean and std
2024-07-19 01:32:18,941:INFO:Creating metrics dataframe
2024-07-19 01:32:18,943:INFO:Uploading results into container
2024-07-19 01:32:18,944:INFO:Uploading model into container now
2024-07-19 01:32:18,945:INFO:_master_model_container: 14
2024-07-19 01:32:18,945:INFO:_display_container: 2
2024-07-19 01:32:18,946:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=55, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:32:18,946:INFO:create_model() successfully completed......................................
2024-07-19 01:32:19,112:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:19,112:INFO:Creating metrics dataframe
2024-07-19 01:32:19,119:INFO:Initializing CatBoost Classifier
2024-07-19 01:32:19,119:INFO:Total runtime is 0.3204888820648193 minutes
2024-07-19 01:32:19,122:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:19,122:INFO:Initializing create_model()
2024-07-19 01:32:19,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:19,122:INFO:Checking exceptions
2024-07-19 01:32:19,122:INFO:Importing libraries
2024-07-19 01:32:19,122:INFO:Copying training dataset
2024-07-19 01:32:19,128:INFO:Defining folds
2024-07-19 01:32:19,128:INFO:Declaring metric variables
2024-07-19 01:32:19,132:INFO:Importing untrained model
2024-07-19 01:32:19,136:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:32:19,141:INFO:Starting cross validation
2024-07-19 01:32:19,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:35,819:INFO:Calculating mean and std
2024-07-19 01:32:35,820:INFO:Creating metrics dataframe
2024-07-19 01:32:35,822:INFO:Uploading results into container
2024-07-19 01:32:35,823:INFO:Uploading model into container now
2024-07-19 01:32:35,823:INFO:_master_model_container: 15
2024-07-19 01:32:35,823:INFO:_display_container: 2
2024-07-19 01:32:35,823:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BF789210>
2024-07-19 01:32:35,823:INFO:create_model() successfully completed......................................
2024-07-19 01:32:35,960:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:35,960:INFO:Creating metrics dataframe
2024-07-19 01:32:35,967:INFO:Initializing Dummy Classifier
2024-07-19 01:32:35,967:INFO:Total runtime is 0.6012767672538757 minutes
2024-07-19 01:32:35,969:INFO:SubProcess create_model() called ==================================
2024-07-19 01:32:35,969:INFO:Initializing create_model()
2024-07-19 01:32:35,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191C0E9CD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:35,970:INFO:Checking exceptions
2024-07-19 01:32:35,970:INFO:Importing libraries
2024-07-19 01:32:35,970:INFO:Copying training dataset
2024-07-19 01:32:35,976:INFO:Defining folds
2024-07-19 01:32:35,976:INFO:Declaring metric variables
2024-07-19 01:32:35,979:INFO:Importing untrained model
2024-07-19 01:32:35,982:INFO:Dummy Classifier Imported successfully
2024-07-19 01:32:35,987:INFO:Starting cross validation
2024-07-19 01:32:35,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:32:36,055:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,057:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,063:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,064:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,067:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,070:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,077:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,078:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,082:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,090:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:32:36,112:INFO:Calculating mean and std
2024-07-19 01:32:36,113:INFO:Creating metrics dataframe
2024-07-19 01:32:36,115:INFO:Uploading results into container
2024-07-19 01:32:36,116:INFO:Uploading model into container now
2024-07-19 01:32:36,117:INFO:_master_model_container: 16
2024-07-19 01:32:36,117:INFO:_display_container: 2
2024-07-19 01:32:36,117:INFO:DummyClassifier(constant=None, random_state=55, strategy='prior')
2024-07-19 01:32:36,117:INFO:create_model() successfully completed......................................
2024-07-19 01:32:36,255:INFO:SubProcess create_model() end ==================================
2024-07-19 01:32:36,255:INFO:Creating metrics dataframe
2024-07-19 01:32:36,271:INFO:Initializing create_model()
2024-07-19 01:32:36,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF410E20>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=55, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:32:36,272:INFO:Checking exceptions
2024-07-19 01:32:36,274:INFO:Importing libraries
2024-07-19 01:32:36,275:INFO:Copying training dataset
2024-07-19 01:32:36,283:INFO:Defining folds
2024-07-19 01:32:36,283:INFO:Declaring metric variables
2024-07-19 01:32:36,283:INFO:Importing untrained model
2024-07-19 01:32:36,283:INFO:Declaring custom model
2024-07-19 01:32:36,284:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:32:36,285:INFO:Cross validation set to False
2024-07-19 01:32:36,285:INFO:Fitting Model
2024-07-19 01:32:36,297:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-19 01:32:36,298:INFO:[LightGBM] [Info] Number of positive: 1525, number of negative: 5346
2024-07-19 01:32:36,298:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000374 seconds.
2024-07-19 01:32:36,299:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-19 01:32:36,299:INFO:[LightGBM] [Info] Total Bins 3050
2024-07-19 01:32:36,299:INFO:[LightGBM] [Info] Number of data points in the train set: 6871, number of used features: 15
2024-07-19 01:32:36,299:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.221947 -> initscore=-1.254354
2024-07-19 01:32:36,299:INFO:[LightGBM] [Info] Start training from score -1.254354
2024-07-19 01:32:36,363:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=55, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:32:36,363:INFO:create_model() successfully completed......................................
2024-07-19 01:32:36,542:INFO:_master_model_container: 16
2024-07-19 01:32:36,542:INFO:_display_container: 2
2024-07-19 01:32:36,543:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=55, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:32:36,543:INFO:compare_models() successfully completed......................................
2024-07-19 01:36:39,474:INFO:PyCaret ClassificationExperiment
2024-07-19 01:36:39,475:INFO:Logging name: clf-default-name
2024-07-19 01:36:39,475:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-19 01:36:39,475:INFO:version 3.3.2
2024-07-19 01:36:39,475:INFO:Initializing setup()
2024-07-19 01:36:39,475:INFO:self.USI: 35bc
2024-07-19 01:36:39,475:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'fix_imbalance', 'idx', 'X_train', 'y_train', 'is_multiclass', 'logging_param', 'fold_generator', 'data', 'pipeline', 'exp_id', 'fold_shuffle_param', 'log_plots_param', 'USI', 'memory', 'target_param', 'X', 'X_test', 'gpu_n_jobs_param', 'seed', '_ml_usecase', 'gpu_param', 'html_param', 'y_test', 'n_jobs_param', 'y', '_available_plots'}
2024-07-19 01:36:39,475:INFO:Checking environment
2024-07-19 01:36:39,475:INFO:python_version: 3.10.11
2024-07-19 01:36:39,475:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2024-07-19 01:36:39,475:INFO:machine: AMD64
2024-07-19 01:36:39,475:INFO:platform: Windows-10-10.0.22631-SP0
2024-07-19 01:36:39,482:INFO:Memory: svmem(total=16516247552, available=2052403200, percent=87.6, used=14463844352, free=2052403200)
2024-07-19 01:36:39,482:INFO:Physical Core: 8
2024-07-19 01:36:39,482:INFO:Logical Core: 16
2024-07-19 01:36:39,482:INFO:Checking libraries
2024-07-19 01:36:39,482:INFO:System:
2024-07-19 01:36:39,482:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2024-07-19 01:36:39,483:INFO:executable: c:\Users\pobla\AppData\Local\Programs\Python\Python310\python.exe
2024-07-19 01:36:39,483:INFO:   machine: Windows-10-10.0.22631-SP0
2024-07-19 01:36:39,483:INFO:PyCaret required dependencies:
2024-07-19 01:36:39,483:INFO:                 pip: 24.1.2
2024-07-19 01:36:39,483:INFO:          setuptools: 65.5.0
2024-07-19 01:36:39,483:INFO:             pycaret: 3.3.2
2024-07-19 01:36:39,483:INFO:             IPython: 8.21.0
2024-07-19 01:36:39,483:INFO:          ipywidgets: 8.1.3
2024-07-19 01:36:39,483:INFO:                tqdm: 4.66.4
2024-07-19 01:36:39,483:INFO:               numpy: 1.26.4
2024-07-19 01:36:39,483:INFO:              pandas: 2.1.4
2024-07-19 01:36:39,483:INFO:              jinja2: 3.1.2
2024-07-19 01:36:39,483:INFO:               scipy: 1.11.4
2024-07-19 01:36:39,483:INFO:              joblib: 1.3.2
2024-07-19 01:36:39,483:INFO:             sklearn: 1.4.2
2024-07-19 01:36:39,483:INFO:                pyod: 2.0.1
2024-07-19 01:36:39,483:INFO:            imblearn: 0.12.2
2024-07-19 01:36:39,483:INFO:   category_encoders: 2.6.3
2024-07-19 01:36:39,483:INFO:            lightgbm: 4.3.0
2024-07-19 01:36:39,483:INFO:               numba: 0.60.0
2024-07-19 01:36:39,483:INFO:            requests: 2.32.3
2024-07-19 01:36:39,483:INFO:          matplotlib: 3.8.3
2024-07-19 01:36:39,483:INFO:          scikitplot: 0.3.7
2024-07-19 01:36:39,483:INFO:         yellowbrick: 1.5
2024-07-19 01:36:39,483:INFO:              plotly: 5.20.0
2024-07-19 01:36:39,483:INFO:    plotly-resampler: Not installed
2024-07-19 01:36:39,483:INFO:             kaleido: 0.2.1
2024-07-19 01:36:39,483:INFO:           schemdraw: 0.15
2024-07-19 01:36:39,483:INFO:         statsmodels: 0.14.2
2024-07-19 01:36:39,483:INFO:              sktime: 0.26.0
2024-07-19 01:36:39,483:INFO:               tbats: 1.1.3
2024-07-19 01:36:39,483:INFO:            pmdarima: 2.0.4
2024-07-19 01:36:39,483:INFO:              psutil: 5.9.8
2024-07-19 01:36:39,484:INFO:          markupsafe: 2.1.3
2024-07-19 01:36:39,484:INFO:             pickle5: Not installed
2024-07-19 01:36:39,484:INFO:         cloudpickle: 3.0.0
2024-07-19 01:36:39,484:INFO:         deprecation: 2.1.0
2024-07-19 01:36:39,484:INFO:              xxhash: 3.4.1
2024-07-19 01:36:39,484:INFO:           wurlitzer: Not installed
2024-07-19 01:36:39,484:INFO:PyCaret optional dependencies:
2024-07-19 01:36:39,484:INFO:                shap: 0.44.1
2024-07-19 01:36:39,484:INFO:           interpret: 0.6.2
2024-07-19 01:36:39,484:INFO:                umap: 0.5.6
2024-07-19 01:36:39,484:INFO:     ydata_profiling: 4.9.0
2024-07-19 01:36:39,484:INFO:  explainerdashboard: Not installed
2024-07-19 01:36:39,484:INFO:             autoviz: Not installed
2024-07-19 01:36:39,484:INFO:           fairlearn: 0.7.0
2024-07-19 01:36:39,484:INFO:          deepchecks: Not installed
2024-07-19 01:36:39,484:INFO:             xgboost: 2.0.3
2024-07-19 01:36:39,484:INFO:            catboost: 1.2.5
2024-07-19 01:36:39,484:INFO:              kmodes: 0.12.2
2024-07-19 01:36:39,484:INFO:             mlxtend: 0.23.1
2024-07-19 01:36:39,484:INFO:       statsforecast: Not installed
2024-07-19 01:36:39,484:INFO:        tune_sklearn: Not installed
2024-07-19 01:36:39,484:INFO:                 ray: Not installed
2024-07-19 01:36:39,484:INFO:            hyperopt: 0.2.7
2024-07-19 01:36:39,484:INFO:              optuna: 3.6.1
2024-07-19 01:36:39,484:INFO:               skopt: 0.10.2
2024-07-19 01:36:39,484:INFO:              mlflow: Not installed
2024-07-19 01:36:39,484:INFO:              gradio: Not installed
2024-07-19 01:36:39,484:INFO:             fastapi: Not installed
2024-07-19 01:36:39,484:INFO:             uvicorn: 0.30.1
2024-07-19 01:36:39,484:INFO:              m2cgen: 0.10.0
2024-07-19 01:36:39,484:INFO:           evidently: Not installed
2024-07-19 01:36:39,484:INFO:               fugue: Not installed
2024-07-19 01:36:39,484:INFO:           streamlit: Not installed
2024-07-19 01:36:39,484:INFO:             prophet: Not installed
2024-07-19 01:36:39,484:INFO:None
2024-07-19 01:36:39,485:INFO:Set up data.
2024-07-19 01:36:39,491:INFO:Set up folding strategy.
2024-07-19 01:36:39,491:INFO:Set up train/test split.
2024-07-19 01:36:39,497:INFO:Set up index.
2024-07-19 01:36:39,498:INFO:Assigning column types.
2024-07-19 01:36:39,503:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-19 01:36:39,535:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:36:39,536:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:36:39,561:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:36:39,563:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:36:39,605:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-19 01:36:39,607:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:36:39,630:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:36:39,632:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:36:39,633:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-19 01:36:39,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:36:39,688:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:36:39,690:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:36:39,724:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-19 01:36:39,744:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:36:39,746:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:36:39,747:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-19 01:36:39,799:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:36:39,801:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:36:39,853:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:36:39,855:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:36:39,856:INFO:Preparing preprocessing pipeline...
2024-07-19 01:36:39,857:INFO:Set up simple imputation.
2024-07-19 01:36:39,858:INFO:Set up column name cleaning.
2024-07-19 01:36:39,881:INFO:Finished creating preprocessing pipeline.
2024-07-19 01:36:39,884:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pobla\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Avg min between sent tnx',
                                             'Avg min between received tnx',
                                             'Time Diff between first and last '
                                             '(Mins)',
                                             'Number of Created Contracts',
                                             'Unique Received From Addresses',
                                             'Unique Sent To Addresses',
                                             'min value received',
                                             'max value receiv...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-19 01:36:39,884:INFO:Creating final display dataframe.
2024-07-19 01:36:39,951:INFO:Setup _display_container:                     Description             Value
0                    Session id                99
1                        Target              FLAG
2                   Target type            Binary
3           Original data shape        (9816, 16)
4        Transformed data shape        (9816, 16)
5   Transformed train set shape        (6871, 16)
6    Transformed test set shape        (2945, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              35bc
2024-07-19 01:36:40,034:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:36:40,036:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:36:40,093:INFO:Soft dependency imported: xgboost: 2.0.3
2024-07-19 01:36:40,095:INFO:Soft dependency imported: catboost: 1.2.5
2024-07-19 01:36:40,096:INFO:setup() successfully completed in 0.62s...............
2024-07-19 01:36:42,406:INFO:Initializing compare_models()
2024-07-19 01:36:42,406:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-19 01:36:42,406:INFO:Checking exceptions
2024-07-19 01:36:42,411:INFO:Preparing display monitor
2024-07-19 01:36:42,428:INFO:Initializing Logistic Regression
2024-07-19 01:36:42,428:INFO:Total runtime is 0.0 minutes
2024-07-19 01:36:42,431:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:42,431:INFO:Initializing create_model()
2024-07-19 01:36:42,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:42,431:INFO:Checking exceptions
2024-07-19 01:36:42,431:INFO:Importing libraries
2024-07-19 01:36:42,431:INFO:Copying training dataset
2024-07-19 01:36:42,438:INFO:Defining folds
2024-07-19 01:36:42,438:INFO:Declaring metric variables
2024-07-19 01:36:42,442:INFO:Importing untrained model
2024-07-19 01:36:42,445:INFO:Logistic Regression Imported successfully
2024-07-19 01:36:42,459:INFO:Starting cross validation
2024-07-19 01:36:42,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:43,004:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,022:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,030:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,044:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,045:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:43,053:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,093:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,095:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,100:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,106:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:43,110:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,114:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:43,157:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-19 01:36:43,183:INFO:Calculating mean and std
2024-07-19 01:36:43,184:INFO:Creating metrics dataframe
2024-07-19 01:36:43,185:INFO:Uploading results into container
2024-07-19 01:36:43,186:INFO:Uploading model into container now
2024-07-19 01:36:43,186:INFO:_master_model_container: 1
2024-07-19 01:36:43,186:INFO:_display_container: 2
2024-07-19 01:36:43,186:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=99, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-19 01:36:43,186:INFO:create_model() successfully completed......................................
2024-07-19 01:36:43,366:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:43,366:INFO:Creating metrics dataframe
2024-07-19 01:36:43,371:INFO:Initializing K Neighbors Classifier
2024-07-19 01:36:43,371:INFO:Total runtime is 0.015703841050465902 minutes
2024-07-19 01:36:43,374:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:43,374:INFO:Initializing create_model()
2024-07-19 01:36:43,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:43,375:INFO:Checking exceptions
2024-07-19 01:36:43,375:INFO:Importing libraries
2024-07-19 01:36:43,375:INFO:Copying training dataset
2024-07-19 01:36:43,380:INFO:Defining folds
2024-07-19 01:36:43,380:INFO:Declaring metric variables
2024-07-19 01:36:43,383:INFO:Importing untrained model
2024-07-19 01:36:43,385:INFO:K Neighbors Classifier Imported successfully
2024-07-19 01:36:43,390:INFO:Starting cross validation
2024-07-19 01:36:43,391:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:43,627:INFO:Calculating mean and std
2024-07-19 01:36:43,628:INFO:Creating metrics dataframe
2024-07-19 01:36:43,630:INFO:Uploading results into container
2024-07-19 01:36:43,630:INFO:Uploading model into container now
2024-07-19 01:36:43,631:INFO:_master_model_container: 2
2024-07-19 01:36:43,631:INFO:_display_container: 2
2024-07-19 01:36:43,631:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-19 01:36:43,631:INFO:create_model() successfully completed......................................
2024-07-19 01:36:43,811:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:43,811:INFO:Creating metrics dataframe
2024-07-19 01:36:43,817:INFO:Initializing Naive Bayes
2024-07-19 01:36:43,817:INFO:Total runtime is 0.0231399933497111 minutes
2024-07-19 01:36:43,819:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:43,819:INFO:Initializing create_model()
2024-07-19 01:36:43,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:43,819:INFO:Checking exceptions
2024-07-19 01:36:43,819:INFO:Importing libraries
2024-07-19 01:36:43,820:INFO:Copying training dataset
2024-07-19 01:36:43,826:INFO:Defining folds
2024-07-19 01:36:43,826:INFO:Declaring metric variables
2024-07-19 01:36:43,829:INFO:Importing untrained model
2024-07-19 01:36:43,832:INFO:Naive Bayes Imported successfully
2024-07-19 01:36:43,836:INFO:Starting cross validation
2024-07-19 01:36:43,837:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:43,923:INFO:Calculating mean and std
2024-07-19 01:36:43,923:INFO:Creating metrics dataframe
2024-07-19 01:36:43,925:INFO:Uploading results into container
2024-07-19 01:36:43,925:INFO:Uploading model into container now
2024-07-19 01:36:43,925:INFO:_master_model_container: 3
2024-07-19 01:36:43,925:INFO:_display_container: 2
2024-07-19 01:36:43,926:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-19 01:36:43,926:INFO:create_model() successfully completed......................................
2024-07-19 01:36:44,101:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:44,101:INFO:Creating metrics dataframe
2024-07-19 01:36:44,106:INFO:Initializing Decision Tree Classifier
2024-07-19 01:36:44,107:INFO:Total runtime is 0.02797981103261312 minutes
2024-07-19 01:36:44,109:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:44,109:INFO:Initializing create_model()
2024-07-19 01:36:44,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:44,109:INFO:Checking exceptions
2024-07-19 01:36:44,109:INFO:Importing libraries
2024-07-19 01:36:44,110:INFO:Copying training dataset
2024-07-19 01:36:44,116:INFO:Defining folds
2024-07-19 01:36:44,116:INFO:Declaring metric variables
2024-07-19 01:36:44,119:INFO:Importing untrained model
2024-07-19 01:36:44,122:INFO:Decision Tree Classifier Imported successfully
2024-07-19 01:36:44,128:INFO:Starting cross validation
2024-07-19 01:36:44,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:44,281:INFO:Calculating mean and std
2024-07-19 01:36:44,283:INFO:Creating metrics dataframe
2024-07-19 01:36:44,284:INFO:Uploading results into container
2024-07-19 01:36:44,285:INFO:Uploading model into container now
2024-07-19 01:36:44,285:INFO:_master_model_container: 4
2024-07-19 01:36:44,285:INFO:_display_container: 2
2024-07-19 01:36:44,285:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=99, splitter='best')
2024-07-19 01:36:44,285:INFO:create_model() successfully completed......................................
2024-07-19 01:36:44,460:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:44,460:INFO:Creating metrics dataframe
2024-07-19 01:36:44,465:INFO:Initializing SVM - Linear Kernel
2024-07-19 01:36:44,466:INFO:Total runtime is 0.0339624563852946 minutes
2024-07-19 01:36:44,469:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:44,469:INFO:Initializing create_model()
2024-07-19 01:36:44,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:44,469:INFO:Checking exceptions
2024-07-19 01:36:44,469:INFO:Importing libraries
2024-07-19 01:36:44,469:INFO:Copying training dataset
2024-07-19 01:36:44,475:INFO:Defining folds
2024-07-19 01:36:44,476:INFO:Declaring metric variables
2024-07-19 01:36:44,479:INFO:Importing untrained model
2024-07-19 01:36:44,482:INFO:SVM - Linear Kernel Imported successfully
2024-07-19 01:36:44,487:INFO:Starting cross validation
2024-07-19 01:36:44,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:44,592:INFO:Calculating mean and std
2024-07-19 01:36:44,593:INFO:Creating metrics dataframe
2024-07-19 01:36:44,594:INFO:Uploading results into container
2024-07-19 01:36:44,595:INFO:Uploading model into container now
2024-07-19 01:36:44,595:INFO:_master_model_container: 5
2024-07-19 01:36:44,595:INFO:_display_container: 2
2024-07-19 01:36:44,596:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=99, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-19 01:36:44,596:INFO:create_model() successfully completed......................................
2024-07-19 01:36:44,793:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:44,793:INFO:Creating metrics dataframe
2024-07-19 01:36:44,800:INFO:Initializing Ridge Classifier
2024-07-19 01:36:44,800:INFO:Total runtime is 0.039519107341766356 minutes
2024-07-19 01:36:44,803:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:44,803:INFO:Initializing create_model()
2024-07-19 01:36:44,803:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:44,803:INFO:Checking exceptions
2024-07-19 01:36:44,803:INFO:Importing libraries
2024-07-19 01:36:44,804:INFO:Copying training dataset
2024-07-19 01:36:44,811:INFO:Defining folds
2024-07-19 01:36:44,811:INFO:Declaring metric variables
2024-07-19 01:36:44,814:INFO:Importing untrained model
2024-07-19 01:36:44,819:INFO:Ridge Classifier Imported successfully
2024-07-19 01:36:44,826:INFO:Starting cross validation
2024-07-19 01:36:44,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:44,878:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:44,884:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:44,890:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:44,890:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:44,891:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:44,897:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:44,898:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:44,898:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:44,916:INFO:Calculating mean and std
2024-07-19 01:36:44,917:INFO:Creating metrics dataframe
2024-07-19 01:36:44,918:INFO:Uploading results into container
2024-07-19 01:36:44,919:INFO:Uploading model into container now
2024-07-19 01:36:44,919:INFO:_master_model_container: 6
2024-07-19 01:36:44,919:INFO:_display_container: 2
2024-07-19 01:36:44,919:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=99, solver='auto',
                tol=0.0001)
2024-07-19 01:36:44,919:INFO:create_model() successfully completed......................................
2024-07-19 01:36:45,097:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:45,098:INFO:Creating metrics dataframe
2024-07-19 01:36:45,103:INFO:Initializing Random Forest Classifier
2024-07-19 01:36:45,103:INFO:Total runtime is 0.04457136789957682 minutes
2024-07-19 01:36:45,106:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:45,106:INFO:Initializing create_model()
2024-07-19 01:36:45,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:45,106:INFO:Checking exceptions
2024-07-19 01:36:45,106:INFO:Importing libraries
2024-07-19 01:36:45,106:INFO:Copying training dataset
2024-07-19 01:36:45,113:INFO:Defining folds
2024-07-19 01:36:45,113:INFO:Declaring metric variables
2024-07-19 01:36:45,116:INFO:Importing untrained model
2024-07-19 01:36:45,119:INFO:Random Forest Classifier Imported successfully
2024-07-19 01:36:45,124:INFO:Starting cross validation
2024-07-19 01:36:45,125:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:46,224:INFO:Calculating mean and std
2024-07-19 01:36:46,225:INFO:Creating metrics dataframe
2024-07-19 01:36:46,227:INFO:Uploading results into container
2024-07-19 01:36:46,227:INFO:Uploading model into container now
2024-07-19 01:36:46,227:INFO:_master_model_container: 7
2024-07-19 01:36:46,228:INFO:_display_container: 2
2024-07-19 01:36:46,228:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=99, verbose=0,
                       warm_start=False)
2024-07-19 01:36:46,228:INFO:create_model() successfully completed......................................
2024-07-19 01:36:46,397:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:46,397:INFO:Creating metrics dataframe
2024-07-19 01:36:46,403:INFO:Initializing Quadratic Discriminant Analysis
2024-07-19 01:36:46,403:INFO:Total runtime is 0.0662419080734253 minutes
2024-07-19 01:36:46,406:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:46,407:INFO:Initializing create_model()
2024-07-19 01:36:46,407:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:46,407:INFO:Checking exceptions
2024-07-19 01:36:46,407:INFO:Importing libraries
2024-07-19 01:36:46,407:INFO:Copying training dataset
2024-07-19 01:36:46,413:INFO:Defining folds
2024-07-19 01:36:46,413:INFO:Declaring metric variables
2024-07-19 01:36:46,417:INFO:Importing untrained model
2024-07-19 01:36:46,420:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-19 01:36:46,425:INFO:Starting cross validation
2024-07-19 01:36:46,426:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:46,519:INFO:Calculating mean and std
2024-07-19 01:36:46,521:INFO:Creating metrics dataframe
2024-07-19 01:36:46,523:INFO:Uploading results into container
2024-07-19 01:36:46,524:INFO:Uploading model into container now
2024-07-19 01:36:46,524:INFO:_master_model_container: 8
2024-07-19 01:36:46,524:INFO:_display_container: 2
2024-07-19 01:36:46,524:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-19 01:36:46,524:INFO:create_model() successfully completed......................................
2024-07-19 01:36:46,695:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:46,695:INFO:Creating metrics dataframe
2024-07-19 01:36:46,701:INFO:Initializing Ada Boost Classifier
2024-07-19 01:36:46,702:INFO:Total runtime is 0.07122106552124023 minutes
2024-07-19 01:36:46,704:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:46,704:INFO:Initializing create_model()
2024-07-19 01:36:46,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:46,704:INFO:Checking exceptions
2024-07-19 01:36:46,704:INFO:Importing libraries
2024-07-19 01:36:46,705:INFO:Copying training dataset
2024-07-19 01:36:46,711:INFO:Defining folds
2024-07-19 01:36:46,711:INFO:Declaring metric variables
2024-07-19 01:36:46,715:INFO:Importing untrained model
2024-07-19 01:36:46,717:INFO:Ada Boost Classifier Imported successfully
2024-07-19 01:36:46,723:INFO:Starting cross validation
2024-07-19 01:36:46,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:46,756:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,762:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,762:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,764:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,766:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,776:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,776:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,777:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,780:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:46,786:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-19 01:36:47,400:INFO:Calculating mean and std
2024-07-19 01:36:47,402:INFO:Creating metrics dataframe
2024-07-19 01:36:47,403:INFO:Uploading results into container
2024-07-19 01:36:47,404:INFO:Uploading model into container now
2024-07-19 01:36:47,404:INFO:_master_model_container: 9
2024-07-19 01:36:47,404:INFO:_display_container: 2
2024-07-19 01:36:47,405:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=99)
2024-07-19 01:36:47,405:INFO:create_model() successfully completed......................................
2024-07-19 01:36:47,581:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:47,582:INFO:Creating metrics dataframe
2024-07-19 01:36:47,588:INFO:Initializing Gradient Boosting Classifier
2024-07-19 01:36:47,588:INFO:Total runtime is 0.08600071668624877 minutes
2024-07-19 01:36:47,592:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:47,592:INFO:Initializing create_model()
2024-07-19 01:36:47,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:47,592:INFO:Checking exceptions
2024-07-19 01:36:47,592:INFO:Importing libraries
2024-07-19 01:36:47,592:INFO:Copying training dataset
2024-07-19 01:36:47,598:INFO:Defining folds
2024-07-19 01:36:47,598:INFO:Declaring metric variables
2024-07-19 01:36:47,601:INFO:Importing untrained model
2024-07-19 01:36:47,604:INFO:Gradient Boosting Classifier Imported successfully
2024-07-19 01:36:47,609:INFO:Starting cross validation
2024-07-19 01:36:47,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:49,927:INFO:Calculating mean and std
2024-07-19 01:36:49,928:INFO:Creating metrics dataframe
2024-07-19 01:36:49,930:INFO:Uploading results into container
2024-07-19 01:36:49,931:INFO:Uploading model into container now
2024-07-19 01:36:49,932:INFO:_master_model_container: 10
2024-07-19 01:36:49,932:INFO:_display_container: 2
2024-07-19 01:36:49,932:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=99, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-19 01:36:49,933:INFO:create_model() successfully completed......................................
2024-07-19 01:36:50,108:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:50,108:INFO:Creating metrics dataframe
2024-07-19 01:36:50,115:INFO:Initializing Linear Discriminant Analysis
2024-07-19 01:36:50,115:INFO:Total runtime is 0.12810572783152263 minutes
2024-07-19 01:36:50,117:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:50,117:INFO:Initializing create_model()
2024-07-19 01:36:50,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:50,117:INFO:Checking exceptions
2024-07-19 01:36:50,117:INFO:Importing libraries
2024-07-19 01:36:50,117:INFO:Copying training dataset
2024-07-19 01:36:50,124:INFO:Defining folds
2024-07-19 01:36:50,124:INFO:Declaring metric variables
2024-07-19 01:36:50,127:INFO:Importing untrained model
2024-07-19 01:36:50,130:INFO:Linear Discriminant Analysis Imported successfully
2024-07-19 01:36:50,136:INFO:Starting cross validation
2024-07-19 01:36:50,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:50,192:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:50,196:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:50,197:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:50,201:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:50,201:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:50,207:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:50,209:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:50,213:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:36:50,223:INFO:Calculating mean and std
2024-07-19 01:36:50,223:INFO:Creating metrics dataframe
2024-07-19 01:36:50,225:INFO:Uploading results into container
2024-07-19 01:36:50,225:INFO:Uploading model into container now
2024-07-19 01:36:50,225:INFO:_master_model_container: 11
2024-07-19 01:36:50,227:INFO:_display_container: 2
2024-07-19 01:36:50,227:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-19 01:36:50,227:INFO:create_model() successfully completed......................................
2024-07-19 01:36:50,403:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:50,403:INFO:Creating metrics dataframe
2024-07-19 01:36:50,410:INFO:Initializing Extra Trees Classifier
2024-07-19 01:36:50,410:INFO:Total runtime is 0.13303141991297404 minutes
2024-07-19 01:36:50,413:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:50,413:INFO:Initializing create_model()
2024-07-19 01:36:50,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:50,413:INFO:Checking exceptions
2024-07-19 01:36:50,413:INFO:Importing libraries
2024-07-19 01:36:50,413:INFO:Copying training dataset
2024-07-19 01:36:50,419:INFO:Defining folds
2024-07-19 01:36:50,419:INFO:Declaring metric variables
2024-07-19 01:36:50,421:INFO:Importing untrained model
2024-07-19 01:36:50,424:INFO:Extra Trees Classifier Imported successfully
2024-07-19 01:36:50,430:INFO:Starting cross validation
2024-07-19 01:36:50,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:51,154:INFO:Calculating mean and std
2024-07-19 01:36:51,154:INFO:Creating metrics dataframe
2024-07-19 01:36:51,157:INFO:Uploading results into container
2024-07-19 01:36:51,158:INFO:Uploading model into container now
2024-07-19 01:36:51,158:INFO:_master_model_container: 12
2024-07-19 01:36:51,158:INFO:_display_container: 2
2024-07-19 01:36:51,159:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=99, verbose=0,
                     warm_start=False)
2024-07-19 01:36:51,159:INFO:create_model() successfully completed......................................
2024-07-19 01:36:51,341:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:51,341:INFO:Creating metrics dataframe
2024-07-19 01:36:51,348:INFO:Initializing Extreme Gradient Boosting
2024-07-19 01:36:51,348:INFO:Total runtime is 0.1486558516820272 minutes
2024-07-19 01:36:51,351:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:51,351:INFO:Initializing create_model()
2024-07-19 01:36:51,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:51,352:INFO:Checking exceptions
2024-07-19 01:36:51,352:INFO:Importing libraries
2024-07-19 01:36:51,352:INFO:Copying training dataset
2024-07-19 01:36:51,359:INFO:Defining folds
2024-07-19 01:36:51,359:INFO:Declaring metric variables
2024-07-19 01:36:51,362:INFO:Importing untrained model
2024-07-19 01:36:51,365:INFO:Extreme Gradient Boosting Imported successfully
2024-07-19 01:36:51,369:INFO:Starting cross validation
2024-07-19 01:36:51,370:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:51,823:INFO:Calculating mean and std
2024-07-19 01:36:51,824:INFO:Creating metrics dataframe
2024-07-19 01:36:51,826:INFO:Uploading results into container
2024-07-19 01:36:51,826:INFO:Uploading model into container now
2024-07-19 01:36:51,826:INFO:_master_model_container: 13
2024-07-19 01:36:51,826:INFO:_display_container: 2
2024-07-19 01:36:51,827:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-07-19 01:36:51,827:INFO:create_model() successfully completed......................................
2024-07-19 01:36:51,996:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:51,996:INFO:Creating metrics dataframe
2024-07-19 01:36:52,002:INFO:Initializing Light Gradient Boosting Machine
2024-07-19 01:36:52,002:INFO:Total runtime is 0.15956573883692424 minutes
2024-07-19 01:36:52,005:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:52,005:INFO:Initializing create_model()
2024-07-19 01:36:52,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:52,006:INFO:Checking exceptions
2024-07-19 01:36:52,006:INFO:Importing libraries
2024-07-19 01:36:52,006:INFO:Copying training dataset
2024-07-19 01:36:52,014:INFO:Defining folds
2024-07-19 01:36:52,014:INFO:Declaring metric variables
2024-07-19 01:36:52,017:INFO:Importing untrained model
2024-07-19 01:36:52,020:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:36:52,025:INFO:Starting cross validation
2024-07-19 01:36:52,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:36:52,932:INFO:Calculating mean and std
2024-07-19 01:36:52,934:INFO:Creating metrics dataframe
2024-07-19 01:36:52,936:INFO:Uploading results into container
2024-07-19 01:36:52,937:INFO:Uploading model into container now
2024-07-19 01:36:52,938:INFO:_master_model_container: 14
2024-07-19 01:36:52,938:INFO:_display_container: 2
2024-07-19 01:36:52,939:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=99, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:36:52,939:INFO:create_model() successfully completed......................................
2024-07-19 01:36:53,136:INFO:SubProcess create_model() end ==================================
2024-07-19 01:36:53,137:INFO:Creating metrics dataframe
2024-07-19 01:36:53,144:INFO:Initializing CatBoost Classifier
2024-07-19 01:36:53,144:INFO:Total runtime is 0.17859132289886476 minutes
2024-07-19 01:36:53,146:INFO:SubProcess create_model() called ==================================
2024-07-19 01:36:53,146:INFO:Initializing create_model()
2024-07-19 01:36:53,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:36:53,147:INFO:Checking exceptions
2024-07-19 01:36:53,147:INFO:Importing libraries
2024-07-19 01:36:53,147:INFO:Copying training dataset
2024-07-19 01:36:53,153:INFO:Defining folds
2024-07-19 01:36:53,153:INFO:Declaring metric variables
2024-07-19 01:36:53,156:INFO:Importing untrained model
2024-07-19 01:36:53,159:INFO:CatBoost Classifier Imported successfully
2024-07-19 01:36:53,165:INFO:Starting cross validation
2024-07-19 01:36:53,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:37:09,105:INFO:Calculating mean and std
2024-07-19 01:37:09,107:INFO:Creating metrics dataframe
2024-07-19 01:37:09,108:INFO:Uploading results into container
2024-07-19 01:37:09,110:INFO:Uploading model into container now
2024-07-19 01:37:09,111:INFO:_master_model_container: 15
2024-07-19 01:37:09,111:INFO:_display_container: 2
2024-07-19 01:37:09,111:INFO:<catboost.core.CatBoostClassifier object at 0x00000191BF2C1DE0>
2024-07-19 01:37:09,111:INFO:create_model() successfully completed......................................
2024-07-19 01:37:09,328:INFO:SubProcess create_model() end ==================================
2024-07-19 01:37:09,328:INFO:Creating metrics dataframe
2024-07-19 01:37:09,336:INFO:Initializing Dummy Classifier
2024-07-19 01:37:09,336:INFO:Total runtime is 0.4484513441721598 minutes
2024-07-19 01:37:09,338:INFO:SubProcess create_model() called ==================================
2024-07-19 01:37:09,338:INFO:Initializing create_model()
2024-07-19 01:37:09,338:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000191BB802410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:37:09,339:INFO:Checking exceptions
2024-07-19 01:37:09,339:INFO:Importing libraries
2024-07-19 01:37:09,339:INFO:Copying training dataset
2024-07-19 01:37:09,346:INFO:Defining folds
2024-07-19 01:37:09,347:INFO:Declaring metric variables
2024-07-19 01:37:09,350:INFO:Importing untrained model
2024-07-19 01:37:09,352:INFO:Dummy Classifier Imported successfully
2024-07-19 01:37:09,357:INFO:Starting cross validation
2024-07-19 01:37:09,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-19 01:37:09,402:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,405:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,411:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,411:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,413:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,418:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,420:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,420:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,424:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,425:WARNING:c:\Users\pobla\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-19 01:37:09,436:INFO:Calculating mean and std
2024-07-19 01:37:09,436:INFO:Creating metrics dataframe
2024-07-19 01:37:09,437:INFO:Uploading results into container
2024-07-19 01:37:09,437:INFO:Uploading model into container now
2024-07-19 01:37:09,438:INFO:_master_model_container: 16
2024-07-19 01:37:09,438:INFO:_display_container: 2
2024-07-19 01:37:09,438:INFO:DummyClassifier(constant=None, random_state=99, strategy='prior')
2024-07-19 01:37:09,438:INFO:create_model() successfully completed......................................
2024-07-19 01:37:09,617:INFO:SubProcess create_model() end ==================================
2024-07-19 01:37:09,617:INFO:Creating metrics dataframe
2024-07-19 01:37:09,631:INFO:Initializing create_model()
2024-07-19 01:37:09,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000191BF5F36D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=99, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-19 01:37:09,632:INFO:Checking exceptions
2024-07-19 01:37:09,634:INFO:Importing libraries
2024-07-19 01:37:09,634:INFO:Copying training dataset
2024-07-19 01:37:09,639:INFO:Defining folds
2024-07-19 01:37:09,639:INFO:Declaring metric variables
2024-07-19 01:37:09,639:INFO:Importing untrained model
2024-07-19 01:37:09,639:INFO:Declaring custom model
2024-07-19 01:37:09,640:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-19 01:37:09,641:INFO:Cross validation set to False
2024-07-19 01:37:09,641:INFO:Fitting Model
2024-07-19 01:37:09,651:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-19 01:37:09,651:INFO:[LightGBM] [Info] Number of positive: 1525, number of negative: 5346
2024-07-19 01:37:09,651:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000382 seconds.
2024-07-19 01:37:09,651:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-07-19 01:37:09,652:INFO:[LightGBM] [Info] Total Bins 3049
2024-07-19 01:37:09,652:INFO:[LightGBM] [Info] Number of data points in the train set: 6871, number of used features: 15
2024-07-19 01:37:09,652:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.221947 -> initscore=-1.254354
2024-07-19 01:37:09,652:INFO:[LightGBM] [Info] Start training from score -1.254354
2024-07-19 01:37:09,721:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=99, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:37:09,721:INFO:create_model() successfully completed......................................
2024-07-19 01:37:09,935:INFO:_master_model_container: 16
2024-07-19 01:37:09,935:INFO:_display_container: 2
2024-07-19 01:37:09,935:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=99, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-19 01:37:09,935:INFO:compare_models() successfully completed......................................
